{"version":3,"sources":["mvc/user/user-custom-builds.js"],"names":["define","Utils","Ui","Form","Table","Collection","Backbone","extend","comparator","a","b","get","View","initialize","options","self","this","history_id","model","currHistoryPanel","Galaxy","id","Model","collection","url","root","message","installed_builds","optional","onchange","empty_text","error_text","table","Select","addHeader","value","setElement","listenTo","cls","selectable","_renderForm","fetch","$","append","text","_renderTable","$el","$installed","addClass","add","ButtonIcon","tooltip","onclick","destroy","$form","$help","name","label","test_param","type","data","sort","undefined","cases","inputs","help","Button","title","status","wait","success","error","initial_type","len_type","area","buttons","save","icon","form","create","response","update","err","responseJSON","err_msg","input_id","match","input_field","field_list","_renderHelp","empty","length","show","hide","html","_templateFasta","_templateLen"],"mappings":"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","file":"../../../scripts/mvc/user/user-custom-builds.js","sourcesContent":["/** This class renders the chart configuration form. */\ndefine(\n    [\"utils/utils\", \"mvc/ui/ui-misc\", \"mvc/form/form-view\", \"mvc/ui/ui-table\"],\n    function(Utils, Ui, Form, Table) {\n        var Collection = Backbone.Collection.extend({\n            comparator: function(a, b) {\n                a = a.get(\"name\");\n                b = b.get(\"name\");\n                return a > b ? 1 : a < b ? -1 : 0;\n            }\n        });\n\n        var View = Backbone.View.extend({\n            initialize: function(options) {\n                var self = this;\n                var history_id =\n                    Galaxy.currHistoryPanel && Galaxy.currHistoryPanel.model.id;\n                this.model = new Backbone.Model();\n                this.model.url =\n                    Galaxy.root +\n                    \"api/histories/\" +\n                    history_id +\n                    \"/custom_builds_metadata\";\n                this.collection = new Collection();\n                this.collection.url =\n                    Galaxy.root +\n                    \"api/users/\" +\n                    Galaxy.user.id +\n                    \"/custom_builds\";\n                this.message = new Ui.Message({});\n                this.installed_builds = new Ui.Select.View({\n                    optional: true,\n                    onchange: function() {\n                        self.installed_builds.value(null);\n                    },\n                    empty_text: \"List of available builds:\",\n                    error_text: \"No system installed builds available.\"\n                });\n                this.table = new Table.View({ cls: \"grid\", selectable: false });\n                this.table.addHeader(\"Name\");\n                this.table.addHeader(\"Key\");\n                this.table.addHeader(\"Number of chroms/contigs\");\n                this.table.addHeader(\"\");\n                this.table.appendHeader();\n                this.setElement(\n                    $(\"<div/>\")\n                        .append($(\"<h4/>\").text(\"Current Custom Builds\"))\n                        .append(this.table.$el)\n                        .append(\n                            (this.$installed = $(\"<div/>\")\n                                .append(\n                                    $(\"<h4/>\")\n                                        .text(\"System Installed Builds\")\n                                        .addClass(\"ui-margin-top\")\n                                )\n                                .append(this.installed_builds.$el))\n                        )\n                        .append(\n                            $(\"<h4/>\")\n                                .text(\"Add a Custom Build\")\n                                .addClass(\"ui-margin-top\")\n                        )\n                        .append(\n                            $(\"<span/>\")\n                                .addClass(\"ui-column\")\n                                .append(\n                                    $(\"<div/>\")\n                                        .addClass(\"ui-column-left\")\n                                        .append(this.message.$el)\n                                        .append(\n                                            (this.$form = $(\"<div/>\").addClass(\n                                                \"ui-margin-top\"\n                                            ))\n                                        )\n                                )\n                                .append(\n                                    (this.$help = $(\"<div/>\").addClass(\n                                        \"ui-column-right\"\n                                    ))\n                                )\n                        )\n                );\n                this.listenTo(this.collection, \"add remove reset\", function() {\n                    self._renderTable();\n                });\n                this.listenTo(this.model, \"change\", function() {\n                    self._renderForm();\n                });\n                this.collection.fetch();\n                this.model.fetch();\n            },\n\n            render: function() {\n                this._renderTable();\n                this._renderForm();\n            },\n\n            _renderTable: function() {\n                var self = this;\n                this.table.delAll();\n                this.collection.sort();\n                this.collection.each(function(model) {\n                    self.table.add(model.get(\"name\"));\n                    self.table.add(model.id);\n                    self.table.add(\n                        model.get(\"count\") !== undefined\n                            ? model.get(\"count\")\n                            : \"Processing...\"\n                    );\n                    self.table.add(\n                        new Ui.ButtonIcon({\n                            icon: \"fa-trash-o\",\n                            cls: \"ui-button-icon-plain\",\n                            tooltip: \"Delete custom build.\",\n                            onclick: function() {\n                                model.destroy();\n                            }\n                        }).$el\n                    );\n                    self.table.append(model.id);\n                });\n            },\n\n            _renderForm: function() {\n                var self = this;\n                var initial_type = \"fasta\";\n                var form = new Form({\n                    inputs: [\n                        {\n                            type: \"text\",\n                            name: \"name\",\n                            label: \"Name\",\n                            help: \"Specify a build name e.g. Hamster.\"\n                        },\n                        {\n                            type: \"text\",\n                            name: \"id\",\n                            label: \"Key\",\n                            help: \"Specify a build key e.g. hamster_v1.\"\n                        },\n                        {\n                            name: \"len\",\n                            type: \"conditional\",\n                            test_param: {\n                                name: \"type\",\n                                label: \"Definition\",\n                                help: \"Provide the data source.\",\n                                type: \"select\",\n                                value: initial_type,\n                                data: [\n                                    {\n                                        value: \"fasta\",\n                                        label: \"FASTA-file from history\"\n                                    },\n                                    {\n                                        value: \"file\",\n                                        label: \"Len-file from disk\"\n                                    },\n                                    {\n                                        value: \"text\",\n                                        label: \"Len-file by copy/paste\"\n                                    }\n                                ]\n                            },\n                            cases: [\n                                {\n                                    value: \"fasta\",\n                                    inputs: [\n                                        {\n                                            type: \"select\",\n                                            name: \"value\",\n                                            label: \"FASTA-file\",\n                                            data: this.model.get(\"fasta_hdas\")\n                                        }\n                                    ]\n                                },\n                                {\n                                    value: \"file\",\n                                    inputs: [\n                                        {\n                                            type: \"upload\",\n                                            name: \"value\",\n                                            label: \"Len-file\",\n                                            data: this.model.get(\"len_hdas\")\n                                        }\n                                    ]\n                                },\n                                {\n                                    value: \"text\",\n                                    inputs: [\n                                        {\n                                            type: \"text\",\n                                            area: true,\n                                            name: \"value\",\n                                            label: \"Edit/Paste\"\n                                        }\n                                    ]\n                                }\n                            ]\n                        }\n                    ],\n                    buttons: {\n                        save: new Ui.Button({\n                            icon: \"fa-save\",\n                            tooltip: \"Create new Build\",\n                            title: \"Save\",\n                            cls: \"btn btn-primary ui-clear-float\",\n                            onclick: function() {\n                                var data = form.data.create();\n                                if (!data.id || !data.name) {\n                                    self.message.update({\n                                        message: \"All inputs are required.\",\n                                        status: \"danger\"\n                                    });\n                                } else {\n                                    self.collection.create(data, {\n                                        wait: true,\n                                        success: function(response) {\n                                            if (response.get(\"message\")) {\n                                                self.message.update({\n                                                    message: response.get(\n                                                        \"message\"\n                                                    ),\n                                                    status: \"warning\"\n                                                });\n                                            } else {\n                                                self.message.update({\n                                                    message:\n                                                        \"Successfully added a new custom build.\",\n                                                    status: \"success\"\n                                                });\n                                            }\n                                        },\n                                        error: function(response, err) {\n                                            var message =\n                                                err &&\n                                                err.responseJSON &&\n                                                err.responseJSON.err_msg;\n                                            self.message.update({\n                                                message:\n                                                    message ||\n                                                    \"Failed to create custom build.\",\n                                                status: \"danger\"\n                                            });\n                                        }\n                                    });\n                                }\n                            }\n                        })\n                    },\n                    onchange: function() {\n                        var input_id = form.data.match(\"len|type\");\n                        if (input_id) {\n                            var input_field = form.field_list[input_id];\n                            self._renderHelp(input_field.value());\n                        }\n                    }\n                });\n                this.$form.empty().append(form.$el);\n                var installed_builds = this.model.get(\"installed_builds\");\n                if (installed_builds && installed_builds.length) {\n                    this.$installed.show();\n                    this.installed_builds.update(\n                        this.model.get(\"installed_builds\")\n                    );\n                } else {\n                    this.$installed.hide();\n                }\n                this._renderHelp(initial_type);\n            },\n\n            _renderHelp: function(len_type) {\n                this.$help\n                    .empty()\n                    .addClass(\"alert alert-info\")\n                    .html(\n                        len_type == \"fasta\"\n                            ? this._templateFasta()\n                            : this._templateLen()\n                    );\n            },\n\n            _templateLen: function() {\n                return (\n                    \"<h4>Length Format</h4>\" +\n                    \"<p>\" +\n                    \"The length format is two-column, separated by whitespace, of the form:\" +\n                    \"<pre>chrom/contig   length of chrom/contig</pre>\" +\n                    \"</p>\" +\n                    \"<p>\" +\n                    \"For example, the first few entries of <em>mm9.len</em> are as follows:\" +\n                    \"<pre>\" +\n                    \"chr1    197195432\\n\" +\n                    \"chr2    181748087\\n\" +\n                    \"chr3    159599783\\n\" +\n                    \"chr4    155630120\\n\" +\n                    \"chr5    152537259\" +\n                    \"</pre>\" +\n                    \"</p>\" +\n                    \"<p>Trackster uses this information to populate the select box for chrom/contig, and\" +\n                    \"to set the maximum basepair of the track browser. You may either upload a .len file\" +\n                    \"of this format (Len File option), or directly enter the information into the box \" +\n                    \"(Len Entry option).</p>\"\n                );\n            },\n\n            _templateFasta: function() {\n                return (\n                    \"<h4>FASTA format</h4>\" +\n                    \"<p>\" +\n                    \"This is a multi-fasta file from your current history that provides the genome\" +\n                    \"sequences for each chromosome/contig in your build.\" +\n                    \"</p>\" +\n                    \"<p>\" +\n                    \"Here is a snippet from an example multi-fasta file:\" +\n                    \"<pre>\" +\n                    \">chr1\\n\" +\n                    \"ATTATATATAAGACCACAGAGAGAATATTTTGCCCGG...\\n\\n\" +\n                    \">chr2\\n\" +\n                    \"GGCGGCCGCGGCGATATAGAACTACTCATTATATATA...\\n\\n\" +\n                    \"...\" +\n                    \"</pre>\" +\n                    \"</p>\"\n                );\n            }\n        });\n\n        return {\n            View: View\n        };\n    }\n);\n"]}