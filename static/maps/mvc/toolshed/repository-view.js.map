{"version":3,"sources":["mvc/toolshed/repository-view.js"],"names":["define","ToolShedRepositoryView","el","initialize","toolshed_model","RepositoryCollection","RepoDetails","Backbone","View","render","shed","tool_shed_url","this","model","_","defaults","repository_id","listenTo","params","tool_shed","replace","url","repo_details_template","models","options","repository","queue","current_changeset","current_metadata","repository_dependency_template","tps_template_global_select","tps_template_tool_select","tool_dependencies","shed_tool_conf","stc_html","queueLength","panel_section_dict","metadata","api_url","extend","changesets","checkInstalled","bindEvents","tools","repository_dependencies_template","templateRepoDependencies","that","templateRepoDependency","on","templateGlobalSectionSelect","templateToolSectionSelect","templateShedToolConf","tpsSelection","get","form","repositories","install_tool_dependencies","$","install_repository_dependencies","panelSelect","changeset","prepareInstall","find","repository_metadata","key","install_resolver_dependencies","attr","toolshed_util","addToQueue","val","default_tps","JSON","stringify","new_value","guid","clean","desc","Galaxy","tsr_id","data","ev","toolform","Utils","deepeach","text","input","info","each","modal","keys","Modal","modal_title","closing_events","title","hide","tool_panel_section","name","queued","installed","changeset_match","already_installed","substr","length","removeAttr","jstree","new_tool_panel_section","element_name","tool_guid","action","root","cls","FormView","inputs","type","indexOf","parse","localStorage","changeset_revision","queueKey","extensions","show","body","buttons","Close","owner","repoQueued","iri_parameters","doInstall","index","deleted","uninstalled","controller_url","navigate","new_route","template","prop","templateGlobalSectionCreate","templatePanelSelectOptions","tool_panel_section_id","reDraw","$el","empty","queue_key","queued_repos","hasOwnProperty","shed_url","new_tps","post","join","console","log","history","trigger","templateRepoDetails","templateToolDependency","templateToolSectionCreate"],"mappings":"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ACA,wJACA,SACA,6FACA,sGACA,mFACA,2FACA,yBACA,6CACA,uCACA,gEACA,uEACA,wGACA,0FACA,YACA,YACA,wMACA,6IACA,kIACA,SACA,SACA,wBACA,4DACA,gIACA,6BACA,oDACA,yEACA,uFACA,OACA,0FACA,oEACA,2BACA,wEACA,qGACA,OACA,SACA,4DACA,SACA,SACA,UACA,2DACA,qDACA,6BACA,kDACA,uEACA,mFACA,OACA,8CACA,mEACA,2EACA,OACA,8DACA,2BACA,kEACA,6FACA,OACA,SACA,8HACA,UACA,sGACA,4CACA,mBACA,gBACA,QACA,WACA,yBACA,4EACA,0EACA,mCACA,8BACA,qCACA,kCACA,QACA,YACA,WACA,WACA,SACA,SACA,UACA,yEACA,6IACA,6BACA,yDACA,kHACA,UACA,sGACA,4CACA,uBACA,mBACA,gHACA,WACA,6BACA,wDACA,0GACA,mCACA,wFACA,gPACA,SACA,QACA,mCACA,kDACA,0DACA,iHACA,QACA,QACA,YACA,WACA,WACA,SACA,SACA,UACA,UACA,UACFc,KAAK,KAGXvG,yBAA0B/B,EAAEwH,UAEpB,2DACA,iFACA,OACA,qDACA,2CACA,+DACA,oFACA,oDACA,YACA,UACA,QACA,QACA,UACFc,KAAK,KAGXrG,uBAAwBjC,EAAEwH,UAElB,4EACA,6HACA,2CACA,kCACA,+DACA,oFACA,oDACA,YACA,QACA,UACA,SACFc,KAAK,KAGXjG,qBAAsBrC,EAAEwH,UAEhB,iEACA,6BACA,yBACA,kBACA,kJACA,SACA,UACFc,KAAK,KAGXM,uBAAwB5I,EAAEwH,UAElB,2CACA,+DACA,qDACA,uEACA,8CACA,UACA,YACA,WACFc,KAAK,KAGXZ,4BAA6B1H,EAAEwH,UAEvB,gCACA,sCACA,yGACA,+FACA,mDACA,0EACA,SACA,SACA,UACFc,KAAK,KAGXnG,4BAA6BnC,EAAEwH,UAEvB,gCACA,sDACA,6BACA,yCACA,iDACA,sDACA,YACA,qFACA,mDACA,mFACA,SACA,SACA,SACA,UACFc,KAAK,KAGXO,0BAA2B7I,EAAEwH,UAErB,uFACA,+KACA,uLACA,UACFc,KAAK,KAGXlG,0BAA2BpC,EAAEwH,UAErB,6FACA,kMACA,sDACA,YACA,8NACA,yDACA,UACFc,KAAK,KAGXX,2BAA4B3H,EAAEwH,UAEtB,6CACA,iEACA,aACFc,KAAK","file":"../../../scripts/mvc/toolshed/repository-view.js","sourcesContent":["define(\n    [\n        \"mvc/toolshed/toolshed-model\",\n        \"libs/jquery/jstree\",\n        \"utils/utils\",\n        \"mvc/ui/ui-modal\",\n        \"mvc/form/form-view\",\n        \"mvc/toolshed/util\"\n    ],\n    function(toolshed_model, jstree, Utils, Modal, FormView, toolshed_util) {\n        var ToolShedRepositoryView = Backbone.View.extend({\n            el: \"#center\",\n\n            initialize: function(params) {\n                var self = this;\n                this.options = _.defaults(this.options || {}, this.defaults);\n                this.model = new toolshed_model.RepositoryCollection();\n                this.listenTo(this.model, \"sync\", this.render);\n                var shed = params.tool_shed.replace(/\\//g, \"%2f\");\n                this.model.url +=\n                    \"?tool_shed_url=\" +\n                    shed +\n                    \"&repository_id=\" +\n                    params.repository_id;\n                this.model.tool_shed_url = params.tool_shed.replace(\n                    /%2f/g,\n                    \"/\"\n                );\n                this.model.tool_shed = shed;\n                this.model.category = params.repository_id;\n                this.model.fetch();\n            },\n\n            render: function(options) {\n                var repo_details_template = this.templateRepoDetails;\n                var models = this.model.models[0];\n                this.options = {\n                    repository: models.get(\"repository\"),\n                    tool_shed: this.model.tool_shed,\n                    queue: toolshed_util.queueLength()\n                };\n                var changesets = Object.keys(this.options.repository.metadata);\n                this.options.current_changeset =\n                    this.options.current_changeset ||\n                    changesets[changesets.length - 1];\n                this.options.current_metadata = this.options.repository.metadata[\n                    this.options.current_changeset\n                ];\n                this.options.current_metadata.tool_shed_url = this.model.tool_shed_url;\n                this.options.tools = this.options.current_metadata.tools;\n                this.options.repository_dependencies_template = this.templateRepoDependencies;\n                this.options.repository_dependency_template = this.templateRepoDependency;\n                this.options.tps_template_global_select = this.templateGlobalSectionSelect;\n                this.options.tps_template_tool_select = this.templateToolSectionSelect;\n                this.options.tps_select_options = this.templatePanelSelectOptions;\n                this.options.tool_dependencies = models.get(\n                    \"tool_dependencies\"\n                );\n                this.options.shed_tool_conf = this.templateShedToolConf({\n                    stc_html: models.get(\"shed_conf\")\n                });\n                this.options.panel_section_dict = models.get(\n                    \"panel_section_dict\"\n                );\n                this.options.api_url =\n                    Galaxy.root +\n                    \"api/tool_shed_repositories/install?async=True\";\n                this.options = _.extend(this.options, options);\n                this.$el.html(repo_details_template(this.options));\n                this.checkInstalled(this.options.current_metadata);\n                this.bindEvents();\n                $(\"#center\").css(\"overflow\", \"auto\");\n            },\n\n            bindEvents: function() {\n                var that = this;\n                $(\"#changeset\").on(\"change\", function() {\n                    that.options.current_changeset = $(\"#changeset\")\n                        .find(\"option:selected\")\n                        .text();\n                    that.options.current_metadata =\n                        that.options.repository.metadata[\n                            that.options.current_changeset\n                        ];\n                    that.checkInstalled(that.options.current_metadata);\n                    that.reDraw();\n                });\n                $(\"#tool_panel_section_select\").on(\"change\", function() {\n                    that.tpsSelection();\n                });\n                $(\"#install_repository\").on(\"click\", function(ev) {\n                    var form = $(\"#repository_installation\");\n                    ev.preventDefault();\n                    var params = {};\n                    params.repositories = JSON.stringify([\n                        [\n                            $(\"#install_repository\").attr(\"data-tsrid\"),\n                            $(\"#changeset\")\n                                .find(\"option:selected\")\n                                .val()\n                        ]\n                    ]);\n                    params.tool_shed_repository_ids = JSON.stringify([\n                        $(\"#install_repository\").attr(\"data-tsrid\")\n                    ]);\n                    params.tool_shed_url = that.model.tool_shed_url;\n                    params.install_tool_dependencies = $(\n                        \"#install_tool_dependencies\"\n                    ).val();\n                    params.install_repository_dependencies = $(\n                        \"#install_repository_dependencies\"\n                    ).val();\n                    params.install_resolver_dependencies = $(\n                        \"#install_resolver_dependencies\"\n                    ).val();\n                    var tps = that.panelSelect(params);\n                    params.tool_panel_section = JSON.stringify(\n                        that.panelSelect(params)\n                    );\n                    params.shed_tool_conf = $(\"select[name='shed_tool_conf']\")\n                        .find(\"option:selected\")\n                        .val();\n                    params.changeset = $(\"#changeset\")\n                        .find(\"option:selected\")\n                        .val();\n                    var url = $(\"#repository_installation\").attr(\"action\");\n                    that.prepareInstall(params, url);\n                });\n                $(\"#queue_install\").on(\"click\", function(ev) {\n                    that.options.current_changeset = $(\"#changeset\")\n                        .find(\"option:selected\")\n                        .text();\n                    that.options.current_metadata =\n                        that.options.repository.metadata[\n                            that.options.current_changeset\n                        ];\n                    var changeset = that.options.current_changeset;\n                    var repository_metadata = {};\n                    _.each(Object.keys(that.options.current_metadata), function(\n                        key\n                    ) {\n                        if (!repository_metadata[key]) {\n                            repository_metadata[key] =\n                                that.options.current_metadata[key];\n                        }\n                    });\n                    repository_metadata.install_tool_dependencies = $(\n                        \"#install_tool_dependencies\"\n                    ).val();\n                    repository_metadata.install_repository_dependencies = $(\n                        \"#install_repository_dependencies\"\n                    ).val();\n                    repository_metadata.install_resolver_dependencies = $(\n                        \"#install_resolver_dependencies\"\n                    ).val();\n                    repository_metadata.tool_panel_section = JSON.stringify(\n                        that.panelSelect({})\n                    );\n                    repository_metadata.shed_tool_conf = $(\n                        \"select[name='shed_tool_conf']\"\n                    )\n                        .find(\"option:selected\")\n                        .val();\n                    repository_metadata.tool_shed_url =\n                        that.model.tool_shed_url;\n                    if (repository_metadata.tool_shed_url.substr(-1) == \"/\") {\n                        repository_metadata.tool_shed_url = repository_metadata.tool_shed_url.substr(\n                            0,\n                            repository_metadata.tool_shed_url.length - 1\n                        );\n                    }\n                    toolshed_util.addToQueue(repository_metadata);\n                    that.checkInstalled(repository_metadata);\n                });\n                $(\".tool_panel_section_picker\").on(\"change\", function() {\n                    var new_value = $(this)\n                        .find(\"option:selected\")\n                        .val();\n                    var default_tps = $(\"#tool_panel_section_select\")\n                        .find(\"option:selected\")\n                        .val();\n                    if (new_value == default_tps) {\n                        $(this).attr(\"default\", \"active\");\n                    } else {\n                        $(this).removeAttr(\"default\");\n                    }\n                });\n                $(function() {\n                    $(\"#repository_dependencies\").jstree();\n                });\n                $(\".tool_form\").on(\"click\", function() {\n                    var guid = $(this).attr(\"data-guid\");\n                    var clean = $(this).attr(\"data-clean\");\n                    var name = $(this).attr(\"data-name\");\n                    var desc = $(this).attr(\"data-desc\");\n                    var tool_shed_url = that.model.tool_shed_url;\n                    var tsr_id = $(\"#repository_details\").attr(\"data-tsrid\");\n                    var changeset = $(\"#changeset\")\n                        .find(\"option:selected\")\n                        .val();\n                    var api_url = Galaxy.root + \"api/tool_shed/tool_json\";\n                    var params = {\n                        guid: guid,\n                        tool_shed_url: tool_shed_url,\n                        tsr_id: tsr_id,\n                        changeset: changeset\n                    };\n                    $.get(api_url, params, function(data) {\n                        data.cls = \"ui-portlet-plain\";\n                        var toolform = new FormView(data);\n                        Utils.deepeach(data.inputs, function(input) {\n                            if (input.type) {\n                                if (\n                                    [\"data\", \"data_collection\"].indexOf(\n                                        input.type\n                                    ) != -1\n                                ) {\n                                    input.type = \"hidden\";\n                                    input.info =\n                                        \"Data input '\" +\n                                        input.name +\n                                        \"' (\" +\n                                        Utils.textify(input.extensions) +\n                                        \")\";\n                                }\n                            }\n                        });\n                        var modal = new Modal.View();\n                        var modal_title = \"<u>\" + name + \"</u> \" + desc;\n                        modal.show({\n                            closing_events: true,\n                            title: modal_title,\n                            body: toolform.$el,\n                            buttons: {\n                                Close: function() {\n                                    modal.hide();\n                                }\n                            }\n                        });\n                    });\n                });\n            },\n\n            checkInstalled: function(metadata) {\n                var that = this;\n                var params = { name: metadata.name, owner: metadata.owner };\n                var already_installed = false;\n                var queued = that.repoQueued(metadata);\n                $.get(\n                    Galaxy.root + \"api/tool_shed_repositories\",\n                    params,\n                    function(data) {\n                        for (var index = 0; index < data.length; index++) {\n                            var repository = data[index];\n                            var installed =\n                                !repository.deleted && !repository.uninstalled;\n                            var changeset_match =\n                                repository.changeset_revision ==\n                                    metadata.changeset_revision ||\n                                repository.installed_changeset_revision ==\n                                    metadata.changeset_revision;\n                            if (\n                                repository.name == metadata.repository.name &&\n                                repository.owner == metadata.repository.owner &&\n                                installed &&\n                                changeset_match\n                            ) {\n                                already_installed = true;\n                            }\n                            if (already_installed) {\n                                $(\"#install_repository\").prop(\"disabled\", true);\n                                $(\"#install_repository\").val(\n                                    \"This revision is already installed\"\n                                );\n                            } else {\n                                $(\"#install_repository\").prop(\n                                    \"disabled\",\n                                    false\n                                );\n                                $(\"#install_repository\").val(\n                                    \"Install this revision\"\n                                );\n                            }\n                        }\n                        if (that.repoQueued(metadata) || already_installed) {\n                            $(\"#queue_install\").hide();\n                            $(\"#queue_install\").val(\n                                \"This revision is already in the queue\"\n                            );\n                        } else {\n                            $(\"#queue_install\").show();\n                            $(\"#queue_install\").val(\n                                \"Install this revision later\"\n                            );\n                        }\n                    }\n                );\n            },\n\n            panelSelect: function(params) {\n                var tool_panel_section = {};\n                if ($(\"#tool_panel_section_select\").length) {\n                    params.tool_panel_section_id = $(\n                        \"#tool_panel_section_select\"\n                    )\n                        .find(\"option:selected\")\n                        .val();\n                } else {\n                    params.new_tool_panel_section = $(\n                        \"#new_tool_panel_section\"\n                    ).val();\n                }\n                $(\".tool_panel_section_picker\").each(function() {\n                    var element_name = $(this).attr(\"name\");\n                    var tool_guid = $(this).attr(\"data-toolguid\");\n                    if (element_name === \"tool_panel_section_id\") {\n                        tool_panel_section[tool_guid] = {\n                            tool_panel_section: $(this)\n                                .find(\"option:selected\")\n                                .val(),\n                            action: \"append\"\n                        };\n                    } else {\n                        tool_panel_section[tool_guid] = {\n                            tool_panel_section: $(this).val(),\n                            action: \"create\"\n                        };\n                    }\n                });\n                return tool_panel_section;\n            },\n\n            reDraw: function(options) {\n                this.$el.empty();\n                this.initialize(options);\n            },\n\n            repoQueued: function(metadata) {\n                var that = this;\n                if (!localStorage.repositories) {\n                    return;\n                }\n                var repository_queue = JSON.parse(localStorage.repositories);\n                var changeset = metadata.changeset_revision;\n                var queue_key = that.queueKey(metadata);\n                if (localStorage.repositories) {\n                    queued_repos = JSON.parse(localStorage.repositories);\n                }\n                if (queued_repos.hasOwnProperty(queue_key)) {\n                    return true;\n                }\n                return false;\n            },\n\n            queueKey: function(metadata) {\n                var shed_url = this.model.tool_shed_url;\n                // Make sure there is never a trailing slash on the shed URL.\n                if (shed_url.substr(-1) == \"/\") {\n                    shed_url = shed_url.substr(0, shed_url.length - 1);\n                }\n                return (\n                    shed_url +\n                    \"|\" +\n                    metadata.repository_id +\n                    \"|\" +\n                    metadata.changeset_revision\n                );\n            },\n\n            tpsSelection: function() {\n                new_tps = $(\"#tool_panel_section_select\")\n                    .find(\"option:selected\")\n                    .val();\n                $(\n                    '.tool_panel_section_picker[default=\"active\"]'\n                ).each(function() {\n                    $(this).val(new_tps);\n                });\n            },\n\n            prepareInstall: function(params, api_url) {\n                var that = this;\n                $.post(api_url, params, function(data) {\n                    var iri_parameters = JSON.parse(data);\n                    that.doInstall(iri_parameters);\n                });\n            },\n\n            doInstall: function(params) {\n                var controller_url =\n                    Galaxy.root + \"admin_toolshed/install_repositories\";\n                var repositories = params.repositories;\n                var new_route = \"status/r/\" + repositories.join(\"|\");\n                $.post(controller_url, params, function(data) {\n                    console.log(\n                        \"Initializing repository installation succeeded\"\n                    );\n                });\n                Backbone.history.navigate(new_route, {\n                    trigger: true,\n                    replace: true\n                });\n            },\n\n            templateRepoDetails: _.template(\n                [\n                    '<div class=\"unified-panel-header\" id=\"panel_header\" unselectable=\"on\">',\n                    '<div class=\"unified-panel-header-inner\">Repository information for <strong><%= repository.name %></strong> from <strong><%= repository.owner %></strong></div>',\n                    '<div class=\"unified-panel-header-inner\" style=\"position: absolute; right: 5px; top: 0px;\"><a href=\"#/queue\">Repository Queue (<%= queue %>)</a></div>',\n                    \"</div>\",\n                    '<div class=\"unified-panel-body\" id=\"repository_details\" data-tsrid=\"<%= repository.id %>\">',\n                    '<form id=\"repository_installation\" name=\"install_repository\" method=\"post\" action=\"<%= api_url %>\">',\n                    '<input type=\"hidden\" id=\"repositories\" name=\"<%= repository.id %>\" value=\"ID\" />',\n                    '<input type=\"hidden\" id=\"tool_shed_url\" name=\"tool_shed_url\" value=\"<%= tool_shed %>\" />',\n                    '<div class=\"toolForm\">',\n                    '<div class=\"toolFormTitle\">Changeset</div>',\n                    '<div class=\"toolFormBody changeset\">',\n                    '<select id=\"changeset\" name=\"changeset\" style=\"margin: 5px;\">',\n                    \"<% _.each(Object.keys(repository.metadata), function(changeset) { %>\",\n                    '<% if (changeset == current_changeset) { var selected = \"selected \"; } else { var selected = \"\"; } %>',\n                    '<option <%= selected %>value=\"<%= changeset.split(\":\")[1] %>\"><%= changeset %></option>',\n                    \"<% }); %>\",\n                    \"</select>\",\n                    '<input class=\"btn btn-primary preview-button\" data-tsrid=\"<%= current_metadata.repository.id %>\" type=\"submit\" id=\"install_repository\" name=\"install_repository\" value=\"Install this revision now\" />',\n                    '<input class=\"btn btn-primary preview-button\" type=\"button\" id=\"queue_install\" name=\"queue_install\" value=\"Install this revision later\" />',\n                    '<div class=\"toolParamHelp\" style=\"clear: both;\">Please select a revision and review the settings below before installing.</div>',\n                    \"</div>\",\n                    \"</div>\",\n                    \"<%= shed_tool_conf %>\",\n                    \"<% if (current_metadata.has_repository_dependencies) { %>\",\n                    '<div class=\"toolFormTitle\">Repository dependencies for <strong id=\"current_changeset\"><%= current_changeset %></strong></div>',\n                    '<div class=\"toolFormBody\">',\n                    '<p id=\"install_repository_dependencies_checkbox\">',\n                    '<input type=\"checkbox\" checked id=\"install_repository_dependencies\" />',\n                    '<label for=\"install_repository_dependencies\">Install repository dependencies</label>',\n                    \"</p>\",\n                    \"<% current_metadata.repository_dependency_template = repository_dependency_template; %>\",\n                    '<div class=\"tables container-table\" id=\"repository_dependencies\">',\n                    '<div class=\"expandLink\">',\n                    '<a class=\"toggle_folder\" data_target=\"repository_dependencies_table\">',\n                    \"Repository dependencies &ndash; <em>installation of these additional repositories is required</em>\",\n                    \"</a>\",\n                    \"</div>\",\n                    \"<%= repository_dependencies_template(current_metadata) %>\",\n                    \"</div>\",\n                    \"</div>\",\n                    \"<% } %>\",\n                    \"<% if (current_metadata.includes_tool_dependencies) { %>\",\n                    '<div class=\"toolFormTitle\">Tool dependencies</div>',\n                    '<div class=\"toolFormBody\">',\n                    '<p id=\"install_resolver_dependencies_checkbox\">',\n                    '<input type=\"checkbox\" checked id=\"install_resolver_dependencies\" />',\n                    '<label for=\"install_resolver_dependencies\">Install resolver dependencies</label>',\n                    \"</p>\",\n                    '<p id=\"install_tool_dependencies_checkbox\">',\n                    '<input type=\"checkbox\" checked id=\"install_tool_dependencies\" />',\n                    '<label for=\"install_tool_dependencies\">Install tool dependencies</label>',\n                    \"</p>\",\n                    '<div class=\"tables container-table\" id=\"tool_dependencies\">',\n                    '<div class=\"expandLink\">',\n                    '<a class=\"toggle_folder\" data_target=\"tool_dependencies_table\">',\n                    \"Tool dependencies &ndash; <em>repository tools require handling of these dependencies</em>\",\n                    \"</a>\",\n                    \"</div>\",\n                    '<table class=\"tables container-table\" id=\"tool_dependencies_table\" border=\"0\" cellpadding=\"2\" cellspacing=\"2\" width=\"100%\">',\n                    \"<thead>\",\n                    '<tr style=\"display: table-row;\" class=\"datasetRow\" parent=\"0\" id=\"libraryItem-rt-f9cad7b01a472135\">',\n                    '<th style=\"padding-left: 40px;\">Name</th>',\n                    \"<th>Version</th>\",\n                    \"<th>Type</th>\",\n                    \"</tr>\",\n                    \"</thead>\",\n                    '<tbody id=\"tool_deps\">',\n                    \"<% _.each(tool_dependencies[current_changeset], function(dependency) { %>\",\n                    '<tr class=\"datasetRow tool_dependency_row\" style=\"display: table-row;\">',\n                    '<td style=\"padding-left: 40px;\">',\n                    \"<%= dependency.name %></td>\",\n                    \"<td><%= dependency.version %></td>\",\n                    \"<td><%= dependency.type %></td>\",\n                    \"</tr>\",\n                    \"<% }); %>\",\n                    \"</tbody>\",\n                    \"</table>\",\n                    \"</div>\",\n                    \"</div>\",\n                    \"<% } %>\",\n                    \"<% if (current_metadata.includes_tools_for_display_in_tool_panel) { %>\",\n                    '<div class=\"toolFormTitle\">Tools &ndash; <em>click the name to preview the tool and use the pop-up menu to inspect all metadata</em></div>',\n                    '<div class=\"toolFormBody\">',\n                    '<div class=\"tables container-table\" id=\"tools_toggle\">',\n                    '<table class=\"tables container-table\" id=\"valid_tools\" border=\"0\" cellpadding=\"2\" cellspacing=\"2\" width=\"100%\">',\n                    \"<thead>\",\n                    '<tr style=\"display: table-row;\" class=\"datasetRow\" parent=\"0\" id=\"libraryItem-rt-f9cad7b01a472135\">',\n                    '<th style=\"padding-left: 40px;\">Name</th>',\n                    \"<th>Description</th>\",\n                    \"<th>Version</th>\",\n                    \"<th><%= tps_template_global_select({tps: panel_section_dict, tps_select_options: tps_select_options}) %></tr>\",\n                    \"</thead>\",\n                    '<tbody id=\"tools_in_repo\">',\n                    \"<% _.each(current_metadata.tools, function(tool) { %>\",\n                    '<tr id=\"libraryItem-<%= tool.clean %>\" class=\"tool_row\" style=\"display: table-row;\" style=\"width: 15%\">',\n                    '<td style=\"padding-left: 40px;\">',\n                    '<div id=\"tool-<%= tool.clean %>\" class=\"menubutton split popup\" style=\"float: left;\">',\n                    '<a class=\"tool_form view-info\" data-toggle=\"modal\" data-target=\"toolform_<%= tool.clean %>\" data-clean=\"<%= tool.clean %>\" data-guid=\"<%= tool.guid %>\" data-name=\"<%= tool.name %>\" data-desc=\"<%= tool.description %>\"><%= tool.name %></a>',\n                    \"</div>\",\n                    \"</td>\",\n                    \"<td><%= tool.description %></td>\",\n                    '<td style=\"width: 15%\"><%= tool.version %></td>',\n                    '<td style=\"width: 35%\" id=\"tool_tps_<%= tool.clean %>\">',\n                    \"<%= tps_template_tool_select({tool: tool, tps: panel_section_dict, tps_select_options: tps_select_options}) %>\",\n                    \"</td>\",\n                    \"</tr>\",\n                    \"<% }); %>\",\n                    \"</tbody>\",\n                    \"</table>\",\n                    \"</div>\",\n                    \"</div>\",\n                    \"<% } %>\",\n                    \"</form>\",\n                    \"</div>\"\n                ].join(\"\")\n            ),\n\n            templateRepoDependencies: _.template(\n                [\n                    '<div class=\"toolFormTitle\">Repository Dependencies</div>',\n                    '<div class=\"toolFormBody tables container-table\" id=\"repository_dependencies\">',\n                    \"<ul>\",\n                    \"<li>Repository installation requires the following\",\n                    \"<% if (has_repository_dependencies) { %>\",\n                    \"<% _.each(repository_dependencies, function(dependency) { %>\",\n                    \"<% dependency.repository_dependency_template = repository_dependency_template; %>\",\n                    \"<%= repository_dependency_template(dependency) %>\",\n                    \"<% }); %>\",\n                    \"<% } %>\",\n                    \"</li>\",\n                    \"</ul>\",\n                    \"</div>\"\n                ].join(\"\")\n            ),\n\n            templateRepoDependency: _.template(\n                [\n                    '<li id=\"metadata_<%= id %>\" class=\"datasetRow repository_dependency_row\">',\n                    \"Repository <b><%= repository.name %></b> revision <b><%= changeset_revision %></b> owned by <b><%= repository.owner %></b>\",\n                    \"<% if (has_repository_dependencies) { %>\",\n                    '<ul class=\"child_dependencies\">',\n                    \"<% _.each(repository_dependencies, function(dependency) { %>\",\n                    \"<% dependency.repository_dependency_template = repository_dependency_template; %>\",\n                    \"<%= repository_dependency_template(dependency) %>\",\n                    \"<% }); %>\",\n                    \"</ul>\",\n                    \"<% } %>\",\n                    \"</li>\"\n                ].join(\"\")\n            ),\n\n            templateShedToolConf: _.template(\n                [\n                    '<div class=\"toolFormTitle\">Shed tool configuration file:</div>',\n                    '<div class=\"toolFormBody\">',\n                    '<div class=\"form-row\">',\n                    \"<%= stc_html %>\",\n                    '<div class=\"toolParamHelp\" style=\"clear: both;\">Select the file whose <b>tool_path</b> setting you want used for installing repositories.</div>',\n                    \"</div>\",\n                    \"</div>\"\n                ].join(\"\")\n            ),\n\n            templateToolDependency: _.template(\n                [\n                    \"<% if (has_repository_dependencies) { %>\",\n                    \"<% _.each(repository_dependencies, function(dependency) { %>\",\n                    \"<% if (dependency.includes_tool_dependencies) { %>\",\n                    \"<% dependency.tool_dependency_template = tool_dependency_template %>\",\n                    \"<%= tool_dependency_template(dependency) %>\",\n                    \"<% } %>\",\n                    \"<% }); %>\",\n                    \"<% } %>\"\n                ].join(\"\")\n            ),\n\n            templateGlobalSectionCreate: _.template(\n                [\n                    '<div id=\"tool_panel_section\">',\n                    '<div class=\"form-row\" id=\"new_tps\">',\n                    '<input id=\"new_tool_panel_section\" name=\"new_tool_panel_section\" type=\"textfield\" value=\"\" size=\"40\"/>',\n                    '<input class=\"btn btn-primary\" type=\"button\" id=\"select_existing\" value=\"Select existing\" />',\n                    '<div class=\"toolParamHelp\" style=\"clear: both;\">',\n                    \"Add a new tool panel section to contain the installed tools (optional).\",\n                    \"</div>\",\n                    \"</div>\",\n                    \"</div>\"\n                ].join(\"\")\n            ),\n\n            templateGlobalSectionSelect: _.template(\n                [\n                    '<div id=\"tool_panel_section\">',\n                    '<div class=\"toolFormTitle\">Tool Panel Section</div>',\n                    '<div class=\"toolFormBody\">',\n                    '<div class=\"tab-pane\" id=\"select_tps\">',\n                    '<select name=\"<%= name %>\" id=\"<%= tps.id %>\">',\n                    \"<%= tps_select_options({sections: tps.sections}) %>\",\n                    \"</select>\",\n                    '<input class=\"btn btn-primary\" type=\"button\" id=\"create_new\" value=\"Create new\" />',\n                    '<div class=\"toolParamHelp\" style=\"clear: both;\">',\n                    \"Select an existing tool panel section to contain the installed tools (optional).\",\n                    \"</div>\",\n                    \"</div>\",\n                    \"</div>\",\n                    \"</div>\"\n                ].join(\"\")\n            ),\n\n            templateToolSectionCreate: _.template(\n                [\n                    '<div id=\"new_tps_<%= tool.clean %>\" data-clean=\"<%= tool.clean %>\" class=\"form-row\">',\n                    '<input data-toolguid=\"<%= tool.guid %>\" class=\"tool_panel_section_picker\" size=\"40\" name=\"new_tool_panel_section\" id=\"new_tool_panel_section_<%= tool.clean %>\" type=\"text\">',\n                    '<input id=\"per_tool_select_<%= tool.clean %>\" class=\"btn btn-primary\" data-toolguid=\"<%= tool.guid %>\" value=\"Select existing\" id=\"select_existing_<%= tool.clean %>\" type=\"button\">',\n                    \"</div>\"\n                ].join(\"\")\n            ),\n\n            templateToolSectionSelect: _.template(\n                [\n                    '<div id=\"select_tps_<%= tool.clean %>\" data-clean=\"<%= tool.clean %>\" class=\"tps_creator\">',\n                    '<select default=\"active\" style=\"width: 30em;\" data-toolguid=\"<%= tool.guid %>\" class=\"tool_panel_section_picker\" name=\"tool_panel_section_id\" id=\"tool_panel_section_select_<%= tool.clean %>\">',\n                    \"<%= tps_select_options({sections: tps.sections}) %>\",\n                    \"</select>\",\n                    '<input id=\"per_tool_create_<%= tool.clean %>\" data-clean=\"<%= tool.clean %>\" class=\"btn btn-primary create-tps-button\" data-toolguid=\"<%= tool.guid %>\" value=\"Create new\" id=\"create_new_<%= tool.clean %>\" type=\"button\">',\n                    '<div style=\"clear: both;\" class=\"toolParamHelp\"></div>',\n                    \"</div>\"\n                ].join(\"\")\n            ),\n\n            templatePanelSelectOptions: _.template(\n                [\n                    \"<% _.each(sections, function(section) { %>\",\n                    '<option value=\"<%= section.id %>\"><%= section.name %></option>',\n                    \"<% }); %>\"\n                ].join(\"\")\n            )\n        });\n\n        return {\n            RepoDetails: ToolShedRepositoryView\n        };\n    }\n);\n"]}