{"version":3,"sources":["mvc/toolshed/repository-queue-view.js"],"names":["define","toolshed_model","RepoQueueView","Backbone","View","extend","el","defaults","initialize","that","options","this","listenTo","RepoQueue","model","fetch","render","repo_queue_template","repositories","models","title","queue","toolshed_util","css","queueLength","$","bindEvents","repository_metadata","installFromQueue","on","loadFromQueue","queue_key","repo_queue","localStorage","attr","JSON","parse","repository_id","repository","id","remove","replace","stringify","history","navigate","params","Object","install_tool_dependencies","tool_shed_url","changeset","url","install_repository_dependencies","install_resolver_dependencies","tool_panel_section","shed_tool_conf","repository_queue","hasOwnProperty","changeset_revision","data","split","post","root","console","Galaxy","trigger","undefined","queueKey","$el","empty","iri_params","join","templateRepoQueue","log","new_route","reDraw","_","template"],"mappings":"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","file":"../../../scripts/mvc/toolshed/repository-queue-view.js","sourcesContent":["define([\"mvc/toolshed/toolshed-model\", \"mvc/toolshed/util\"], function(\n    toolshed_model,\n    toolshed_util\n) {\n    var View = Backbone.View.extend({\n        el: \"#center\",\n\n        defaults: [{}],\n\n        initialize: function(options) {\n            var that = this;\n            this.model = new toolshed_model.RepoQueue();\n            this.listenTo(this.model, \"sync\", this.render);\n            this.model.fetch();\n            that.render();\n        },\n\n        render: function(options) {\n            var that = this;\n            var repo_queue_template = that.templateRepoQueue;\n            var repositories = that.model.models;\n            that.$el.html(\n                repo_queue_template({\n                    title: \"Repository Installation Queue\",\n                    repositories: repositories,\n                    queue: toolshed_util.queueLength()\n                })\n            );\n            $(\"#center\").css(\"overflow\", \"auto\");\n            that.bindEvents();\n        },\n\n        bindEvents: function() {\n            var that = this;\n            $(\".install_one\").on(\"click\", function() {\n                var repository_metadata = that.loadFromQueue(\n                    $(this).attr(\"data-repokey\")\n                );\n                that.installFromQueue(\n                    repository_metadata,\n                    $(this).attr(\"data-repokey\")\n                );\n            });\n            $(\".remove_one\").on(\"click\", function() {\n                var queue_key = $(this).attr(\"data-repokey\");\n                var repo_queue = JSON.parse(localStorage.repositories);\n                if (repo_queue.hasOwnProperty(queue_key)) {\n                    var repository_id = repo_queue[queue_key].repository.id;\n                    delete repo_queue[queue_key];\n                    $(\"#queued_repository_\" + repository_id).remove();\n                }\n                localStorage.repositories = JSON.stringify(repo_queue);\n            });\n            $(\"#clear_queue\").on(\"click\", function() {\n                localStorage.repositories = \"{}\";\n            });\n            $(\"#from_workflow\").on(\"click\", function() {\n                Backbone.history.navigate(\"workflows\", {\n                    trigger: true,\n                    replace: true\n                });\n            });\n        },\n\n        installFromQueue: function(repository_metadata, queue_key) {\n            var that = this;\n            var params = Object();\n            params.install_tool_dependencies =\n                repository_metadata.install_tool_dependencies;\n            params.install_repository_dependencies =\n                repository_metadata.install_repository_dependencies;\n            params.install_resolver_dependencies =\n                repository_metadata.install_resolver_dependencies;\n            params.tool_panel_section = repository_metadata.tool_panel_section;\n            params.shed_tool_conf = repository_metadata.shed_tool_conf;\n            params.repositories = JSON.stringify([\n                [\n                    repository_metadata.repository.id,\n                    repository_metadata.changeset_revision\n                ]\n            ]);\n            params.tool_shed_repository_ids = JSON.stringify([\n                repository_metadata.repository.id\n            ]);\n            params.tool_shed_url = queue_key.split(\"|\")[0];\n            params.changeset = repository_metadata.changeset_revision;\n            var url =\n                Galaxy.root + \"api/tool_shed_repositories/install?async=True\";\n            $(\n                \"#queued_repository_\" + repository_metadata.repository.id\n            ).remove();\n            if (localStorage.repositories) {\n                if (queue_key === undefined) {\n                    queue_key = toolshed_util.queueKey(repository_metadata);\n                }\n                var repository_queue = JSON.parse(localStorage.repositories);\n                if (repository_queue.hasOwnProperty(queue_key)) {\n                    delete repository_queue[queue_key];\n                    localStorage.repositories = JSON.stringify(\n                        repository_queue\n                    );\n                }\n            }\n\n            $.post(url, params, function(data) {\n                var iri_params = JSON.parse(data);\n                var repositories = iri_params.repositories;\n                var new_route = \"status/r/\" + repositories.join(\"|\");\n                $.post(\n                    Galaxy.root + \"admin_toolshed/install_repositories\",\n                    iri_params,\n                    function(data) {\n                        console.log(\n                            \"Initializing repository installation succeeded\"\n                        );\n                    }\n                );\n                Backbone.history.navigate(new_route, {\n                    trigger: true,\n                    replace: true\n                });\n            });\n        },\n\n        loadFromQueue: function(queue_key) {\n            var repository_queue = JSON.parse(localStorage.repositories);\n            if (repository_queue.hasOwnProperty(queue_key)) {\n                return repository_queue[queue_key];\n            }\n            return undefined;\n        },\n\n        reDraw: function(options) {\n            this.$el.empty();\n            this.initialize(options);\n            this.model.fetch();\n            this.render(options);\n        },\n\n        templateRepoQueue: _.template(\n            [\n                '<div class=\"unified-panel-header\" id=\"panel_header\" unselectable=\"on\">',\n                '<div class=\"unified-panel-header-inner\"><%= title %></div>',\n                '<div class=\"unified-panel-header-inner\" style=\"position: absolute; right: 5px; top: 0px;\"><a href=\"#/queue\">Repository Queue (<%= queue %>)</a></div>',\n                \"</div>\",\n                '<div class=\"tab-pane\" id=\"panel_header\" id=\"repository_queue\">',\n                '<table id=\"queued_repositories\" class=\"grid\" border=\"0\" cellpadding=\"2\" cellspacing=\"2\" width=\"100%\">',\n                '<thead id=\"grid-table-header\">',\n                \"<tr>\",\n                '<th class=\"datasetRow\">Name</th>',\n                '<th class=\"datasetRow\">Owner</th>',\n                '<th class=\"datasetRow\">Revision</th>',\n                '<th class=\"datasetRow\">ToolShed</th>',\n                '<th class=\"datasetRow\">Install</th>',\n                '<th class=\"datasetRow\"><input class=\"btn btn-primary\" type=\"submit\" id=\"clear_queue\" name=\"clear_queue\" value=\"Clear queue\" /></th>',\n                \"</tr>\",\n                \"</thead>\",\n                \"<tbody>\",\n                \"<% _.each(repositories, function(repository) { %>\",\n                '<tr id=\"queued_repository_<%= repository.get(\"id\") %>\">',\n                '<td class=\"datasetRow\"><%= repository.get(\"repository\").name %></td>',\n                '<td class=\"datasetRow\"><%= repository.get(\"repository\").owner %></td>',\n                '<td class=\"datasetRow\"><%= repository.get(\"changeset_revision\") %></td>',\n                '<td class=\"datasetRow\"><%= repository.get(\"tool_shed_url\") %></td>',\n                '<td class=\"datasetRow\">',\n                '<input class=\"btn btn-primary install_one\" data-repokey=\"<%= repository.get(\"queue_key\") %>\" type=\"submit\" id=\"install_repository_<%= repository.get(\"id\") %>\" name=\"install_repository\" value=\"Install now\" />',\n                \"</td>\",\n                '<td class=\"datasetRow\">',\n                '<input class=\"btn btn-primary remove_one\" data-repokey=\"<%= repository.get(\"queue_key\") %>\" type=\"submit\" id=\"unqueue_repository_<%= repository.get(\"id\") %>\" name=\"unqueue_repository\" value=\"Remove from queue\" />',\n                \"</td>\",\n                \"</tr>\",\n                \"<% }); %>\",\n                \"</tbody>\",\n                \"</table>\",\n                '<input type=\"button\" class=\"btn btn-primary\" id=\"from_workflow\" value=\"Add from workflow\" />',\n                \"</div>\"\n            ].join(\"\")\n        )\n    });\n\n    return {\n        RepoQueueView: View\n    };\n});\n"]}