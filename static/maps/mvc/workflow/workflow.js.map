{"version":3,"sources":["mvc/workflow/workflow.js"],"names":["define","WorkflowItemView","tagName","_","TAGS","WORKFLOWS","QueryStringParsing","Backbone","View","extend","events","bindAll","this","el","mod_toastr","options","timeOut","click #show-in-tool-panel","click #delete-workflow","click #rename-workflow","window","root","removeWorkflow","wfName","html","model","get","confirm","set","remove","save","oldName","success","copyWorkflow","destroy","newName","at","wait","prompt","jqXHR","textStatus","trHtml","render","TagEditor","$","id","workflow_mode","urlRoot","wfJson","currentOwner","self","Galaxy","user","attributes","username","name","collection","create","error","resp","appendItem","errorThrown","dragleave","responseJSON","err_msg","ev","preventDefault","wfId","checkboxHtml","unhighlightDropZone","show","files","_templateActions","readWorkflowFiles","wf_json","JSON","parse","reader","renderTagEditor","TagsEditor","find","readAsText","toggle","_showArgErrors","once","msg_status","msg_text","header","_templateHeader","tableTemplate","confirmDelete","minQueryLength","adjustActiondropdown","item","$el_shared_wf_link","query","$el_tabletr","hide","regular_expression","setElement","WorkflowCollection","fetch","done","bind","on","drop","dragover","_templateActionButtons","addClass","removeClass","e","initialize","f","dataTransfer","ImportWorkflowView","i","FileReader","getJSON","theFile","result","WorkflowListView","escape","info","templateActions","_templateWorkflowTable","$el","models","each","searchWorkflow","workflowItemView","append","workflow","click","$el_searchinput","min_querylen","val","length","RegExp","filter","test","text","css","_templateNoWorkflow","tableHtml","empty","_mainTemplate","url","myexperiment_target_url"],"mappings":"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","file":"../../../scripts/mvc/workflow/workflow.js","sourcesContent":["/** Workflow view */\ndefine(\n    [\n        \"libs/toastr\",\n        \"mvc/tag\",\n        \"mvc/workflow/workflow-model\",\n        \"utils/query-string-parsing\"\n    ],\n    function(mod_toastr, TAGS, WORKFLOWS, QueryStringParsing) {\n        /** View of the individual workflows */\n        var WorkflowItemView = Backbone.View.extend({\n            tagName: \"tr\", // name of (orphan) root tag in this.el\n            initialize: function() {\n                _.bindAll(\n                    this,\n                    \"render\",\n                    \"_rowTemplate\",\n                    \"renderTagEditor\",\n                    \"_templateActions\",\n                    \"removeWorkflow\",\n                    \"copyWorkflow\"\n                ); // every function that uses 'this' as the current object should be in here\n                mod_toastr.options.timeOut = 1500;\n            },\n\n            events: {\n                \"click #show-in-tool-panel\": \"showInToolPanel\",\n                \"click #delete-workflow\": \"removeWorkflow\",\n                \"click #rename-workflow\": \"renameWorkflow\",\n                \"click #copy-workflow\": \"copyWorkflow\"\n            },\n\n            render: function() {\n                $(this.el).html(this._rowTemplate());\n                return this;\n            },\n\n            showInToolPanel: function() {\n                this.model.set(\n                    \"show_in_tool_panel\",\n                    !this.model.get(\"show_in_tool_panel\")\n                );\n                this.model.save();\n                // This reloads the whole page, so that the workflow appears in the tool panel.\n                // Ideally we would notify only the tool panel of a change\n                window.location = Galaxy.root + \"workflow\";\n            },\n\n            removeWorkflow: function() {\n                var wfName = this.model.get(\"name\");\n                if (\n                    window.confirm(\n                        \"Are you sure you want to delete workflow '\" +\n                            wfName +\n                            \"'?\"\n                    )\n                ) {\n                    this.model.destroy({\n                        success: function() {\n                            mod_toastr.success(\n                                \"Successfully deleted workflow '\" + wfName + \"'\"\n                            );\n                        }\n                    });\n                    this.remove();\n                }\n            },\n\n            renameWorkflow: function() {\n                var oldName = this.model.get(\"name\");\n                var newName = window.prompt(\n                    \"Enter a new Name for workflow '\" + oldName + \"'\",\n                    oldName\n                );\n                if (newName) {\n                    this.model.save(\n                        { name: newName },\n                        {\n                            success: function() {\n                                mod_toastr.success(\n                                    \"Successfully renamed workflow '\" +\n                                        oldName +\n                                        \"' to '\" +\n                                        newName +\n                                        \"'\"\n                                );\n                            }\n                        }\n                    );\n                    this.render();\n                }\n            },\n\n            copyWorkflow: function() {\n                var self = this;\n                var oldName = this.model.get(\"name\");\n                $.getJSON(\n                    this.model.urlRoot + \"/\" + this.model.id + \"/download\",\n                    function(wfJson) {\n                        var newName = \"Copy of \" + oldName;\n                        var currentOwner = self.model.get(\"owner\");\n                        if (currentOwner != Galaxy.user.attributes.username) {\n                            newName += \" shared by user \" + currentOwner;\n                        }\n                        wfJson.name = newName;\n                        self.collection.create(wfJson, {\n                            at: 0,\n                            wait: true,\n                            success: function() {\n                                mod_toastr.success(\n                                    \"Successfully copied workflow '\" +\n                                        oldName +\n                                        \"' to '\" +\n                                        newName +\n                                        \"'\"\n                                );\n                            },\n                            error: function(model, resp, options) {\n                                // signature seems to have changed over the course of backbone dev\n                                // see https://github.com/jashkenas/backbone/issues/2606#issuecomment-19289483\n                                mod_toastr.error(options.errorThrown);\n                            }\n                        });\n                    }\n                ).error(function(jqXHR, textStatus, errorThrown) {\n                    mod_toastr.error(jqXHR.responseJSON.err_msg);\n                });\n            },\n\n            _rowTemplate: function() {\n                var show = this.model.get(\"show_in_tool_panel\");\n                var wfId = this.model.id;\n                var checkboxHtml =\n                    '<input id=\"show-in-tool-panel\" type=\"checkbox\" class=\"show-in-tool-panel\" ' +\n                    (show ? 'checked=\"' + show + '\"' : \"\") +\n                    ' value=\"' +\n                    wfId +\n                    '\">';\n                var trHtml =\n                    \"<td>\" +\n                    '<div class=\"dropdown\">' +\n                    '<button class=\"menubutton\" type=\"button\" data-toggle=\"dropdown\">' +\n                    _.escape(this.model.get(\"name\")) +\n                    '<span class=\"caret\"></span>' +\n                    \"</button>\" +\n                    this._templateActions() +\n                    \"</div>\" +\n                    \"</td>\" +\n                    \"<td><span>\" +\n                    '<div class=\"' +\n                    wfId +\n                    ' tags-display\"></div>' +\n                    \"</td>\" +\n                    \"<td>\" +\n                    (this.model.get(\"owner\") === Galaxy.user.attributes.username\n                        ? \"You\"\n                        : this.model.get(\"owner\")) +\n                    \"</span></td>\" +\n                    \"<td>\" +\n                    this.model.get(\"number_of_steps\") +\n                    \"</td>\" +\n                    \"<td>\" +\n                    (this.model.get(\"published\") ? \"Yes\" : \"No\") +\n                    \"</td>\" +\n                    \"<td>\" +\n                    checkboxHtml +\n                    \"</td>\";\n                return trHtml;\n            },\n\n            renderTagEditor: function() {\n                var TagEditor = new TAGS.TagsEditor({\n                    model: this.model,\n                    el: $.find(\".\" + this.model.id + \".tags-display\"),\n                    workflow_mode: true\n                });\n                TagEditor.toggle(true);\n                TagEditor.render();\n            },\n\n            /** Template for user actions for workflows */\n            _templateActions: function() {\n                if (\n                    this.model.get(\"owner\") === Galaxy.user.attributes.username\n                ) {\n                    return (\n                        '<ul class=\"dropdown-menu action-dpd\">' +\n                        '<li><a href=\"' +\n                        Galaxy.root +\n                        \"workflow/editor?id=\" +\n                        this.model.id +\n                        '\">Edit</a></li>' +\n                        '<li><a href=\"' +\n                        Galaxy.root +\n                        \"workflow/run?id=\" +\n                        this.model.id +\n                        '\">Run</a></li>' +\n                        '<li><a href=\"' +\n                        Galaxy.root +\n                        \"workflow/sharing?id=\" +\n                        this.model.id +\n                        '\">Share</a></li>' +\n                        '<li><a href=\"' +\n                        Galaxy.root +\n                        \"api/workflows/\" +\n                        this.model.id +\n                        '/download?format=json-download\">Download</a></li>' +\n                        '<li><a id=\"copy-workflow\" style=\"cursor: pointer;\">Copy</a></li>' +\n                        '<li><a id=\"rename-workflow\" style=\"cursor: pointer;\">Rename</a></li>' +\n                        '<li><a href=\"' +\n                        Galaxy.root +\n                        \"workflow/display_by_id?id=\" +\n                        this.model.id +\n                        '\">View</a></li>' +\n                        '<li><a id=\"delete-workflow\" style=\"cursor: pointer;\">Delete</a></li>' +\n                        \"</ul>\"\n                    );\n                } else {\n                    return (\n                        '<ul class=\"dropdown-menu action-dpd\">' +\n                        '<li><a href=\"' +\n                        Galaxy.root +\n                        \"workflow/display_by_username_and_slug?username=\" +\n                        this.model.get(\"owner\") +\n                        \"&slug=\" +\n                        this.model.get(\"slug\") +\n                        '\">View</a></li>' +\n                        '<li><a href=\"' +\n                        Galaxy.root +\n                        \"workflow/run?id=\" +\n                        this.model.id +\n                        '\">Run</a></li>' +\n                        '<li><a id=\"copy-workflow\" style=\"cursor: pointer;\">Copy</a></li>' +\n                        '<li><a class=\"link-confirm-shared-' +\n                        this.model.id +\n                        '\" href=\"' +\n                        Galaxy.root +\n                        \"workflow/sharing?unshare_me=True&id=\" +\n                        this.model.id +\n                        '\">Remove</a></li>' +\n                        \"</ul>\"\n                    );\n                }\n            }\n        });\n\n        /** View of the main workflow list page */\n        var WorkflowListView = Backbone.View.extend({\n            title: \"Workflows\",\n            initialize: function() {\n                this.setElement(\"<div/>\");\n                _.bindAll(this, \"adjustActiondropdown\");\n                this.collection = new WORKFLOWS.WorkflowCollection();\n                this.collection.fetch().done(this.render());\n                this.collection.bind(\"add\", this.appendItem);\n                this.collection.on(\"sync\", this.render, this);\n            },\n\n            events: {\n                dragleave: \"unhighlightDropZone\",\n                drop: \"drop\",\n                dragover: function(ev) {\n                    $(\".hidden_description_layer\").addClass(\"dragover\");\n                    $(\".menubutton\").addClass(\"background-none\");\n                    ev.preventDefault();\n                }\n            },\n\n            unhighlightDropZone: function() {\n                $(\".hidden_description_layer\").removeClass(\"dragover\");\n                $(\".menubutton\").removeClass(\"background-none\");\n            },\n\n            drop: function(e) {\n                // TODO: check that file is valid galaxy workflow\n                this.unhighlightDropZone();\n                e.preventDefault();\n                var files = e.dataTransfer.files;\n                var self = this;\n                for (var i = 0, f; (f = files[i]); i++) {\n                    self.readWorkflowFiles(f);\n                }\n            },\n\n            readWorkflowFiles: function(f) {\n                var self = this;\n                var reader = new FileReader();\n                reader.onload = function(theFile) {\n                    var wf_json;\n                    try {\n                        wf_json = JSON.parse(reader.result);\n                    } catch (e) {\n                        mod_toastr.error(\n                            \"Could not read file '\" +\n                                f.name +\n                                \"'. Verify it is a valid Galaxy workflow\"\n                        );\n                        wf_json = null;\n                    }\n                    if (wf_json) {\n                        self.collection.create(wf_json, {\n                            at: 0,\n                            wait: true,\n                            success: function() {\n                                mod_toastr.success(\n                                    \"Successfully imported workflow '\" +\n                                        wf_json.name +\n                                        \"'\"\n                                );\n                            },\n                            error: function(model, resp, options) {\n                                mod_toastr.error(options.errorThrown);\n                            }\n                        });\n                    }\n                };\n                reader.readAsText(f, \"utf-8\");\n            },\n\n            _showArgErrors: _.once(function() {\n                // Parse args out of params, display if there's a message.\n                var msg_text = QueryStringParsing.get(\"message\");\n                var msg_status = QueryStringParsing.get(\"status\");\n                if (msg_status === \"error\") {\n                    mod_toastr.error(\n                        _.escape(\n                            msg_text ||\n                                \"Unknown Error, please report this to an administrator.\"\n                        )\n                    );\n                } else if (msg_text) {\n                    mod_toastr.info(_.escape(msg_text));\n                }\n            }),\n\n            render: function() {\n                // Add workflow header\n                var header = this._templateHeader();\n                // Add the actions buttons\n                var templateActions = this._templateActionButtons();\n                var tableTemplate = this._templateWorkflowTable();\n                this.$el.html(header + templateActions + tableTemplate);\n                var self = this;\n                _(this.collection.models).each(function(item) {\n                    // in case collection is not empty\n                    self.appendItem(item);\n                    self.confirmDelete(item);\n                }, this);\n                var minQueryLength = 3;\n                this.searchWorkflow(\n                    this.$(\".search-wf\"),\n                    this.$(\".workflow-search tr\"),\n                    minQueryLength\n                );\n                this.adjustActiondropdown();\n                this._showArgErrors();\n                return this;\n            },\n\n            appendItem: function(item) {\n                var workflowItemView = new WorkflowItemView({\n                    model: item,\n                    collection: this.collection\n                });\n                $(\".workflow-search\").append(workflowItemView.render().el);\n                workflowItemView.renderTagEditor();\n            },\n\n            /** Add confirm box before removing/unsharing workflow */\n            confirmDelete: function(workflow) {\n                var $el_shared_wf_link = this.$(\n                    \".link-confirm-shared-\" + workflow.id\n                );\n                $el_shared_wf_link.click(function() {\n                    return window.confirm(\n                        \"Are you sure you want to remove the shared workflow '\" +\n                            workflow.attributes.name +\n                            \"'?\"\n                    );\n                });\n            },\n\n            /** Implement client side workflow search/filtering */\n            searchWorkflow: function(\n                $el_searchinput,\n                $el_tabletr,\n                min_querylen\n            ) {\n                $el_searchinput.on(\"keyup\", function() {\n                    var query = $(this).val();\n                    // Filter when query is at least 3 characters\n                    // otherwise show all rows\n                    if (query.length >= min_querylen) {\n                        // Ignore the query's case using 'i'\n                        var regular_expression = new RegExp(query, \"i\");\n                        $el_tabletr.hide();\n                        $el_tabletr\n                            .filter(function() {\n                                // Apply regular expression on each row's text\n                                // and show when there is a match\n                                return regular_expression.test($(this).text());\n                            })\n                            .show();\n                    } else {\n                        $el_tabletr.show();\n                    }\n                });\n            },\n\n            /** Ajust the position of dropdown with respect to table */\n            adjustActiondropdown: function() {\n                $(this.el).on(\"show.bs.dropdown\", function() {\n                    $(this.el).css(\"overflow\", \"inherit\");\n                });\n                $(this.el).on(\"hide.bs.dropdown\", function() {\n                    $(this.el).css(\"overflow\", \"auto\");\n                });\n            },\n\n            /** Template for no workflow */\n            _templateNoWorkflow: function() {\n                return '<div class=\"wf-nodata\"> You have no workflows. </div>';\n            },\n\n            /** Template for actions buttons */\n            _templateActionButtons: function() {\n                return (\n                    '<ul class=\"manage-table-actions\">' +\n                    \"<li>\" +\n                    '<input class=\"search-wf form-control\" type=\"text\" autocomplete=\"off\" placeholder=\"search for workflow...\">' +\n                    \"</li>\" +\n                    \"<li>\" +\n                    '<a class=\"action-button fa fa-plus wf-action\" id=\"new-workflow\" title=\"Create new workflow\" href=\"' +\n                    Galaxy.root +\n                    'workflow/create\">' +\n                    \"</a>\" +\n                    \"</li>\" +\n                    \"<li>\" +\n                    '<a class=\"action-button fa fa-upload wf-action\" id=\"import-workflow\" title=\"Upload or import workflow\" href=\"' +\n                    Galaxy.root +\n                    'workflow/import_workflow\">' +\n                    \"</a>\" +\n                    \"</li>\" +\n                    \"</ul>\"\n                );\n            },\n\n            /** Template for workflow table */\n            _templateWorkflowTable: function() {\n                var tableHtml =\n                    '<table class=\"table colored\"><thead>' +\n                    '<tr class=\"header\">' +\n                    \"<th>Name</th>\" +\n                    \"<th>Tags</th>\" +\n                    \"<th>Owner</th>\" +\n                    \"<th># of Steps</th>\" +\n                    \"<th>Published</th>\" +\n                    \"<th>Show in tools panel</th>\" +\n                    \"</tr></thead>\";\n                return (\n                    tableHtml +\n                    '<tbody class=\"workflow-search \"><div class=\"hidden_description_layer\"><p>Drop workflow files here to import</p>' +\n                    \"</tbody></table></div>\"\n                );\n            },\n\n            /** Main template */\n            _templateHeader: function() {\n                return (\n                    '<div class=\"page-container\">' +\n                    '<div class=\"user-workflows wf\">' +\n                    '<div class=\"response-message\"></div>' +\n                    \"<h2>Your workflows</h2>\" +\n                    \"</div>\" +\n                    \"</div>\"\n                );\n            }\n        });\n\n        var ImportWorkflowView = Backbone.View.extend({\n            initialize: function() {\n                this.setElement(\"<div/>\");\n                this.render();\n            },\n\n            /** Open page to import workflow */\n            render: function() {\n                var self = this;\n                $.getJSON(\n                    Galaxy.root + \"workflow/upload_import_workflow\",\n                    function(options) {\n                        self.$el.empty().append(self._mainTemplate(options));\n                    }\n                );\n            },\n\n            /** Template for the import workflow page */\n            _mainTemplate: function(options) {\n                return (\n                    \"<div class='toolForm'>\" +\n                    \"<div class='toolFormTitle'>Import Galaxy workflow</div>\" +\n                    \"<div class='toolFormBody'>\" +\n                    \"<form name='import_workflow' id='import_workflow' action='\" +\n                    Galaxy.root +\n                    \"workflow/upload_import_workflow\" +\n                    \"' enctype='multipart/form-data' method='POST'>\" +\n                    \"<div class='form-row'>\" +\n                    \"<label>Galaxy workflow URL:</label>\" +\n                    \"<input type='text' name='url' class='input-url' value='\" +\n                    options.url +\n                    \"' size='40'>\" +\n                    \"<div class='toolParamHelp' style='clear: both;'>\" +\n                    \"If the workflow is accessible via a URL, enter the URL above and click <b>Import</b>.\" +\n                    \"</div>\" +\n                    \"<div style='clear: both'></div>\" +\n                    \"</div>\" +\n                    \"<div class='form-row'>\" +\n                    \"<label>Galaxy workflow file:</label>\" +\n                    \"<div class='form-row-input'>\" +\n                    \"<input type='file' name='file_data' class='input-file'/>\" +\n                    \"</div>\" +\n                    \"<div class='toolParamHelp' style='clear: both;'>\" +\n                    \"If the workflow is in a file on your computer, choose it and then click <b>Import</b>.\" +\n                    \"</div>\" +\n                    \"<div style='clear: both'></div>\" +\n                    \"</div>\" +\n                    \"<div class='form-row'>\" +\n                    \"<input type='submit' class='primary-button wf-import' name='import_button' value='Import'>\" +\n                    \"</div>\" +\n                    \"</form>\" +\n                    \"<hr/>\" +\n                    \"<div class='form-row'>\" +\n                    \"<label>Import a Galaxy workflow from myExperiment:</label>\" +\n                    \"<div class='form-row-input'>\" +\n                    \"<a href='\" +\n                    options.myexperiment_target_url +\n                    \"'> Visit myExperiment</a>\" +\n                    \"</div>\" +\n                    \"<div class='toolParamHelp' style='clear: both;'>\" +\n                    \"Click the link above to visit myExperiment and browse for Galaxy workflows.\" +\n                    \"</div>\" +\n                    \"<div style='clear: both'></div>\" +\n                    \"</div>\" +\n                    \"</div>\" +\n                    \"</div>\"\n                );\n            }\n        });\n\n        return {\n            View: WorkflowListView,\n            ImportWorkflowView: ImportWorkflowView\n        };\n    }\n);\n"]}