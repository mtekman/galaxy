{"version":3,"sources":["mvc/tool/tool-form-base.js"],"names":["define","initialize","FormBase","Utils","Deferred","Ui","CitationModel","CitationView","extend","options","self","this","model","listenTo","parent","currHistoryPanel","_update","get","Galaxy","collection","callback","deferred","reset","$el","on","_destroy","execute","process","prototype","call","emit","debug","_render","operations","onchange","remove","status","message","persistent","attributes","set","show_message","fixed_title","name","description","version","versions_button","ButtonMenu","_operations","icon","tooltip","render","title","onclick","_footer","hide","id","menu_button","narrow","addMenu","window","versions","length","i","user","replace","portlet","expand","biostar_url","open","sharable_url","getJSON","each","webhooks","webhook","config","root","func","location","href","citation_list_view","CitationListView","el","$citations","requirements_visible","collapsed","update","addClass","_templateRequirements","requirements","$","_","activate","function","Function","menu","append","_templateHelp","citations","ToolCitationCollection","tool_id","fetch","$tmpl","help","find","attr","nreq","requirements_message","req","requirements_link","text"],"mappings":"aAGAA,QAEQ,cAQA,iBACIC,iBACI,qBACA,8BACAC,8BAEA,SAAAC,EAAAC,EAAAC,EAAAH,EAAAI,EAAAC,GACA,OAAAL,EAAAM,QANJP,WAAY,SAASQ,GAQjB,IAAAC,EAAAC,KAEIA,KAAKC,SAAU,IAAAR,EAIfF,EAAKW,UACDC,WAAcC,KAAAA,KAAAA,GAMrBJ,KAAAK,QAAAL,KAAAC,MAAAK,IAAA,iBAEDN,KAAAC,MAAAK,IAAA,sBAxBeH,OAAAI,QAaXJ,OAAOI,OAAOH,kBAiBbJ,KAAAE,SACMC,OAAXI,OAAAH,iBAAAI,WACWC,SACX,WACSC,EAASC,MAAdL,IAAA,WAAKI,KAKAV,KAFDY,IAAAC,GAAA,SAAA,WAFJd,EAAAe,cALRT,QAAS,SAASI,GAgBlB,IAAAV,EAAAC,MACAc,EAAUL,GAAWT,KAAAC,MAAAK,IAAA,gBAEjBN,KAAAU,SAAAC,QACKD,KAALA,SAAsBK,QAAA,SAAWC,GAC7BzB,EAAS0B,EAAiBC,GACnBC,EAAKC,KACR,WAHRrB,EAAAsB,eAUKrB,KAAAqB,WAaDC,SAAAA,WACAC,IAAAA,EAAUvB,KACND,KAAAA,IAAKW,MAAAA,OACLX,KAAAA,SAAKW,QAASK,WACVhB,EAAKE,UAAUuB,OAAAN,KAAfnB,GACHQ,OAFDY,KAAAC,MAGH,6BAhBL,oBA4BQK,QAAAA,WACAC,IAAAA,EACI1B,KAOJ2B,EAAY3B,KAAAC,MAAA2B,WAXpB5B,KAAAC,MAAA4B,KAaKC,MAtGUhC,EAAAiC,aAkEP,MAuCZjC,EAAAkC,KACa,QACTlC,EAAAmC,YACc,oBArCFnC,EAAQoC,QAuCpB,IACIC,YAAAA,EAAyBC,iBAAWpC,KAAAqC,cACpCC,SAAM,WACGxC,EAAAA,SAADa,QACR4B,EAAS7B,SAAAK,QAAA,SAAAC,GAHbjB,EAAAE,MAAAK,IAAA,aAAAP,CAAAiB,EAAAjB,QAYQC,KAAAwC,SACIL,KAAAA,MAAAA,IAAAA,gBACIM,KAAAA,IAAAA,OACAP,EAAAA,UACAI,SAAM,uBACNI,OAAAA,KAASC,YASL5C,KAAAA,cACAA,KAAAA,QAAAA,QACH0B,OAAA,UAfmBC,QAiB3B,sBACJ5B,EAAAkC,KACE,aACHG,EAAoBS,QACvB,SA/CW9C,EAAQ+C,GAiDpB,KACIC,YAAkBpD,IAElB+C,KAAAA,cAAiBM,GAIjBD,YAAAA,WACIR,IAAAA,EAAMtC,KACNyC,EAAOzC,KAAAC,MAFS2B,WAKfO,EAAA,IAAAzC,EAAA0C,YALLE,KAAA,WAOAQ,OAAYE,EAAQD,QAAA,YAAA,KAChBT,QAAM,gCAENI,IACIO,EAAAA,iBAKHnD,EAAAoD,UATLpD,EAAAoD,SAAAC,OAAA,EAYJL,IAAYE,IAAAA,KAAQlD,EAAAoD,SAAA,CACV,IAAAhB,EADUpC,EAAAoD,SAAAE,GAETlB,GAFSpC,EAAAoC,SAGPC,EAAWa,SAEZP,MAAA,aAAAP,EAMPA,QAAAA,EAXLI,KAAA,UA7CgBI,QAAS,WA4DNnC,EAAO8C,MAASxB,IACX,KAAA/B,EAAA+C,GAAAS,QAAAxD,EAAAoC,QAGPlC,KAAWkC,UAHxBnC,EAAAE,MAAA4B,IAAA,UAAA7B,KAAAkC,SAWHnC,EAAAM,kBAMOoC,EAAO7B,IAAAgC,OAOC7C,IAAAA,EAAKwD,IAAAA,EAAQC,YACbzD,KAAAA,gBACI4B,OAAAA,EAAAA,QAAY,WADI,KAEhBD,QAAAA,2BA2CpB,OA7CoC5B,EAAA2D,cAOvBX,EAAME,SACHV,KAAA,qBACAvC,MAAAA,YACH2C,QAAA,WACJO,OAAAS,KAAA5D,EAAA2D,YAAA,mBAhELX,EAAYE,SAoEhBV,KAAA,YACYqB,MAAAA,SACRb,QAAYE,WACFC,OAAAS,KACC5D,EAAA2D,YACE,yBACO3D,EAAQ6D,UAKhCb,EAAAE,SACEY,KAAQ,WACJC,MAAKC,QACHpB,QAAIqB,WACAjB,OACIR,mCACAG,OAAOsB,SAAQC,OACftB,OAASuB,KACL,gBAIAC,EAAKpE,OAhErBS,OAAO8C,MAAQ9C,OAAO8C,KAAK/C,IAAI,aAuE5BwC,EAAAE,SACGF,KAAAA,cACNI,MAAUf,WAFdO,QAAA,WAnQeO,OAAAkB,SAAAC,KAkMC7D,OAAO0D,KAuE3B,aACSnE,EAAW+C,GACG5C,eAMXoE,EAAAA,cAAqBvE,EAAIF,aAAa0E,OAAjB,GACrBC,EAAIC,SACJhE,KAAAA,iBAFJiC,MAAA,eAIA4B,QAAAA,YAEWG,KAAXC,sBACH1E,EAAAwD,QAAAmB,WAxRc1E,KAAAyE,sBAAA,EAqNC1E,EAAKwD,QAAQC,SAuEjCzD,EAAA2B,QAAAiD,QACehD,YAAS7B,EAEf8E,QAAS7E,EAAA8E,sBAEO/E,GAjSN2B,OAAA,WAsSIqD,KAAAA,sBAAnB,EACc/E,EAAA2B,QAAAiD,QAAAjD,QAAA,SAuBb5B,EAAA6D,cACMb,EAAAE,SACVV,KAAA,mBAhULG,MAAA,mBAVRC,QAAA,WAqP4BO,OAAOS,KAAK5D,EAAQ6D,iBAMhCoB,EAAEnB,QAAQ,8BAA+B,SAASE,GAC9CkB,EAAEnB,KAAKC,EAAU,SAASC,GAClBA,EAAQkB,UAAYlB,EAAQC,OAAOkB,UACnCpC,EAAYE,SACRV,KAAMyB,EAAQC,OAAO1B,KACrBG,MAAOsB,EAAQC,OAAOvB,MACtBC,QAAS,WACM,IAAIyC,SACX,UACApB,EAAQC,OAAOkB,SAEnBhB,CAAKpE,WAQrBsF,KAAMtC,EACNI,SAAUf,IAKlBQ,QAAS,WACL,IAAI7C,EAAUE,KAAKC,MAAM2B,WACrBhB,EAAMmE,EAAE,UAAUM,OAAOrF,KAAKsF,cAAcxF,IAChD,GAAIA,EAAQyF,UAAW,CACnB,IAAIf,EAAaO,EAAE,UACfQ,EAAY,IAAI5F,EAAc6F,uBAClCD,EAAUE,QAAU3F,EAAQ+C,GACH,IAAIjD,EAAa0E,kBACtCC,GAAIC,EACJhE,WAAY+E,IAEG/C,SACnB+C,EAAUG,QACV9E,EAAIyE,OAAOb,GAEf,OAAO5D,GAIX0E,cAAe,SAASxF,GACpB,IAAI6F,EAAQZ,EAAE,UACTH,SAAS,gBACTS,OAAOvF,EAAQ8F,MAEpB,OADAD,EAAME,KAAK,KAAKC,KAAK,SAAU,UACxBH,GAGXd,sBAAuB,SAAS/E,GAC5B,IAAIiG,EAAOjG,EAAQgF,aAAa3B,OAChC,GAAI4C,EAAO,EAAG,CACV,IAAIC,EAAuB,sBAC3BhB,EAAEnB,KAAK/D,EAAQgF,aAAc,SAASmB,EAAK7C,GACvC4C,GACIC,EAAIjE,MACHiE,EAAI/D,QACC,aAAe+D,EAAI/D,QAAU,IAC7B,KACLkB,EAAI2C,EAAO,EACN,KACA3C,GAAK2C,EAAO,EAAI,QAAU,MAExC,IAAIG,EAAoBnB,EAAE,QACrBe,KAAK,SAAU,UACfA,KACG,OACA,iDAEHK,KAAK,QACV,OAAOpB,EAAE,WACJM,OAAOW,EAAuB,YAC9BX,OAAOa,GACPb,OAAO,0BAEhB,MAAO","file":"../../../scripts/mvc/tool/tool-form-base.js","sourcesContent":["/**\n    This is the base class of the tool form plugin. This class is e.g. inherited by the regular and the workflow tool form.\n*/\ndefine(\n    [\n        \"utils/utils\",\n        \"utils/deferred\",\n        \"mvc/ui/ui-misc\",\n        \"mvc/form/form-view\",\n        \"mvc/citation/citation-model\",\n        \"mvc/citation/citation-view\"\n    ],\n    function(Utils, Deferred, Ui, FormBase, CitationModel, CitationView) {\n        return FormBase.extend({\n            initialize: function(options) {\n                var self = this;\n                this.deferred = new Deferred();\n                FormBase.prototype.initialize.call(this, options);\n\n                // optional model update\n                this._update(this.model.get(\"initialmodel\"));\n\n                // listen to history panel\n                if (\n                    this.model.get(\"listen_to_history\") &&\n                    parent.Galaxy &&\n                    parent.Galaxy.currHistoryPanel\n                ) {\n                    this.listenTo(\n                        parent.Galaxy.currHistoryPanel.collection,\n                        \"change\",\n                        function() {\n                            self.model.get(\"onchange\")();\n                        }\n                    );\n                }\n                // destroy dom elements\n                this.$el.on(\"remove\", function() {\n                    self._destroy();\n                });\n            },\n\n            /** Allows tool form variation to update tool model */\n            _update: function(callback) {\n                var self = this;\n                callback = callback || this.model.get(\"buildmodel\");\n                if (callback) {\n                    this.deferred.reset();\n                    this.deferred.execute(function(process) {\n                        callback(process, self);\n                        process.then(function() {\n                            self._render();\n                        });\n                    });\n                } else {\n                    this._render();\n                }\n            },\n\n            /** Wait for deferred build processes before removal */\n            _destroy: function() {\n                var self = this;\n                this.$el.off().hide();\n                this.deferred.execute(function() {\n                    FormBase.prototype.remove.call(self);\n                    Galaxy.emit.debug(\n                        \"tool-form-base::_destroy()\",\n                        \"Destroy view.\"\n                    );\n                });\n            },\n\n            /** Build form */\n            _render: function() {\n                var self = this;\n                var options = this.model.attributes;\n                this.model.set({\n                    title:\n                        options.fixed_title ||\n                        \"<b>\" +\n                            options.name +\n                            \"</b> \" +\n                            options.description +\n                            \" (Galaxy Version \" +\n                            options.version +\n                            \")\",\n                    operations: !options.hide_operations && this._operations(),\n                    onchange: function() {\n                        self.deferred.reset();\n                        self.deferred.execute(function(process) {\n                            self.model.get(\"postchange\")(process, self);\n                        });\n                    }\n                });\n                this.render();\n                if (!this.model.get(\"collapsible\")) {\n                    this.$el.append(\n                        $(\"<div/>\")\n                            .addClass(\"ui-margin-top-large\")\n                            .append(this._footer())\n                    );\n                }\n                this.show_message &&\n                    this.message.update({\n                        status: \"success\",\n                        message:\n                            \"Now you are using '\" +\n                            options.name +\n                            \"' version \" +\n                            options.version +\n                            \", id '\" +\n                            options.id +\n                            \"'.\",\n                        persistent: false\n                    });\n                this.show_message = true;\n            },\n\n            /** Create tool operation menu */\n            _operations: function() {\n                var self = this;\n                var options = this.model.attributes;\n\n                // button for version selection\n                var versions_button = new Ui.ButtonMenu({\n                    icon: \"fa-cubes\",\n                    title: (!options.narrow && \"Versions\") || null,\n                    tooltip: \"Select another tool version\"\n                });\n                if (\n                    !options.sustain_version &&\n                    options.versions &&\n                    options.versions.length > 1\n                ) {\n                    for (var i in options.versions) {\n                        var version = options.versions[i];\n                        if (version != options.version) {\n                            versions_button.addMenu({\n                                title: \"Switch to \" + version,\n                                version: version,\n                                icon: \"fa-cube\",\n                                onclick: function() {\n                                    // here we update the tool version (some tools encode the version also in the id)\n                                    self.model.set(\n                                        \"id\",\n                                        options.id.replace(\n                                            options.version,\n                                            this.version\n                                        )\n                                    );\n                                    self.model.set(\"version\", this.version);\n                                    self._update();\n                                }\n                            });\n                        }\n                    }\n                } else {\n                    versions_button.$el.hide();\n                }\n\n                // button for options e.g. search, help\n                var menu_button = new Ui.ButtonMenu({\n                    icon: \"fa-caret-down\",\n                    title: (!options.narrow && \"Options\") || null,\n                    tooltip: \"View available options\"\n                });\n                if (options.biostar_url) {\n                    menu_button.addMenu({\n                        icon: \"fa-question-circle\",\n                        title: \"Question?\",\n                        onclick: function() {\n                            window.open(options.biostar_url + \"/p/new/post/\");\n                        }\n                    });\n                    menu_button.addMenu({\n                        icon: \"fa-search\",\n                        title: \"Search\",\n                        onclick: function() {\n                            window.open(\n                                options.biostar_url +\n                                    \"/local/search/page/?q=\" +\n                                    options.name\n                            );\n                        }\n                    });\n                }\n                menu_button.addMenu({\n                    icon: \"fa-share\",\n                    title: \"Share\",\n                    onclick: function() {\n                        prompt(\n                            \"Copy to clipboard: Ctrl+C, Enter\",\n                            window.location.origin +\n                                Galaxy.root +\n                                \"root?tool_id=\" +\n                                options.id\n                        );\n                    }\n                });\n\n                // add admin operations\n                if (Galaxy.user && Galaxy.user.get(\"is_admin\")) {\n                    menu_button.addMenu({\n                        icon: \"fa-download\",\n                        title: \"Download\",\n                        onclick: function() {\n                            window.location.href =\n                                Galaxy.root +\n                                \"api/tools/\" +\n                                options.id +\n                                \"/download\";\n                        }\n                    });\n                }\n\n                // button for version selection\n                if (options.requirements && options.requirements.length > 0) {\n                    menu_button.addMenu({\n                        icon: \"fa-info-circle\",\n                        title: \"Requirements\",\n                        onclick: function() {\n                            if (\n                                !this.requirements_visible ||\n                                self.portlet.collapsed\n                            ) {\n                                this.requirements_visible = true;\n                                self.portlet.expand();\n                                self.message.update({\n                                    persistent: true,\n                                    message: self._templateRequirements(\n                                        options\n                                    ),\n                                    status: \"info\"\n                                });\n                            } else {\n                                this.requirements_visible = false;\n                                self.message.update({ message: \"\" });\n                            }\n                        }\n                    });\n                }\n\n                // add toolshed url\n                if (options.sharable_url) {\n                    menu_button.addMenu({\n                        icon: \"fa-external-link\",\n                        title: \"See in Tool Shed\",\n                        onclick: function() {\n                            window.open(options.sharable_url);\n                        }\n                    });\n                }\n\n                // add tool menu webhooks\n                $.getJSON(\"/api/webhooks/tool-menu/all\", function(webhooks) {\n                    _.each(webhooks, function(webhook) {\n                        if (webhook.activate && webhook.config.function) {\n                            menu_button.addMenu({\n                                icon: webhook.config.icon,\n                                title: webhook.config.title,\n                                onclick: function() {\n                                    var func = new Function(\n                                        \"options\",\n                                        webhook.config.function\n                                    );\n                                    func(options);\n                                }\n                            });\n                        }\n                    });\n                });\n\n                return {\n                    menu: menu_button,\n                    versions: versions_button\n                };\n            },\n\n            /** Create footer */\n            _footer: function() {\n                var options = this.model.attributes;\n                var $el = $(\"<div/>\").append(this._templateHelp(options));\n                if (options.citations) {\n                    var $citations = $(\"<div/>\");\n                    var citations = new CitationModel.ToolCitationCollection();\n                    citations.tool_id = options.id;\n                    var citation_list_view = new CitationView.CitationListView({\n                        el: $citations,\n                        collection: citations\n                    });\n                    citation_list_view.render();\n                    citations.fetch();\n                    $el.append($citations);\n                }\n                return $el;\n            },\n\n            /** Templates */\n            _templateHelp: function(options) {\n                var $tmpl = $(\"<div/>\")\n                    .addClass(\"ui-form-help\")\n                    .append(options.help);\n                $tmpl.find(\"a\").attr(\"target\", \"_blank\");\n                return $tmpl;\n            },\n\n            _templateRequirements: function(options) {\n                var nreq = options.requirements.length;\n                if (nreq > 0) {\n                    var requirements_message = \"This tool requires \";\n                    _.each(options.requirements, function(req, i) {\n                        requirements_message +=\n                            req.name +\n                            (req.version\n                                ? \" (Version \" + req.version + \")\"\n                                : \"\") +\n                            (i < nreq - 2\n                                ? \", \"\n                                : i == nreq - 2 ? \" and \" : \"\");\n                    });\n                    var requirements_link = $(\"<a/>\")\n                        .attr(\"target\", \"_blank\")\n                        .attr(\n                            \"href\",\n                            \"https://galaxyproject.org/tools/requirements/\"\n                        )\n                        .text(\"here\");\n                    return $(\"<span/>\")\n                        .append(requirements_message + \". Click \")\n                        .append(requirements_link)\n                        .append(\" for more information.\");\n                }\n                return \"No requirements found.\";\n            }\n        });\n    }\n);\n"]}