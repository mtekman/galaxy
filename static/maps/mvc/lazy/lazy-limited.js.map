{"version":3,"sources":["mvc/lazy/lazy-limited.js"],"names":["define","Backbone","View","extend","initialize","options","$container","this","self","collection","new_content","max","content_list","$message","listenTo","append","_reset","_refresh","_remove","_done","done","_","size","content","each","hide","model","id","remove","model_id","view","i"],"mappings":"aACAA,UAAW,WADX,OAAAC,SAAAC,KAAAC,QACOC,WAAI,SAAWC,GAEdD,KAAAA,WAAYC,EAAAC,WACRC,KAAIC,WAAJH,EAAAI,WACAF,KAAKD,YAAaD,EAAQC,YAC1BC,KAAKE,IAAAA,EAAaJ,KAAQI,GAC1BF,KAAKG,gBACLH,KAAKI,SAAMN,EAAAA,UACNO,SAAAA,kBACAC,OAKAP,qBAAuBO,KAA5BF,IAAA,yBAEAJ,KAAKO,WAASC,OAAKN,KAAAA,UACnBF,KAAKO,SAASP,KAAKE,WAAY,QAA/BF,KAAyCS,OAAzCT,MAhBoBA,KAAAO,SAAAP,KAAAE,WAAA,MAAAF,KAAAU,SAAAV,MAgBpBA,KAAKO,SAASP,KAAKE,WAAY,SAAUF,KAAKW,QAASX,OAMvDY,MAAA,WACA,IAAAC,EAAAC,EAAAC,KAAAf,KAAAK,cAAAL,KAAAI,IAAA,OAvBoBJ,KAAAM,SAAAO,EAAA,OAAA,UAuBbA,GAMHG,OAAAA,WACHF,EAFDG,KAAAjB,KAAAK,aAAA,SAAAW,GAGAA,EAAKX,WA/BeL,KAAAK,gBAgCpBL,KAAKM,SAASY,QAMdP,QAAIK,SAAUG,GACd,IAAIH,EAASG,EAAAC,GACTJ,EAAQK,KAARhB,aAAAiB,GACAN,IACHA,EAAAK,gBACIX,KAALL,aAAAiB,IAAAtB,KAAKU,YAMDA,SAAA,WACI,IAAAV,KAAAY,QACA,IAAA,IAAIW,KAAAA,KAAOrB,WAAKG,OAAac,CAC7B,IAAIA,EAAMd,KAAAA,WAAac,OAAWK,GAC1BR,KAAAA,aAAeb,EAAYgB,IAC/B,IAAAnB,KAAKK,aAAac,EAAMC,IAAMJ,CAC9B,IAAIA,EAAAhB,KAAcG,YAAAgB,GAEjB,GADGnB,KAAAK,aAAAc,EAAAC,IAAAJ,EACHhB,KAAAY,QACJ","file":"../../../scripts/mvc/lazy/lazy-limited.js","sourcesContent":["/** Contains helpers to limit/lazy load views for backbone views */\ndefine([], function() {\n    return Backbone.View.extend({\n        initialize: function(options) {\n            var self = this;\n            this.$container = options.$container;\n            this.collection = options.collection;\n            this.new_content = options.new_content;\n            this.max = options.max || 50;\n            this.content_list = {};\n            this.$message = $(\"<div/>\")\n                .addClass(\"ui-limitloader\")\n                .append(\n                    \"...only the first \" + this.max + \" entries are visible.\"\n                );\n            this.$container.append(this.$message);\n            this.listenTo(this.collection, \"reset\", this._reset, this);\n            this.listenTo(this.collection, \"add\", this._refresh, this);\n            this.listenTo(this.collection, \"remove\", this._remove, this);\n        },\n\n        /** Checks if the limit has been reached */\n        _done: function() {\n            var done = _.size(this.content_list) > this.max;\n            this.$message[done ? \"show\" : \"hide\"]();\n            return done;\n        },\n\n        /** Remove all content */\n        _reset: function() {\n            _.each(this.content_list, function(content) {\n                content.remove();\n            });\n            this.content_list = {};\n            this.$message.hide();\n        },\n\n        /** Remove content */\n        _remove: function(model) {\n            var model_id = model.id;\n            var content = this.content_list[model_id];\n            if (content) {\n                content.remove();\n                delete this.content_list[model_id];\n            }\n            this._refresh();\n        },\n\n        /** Refreshes container content by adding new views if visible */\n        _refresh: function() {\n            if (!this._done()) {\n                for (var i in this.collection.models) {\n                    var model = this.collection.models[i];\n                    var view = this.content_list[model.id];\n                    if (!this.content_list[model.id]) {\n                        var content = this.new_content(model);\n                        this.content_list[model.id] = content;\n                        if (this._done()) {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    });\n});\n"]}