{"version":3,"sources":["mvc/collection/collection-li-edit.js"],"names":["define","DC_LI","DATASET_LI_EDIT","BASE_MVC","_l","DCListItemView","prototype","initialize","attributes","call","this","toString","model","DCEListItemView","DCEListItemEdit","extend","modelString","DatasetDCEListItemEdit","DatasetListItemEdit","view","inReadyState","hasDetails","_fetchModelDetails","fetch","jQuery","when","_renderDeleteButton","templates","_","DCListItemEdit","NestedDCDCEListItemEdit","NestedDCDCEListItemView"],"mappings":"aAAAA,QAEQ,+BAMA,8BACA,eAJA,sBAMA,SAAAC,EAAAC,EAAAC,EAAAC,GAGI,IAAAC,EAAAJ,EAAAI,eAGQA,EAAeC,EAAUC,QAG7BA,WAAA,SAAAC,GACAH,EAAAC,UAAAC,WAAAE,KAAAC,KAAAF,IARRG,SAAA,WAoBA,MAAA,mBAV8BD,KAAKE,MAQnCF,KAAAE,MAAA,GACsBX,cACtB,OAMQY,EAAAZ,EAAAY,gBAHoCC,EAAAD,EAAAE,QAW5BC,WAAAA,SAAmBJ,GAGhBC,EAAAP,UAAqBU,WAA5BP,KAAAC,KAAAF,IAMZG,SAAA,WANY,MAAO,oBAOnBD,KAAAE,MACAF,KAAAE,MAAA,GATkB,cACoC,OAWlDK,EAAyBf,EAAgBgB,oBAAoBH,QAgBjDI,WAAJ,SAAAX,GACIW,EAAWC,oBAAmBd,UAAWe,WAAcZ,KAChDU,KACVX,IASLc,mBAAA,WACA,IAAAH,EAAAT,KACU,OAAAS,EAAAP,MAAAQ,iBAAWD,EAAAP,MAAAS,aACCF,EAAKP,MAALW,OACPX,QADO,IAIrBY,OAAAC,QAKTC,oBAAA,WACAT,OAAuBX,MAXfK,SAAU,WAIN,MAAO,2BAmBnBD,KAAAE,MACAF,KAAAE,MAAA,GArBkB,cAC2C,OAoC7D,OALSK,EAAAX,UAAAqB,UARTC,EAAAb,UAYAb,EAAAgB,oBAAAZ,UAAAqB,WAEIE,SACAf,EAAiBA,uBAFdR,UAAAqB,UAGHV,YAFAY,eAAgBA,EAChBf,gBAAiBA,EACjBG,uBAAwBA,EACxBa,wBAjB0B7B,EAAM8B,wBAAwBhB,QAGpDJ,SAAU,WAIN,MAAO,4BAHWD,KAAKE,MACjBF,KAAKE,MAAQ,GACb,cAC4C","file":"../../../scripts/mvc/collection/collection-li-edit.js","sourcesContent":["define(\n    [\n        \"mvc/collection/collection-li\",\n        \"mvc/dataset/dataset-li-edit\",\n        \"mvc/base-mvc\",\n        \"utils/localization\"\n    ],\n    function(DC_LI, DATASET_LI_EDIT, BASE_MVC, _l) {\n        \"use strict\";\n        //==============================================================================\n        var DCListItemView = DC_LI.DCListItemView;\n        /** @class Edit view for DatasetCollection.\n */\n        var DCListItemEdit = DCListItemView.extend(\n            /** @lends DCListItemEdit.prototype */ {\n                /** override to add linkTarget */\n                initialize: function(attributes) {\n                    DCListItemView.prototype.initialize.call(this, attributes);\n                },\n\n                // ......................................................................... misc\n                /** String representation */\n                toString: function() {\n                    var modelString = this.model\n                        ? this.model + \"\"\n                        : \"(no model)\";\n                    return \"DCListItemEdit(\" + modelString + \")\";\n                }\n            }\n        );\n\n        //==============================================================================\n        var DCEListItemView = DC_LI.DCEListItemView;\n        /** @class Read only view for DatasetCollectionElement.\n */\n        var DCEListItemEdit = DCEListItemView.extend(\n            /** @lends DCEListItemEdit.prototype */ {\n                //TODO: this might be expendable - compacted with HDAListItemView\n\n                /** set up */\n                initialize: function(attributes) {\n                    DCEListItemView.prototype.initialize.call(this, attributes);\n                },\n\n                // ......................................................................... misc\n                /** String representation */\n                toString: function() {\n                    var modelString = this.model\n                        ? this.model + \"\"\n                        : \"(no model)\";\n                    return \"DCEListItemEdit(\" + modelString + \")\";\n                }\n            }\n        );\n\n        //==============================================================================\n        // NOTE: this does not inherit from DatasetDCEListItemView as you would expect\n        //TODO: but should - if we can find something simpler than using diamond\n        /** @class Editable view for a DatasetCollectionElement that is also an DatasetAssociation\n *      (a dataset contained in a dataset collection).\n */\n        var DatasetDCEListItemEdit = DATASET_LI_EDIT.DatasetListItemEdit.extend(\n            /** @lends DatasetDCEListItemEdit.prototype */ {\n                /** set up */\n                initialize: function(attributes) {\n                    DATASET_LI_EDIT.DatasetListItemEdit.prototype.initialize.call(\n                        this,\n                        attributes\n                    );\n                },\n\n                // NOTE: this does not inherit from DatasetDCEListItemView - so we duplicate this here\n                //TODO: fix\n                /** In this override, only get details if in the ready state.\n     *  Note: fetch with no 'change' event triggering to prevent automatic rendering.\n     */\n                _fetchModelDetails: function() {\n                    var view = this;\n                    if (view.model.inReadyState() && !view.model.hasDetails()) {\n                        return view.model.fetch({ silent: true });\n                    }\n                    return jQuery.when();\n                },\n\n                /** Override to remove delete button */\n                _renderDeleteButton: function() {\n                    return null;\n                },\n\n                // ......................................................................... misc\n                /** String representation */\n                toString: function() {\n                    var modelString = this.model\n                        ? this.model + \"\"\n                        : \"(no model)\";\n                    return \"DatasetDCEListItemEdit(\" + modelString + \")\";\n                }\n            }\n        );\n\n        // ............................................................................ TEMPLATES\n        /** underscore templates */\n        DatasetDCEListItemEdit.prototype.templates = (function() {\n            return _.extend(\n                {},\n                DATASET_LI_EDIT.DatasetListItemEdit.prototype.templates,\n                {\n                    titleBar:\n                        DC_LI.DatasetDCEListItemView.prototype.templates\n                            .titleBar\n                }\n            );\n        })();\n\n        //==============================================================================\n        /** @class Read only view for a DatasetCollectionElement that is also a DatasetCollection\n *      (a nested DC).\n */\n        var NestedDCDCEListItemEdit = DC_LI.NestedDCDCEListItemView.extend(\n            /** @lends NestedDCDCEListItemEdit.prototype */ {\n                /** String representation */\n                toString: function() {\n                    var modelString = this.model\n                        ? this.model + \"\"\n                        : \"(no model)\";\n                    return \"NestedDCDCEListItemEdit(\" + modelString + \")\";\n                }\n            }\n        );\n\n        //==============================================================================\n        return {\n            DCListItemEdit: DCListItemEdit,\n            DCEListItemEdit: DCEListItemEdit,\n            DatasetDCEListItemEdit: DatasetDCEListItemEdit,\n            NestedDCDCEListItemEdit: NestedDCDCEListItemEdit\n        };\n    }\n);\n"]}