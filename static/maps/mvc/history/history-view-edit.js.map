{"version":3,"sources":["mvc/history/history-view-edit.js"],"names":["define","_super","HISTORY_VIEW","HISTORY_CONTENTS","HDAViewClass","HDA_MODEL","HDCAViewClass","HDCA_LI_EDIT","TAGS","ANNOTATIONS","LIST_COLLECTION_CREATOR","PAIR_COLLECTION_CREATOR","initialize","attributes","BASE_MVC","_l","annotationEditor","HistoryView","HistoryViewEdit","extend","_setUpListeners","HDCAListItemEdit","_renderCounts","prototype","_renderSearchProgress","this","tagsEditor","_setUpModelListeners","purgeAllowed","annotationEditorShown","_handleItemVisibleChange","tagsEditorShown","call","on","droptarget:drop","ev","data","dataDropped","dropTargetOff","view:attached view:removed","search:loading-progress","search:searching","_renderSearchFindings","$newRender","listenTo","Galaxy","_renderTags","_renderAnnotation","updateHistoryDiskSize","text","collection","change:deleted","_handleItemDeletedChange","change:visible","change:purged","model","searchFor","fetch","$whereTo","$","html","fetching-hidden","jQuery","fetching-deleted-done fetching-hidden-done","onshowFirstTime","_buildNewRender","panel","toggleHDATagEditors","$activator","title","user","classes","id","faIcon","get","el","onshow","toggleHDAAnnotationEditors","appendTo","faIconButton","views","$el","templates","counts","toJSON","_setUpBehaviors","find","$where","TagsEditor","render","nameSelector","fxSpeed","previousName","newName","save","AnnotationEditor","multiselectActions","action","getSelectedModels","onhide","func","actions","isAnonymous","concat","_collectionActions","attr","buildCollection","make_text_editable","on_finish","name","fail","previous","createFunc","LIST_OF_PAIRS_COLLECTION_CREATOR","warn","hideSourceItems","refresh","HistoryDatasetAssociation","hide","ajaxQueue","unhide","itemModel","undelete","set","push","_handleItemUndeletion","confirm","includeDeleted","purge","_handleItemUnhidden","_handleItemHidden","contentsShown","contents","includeHidden","removeItemView","hidden","collectionType","selection","view","toggle","speed","createListCollection","clone","events","toggleShowDeleted","createListOfPairsCollection","console","toggleShowHidden","done","_getItemViewOptions","dropTarget","_","options","dragleave","bind","drop","_handleItemDeletion","$dropTarget","_renderDropTarget","evName","dropHandlers","deleted","active","_renderDropTargetHelp","remove","dropTargetToggle","preventDefault","dragover","showOrHide","stopPropagation","each","dataTransfer","dropEffect","click .show-selectors-btn","click .toggle-hidden-link","limit","offset","stop","self","found","countsTemplate","foundTemplate","dragenter","$list","before","hasOwnProperty","addClass","_dropHandlers","off","dropTargetOn","css","originalEvent","getData","JSON","parse","err","trigger","isObject","model_class","currentPage","fetchPage","then","copy","when","toString","wrapTemplate"],"mappings":"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","file":"../../../scripts/mvc/history/history-view-edit.js","sourcesContent":["define(\n    [\n        \"mvc/history/history-view\",\n        \"mvc/history/history-contents\",\n        \"mvc/dataset/states\",\n        \"mvc/history/hda-model\",\n        \"mvc/history/hda-li-edit\",\n        \"mvc/history/hdca-li-edit\",\n        \"mvc/tag\",\n        \"mvc/annotation\",\n        \"mvc/collection/list-collection-creator\",\n        \"mvc/collection/pair-collection-creator\",\n        \"mvc/collection/list-of-pairs-collection-creator\",\n        \"ui/fa-icon-button\",\n        \"mvc/ui/popup-menu\",\n        \"mvc/base-mvc\",\n        \"utils/localization\",\n        \"ui/editable-text\"\n    ],\n    function(\n        HISTORY_VIEW,\n        HISTORY_CONTENTS,\n        STATES,\n        HDA_MODEL,\n        HDA_LI_EDIT,\n        HDCA_LI_EDIT,\n        TAGS,\n        ANNOTATIONS,\n        LIST_COLLECTION_CREATOR,\n        PAIR_COLLECTION_CREATOR,\n        LIST_OF_PAIRS_COLLECTION_CREATOR,\n        faIconButton,\n        PopupMenu,\n        BASE_MVC,\n        _l\n    ) {\n        \"use strict\";\n\n        /* =============================================================================\nTODO:\n\n============================================================================= */\n        var _super = HISTORY_VIEW.HistoryView;\n        // base class for history-view-edit-current and used as-is in history/view.mako\n        /** @class Editable View/Controller for the history model.\n *\n *  Allows:\n *      (everything HistoryView allows)\n *      changing the name\n *      displaying and editing tags and annotations\n *      multi-selection and operations on mulitple content items\n */\n        var HistoryViewEdit = _super.extend(\n            /** @lends HistoryViewEdit.prototype */ {\n                /** class to use for constructing the HistoryDatasetAssociation views */\n                HDAViewClass: HDA_LI_EDIT.HDAListItemEdit,\n                /** class to use for constructing the HistoryDatasetCollectionAssociation views */\n                HDCAViewClass: HDCA_LI_EDIT.HDCAListItemEdit,\n\n                // ......................................................................... SET UP\n                /** Set up the view, set up storage, bind listeners to HistoryContents events\n     *  @param {Object} attributes\n     */\n                initialize: function(attributes) {\n                    attributes = attributes || {};\n                    _super.prototype.initialize.call(this, attributes);\n\n                    // ---- set up instance vars\n                    /** editor for tags - sub-view */\n                    this.tagsEditor = null;\n\n                    /** enable drag and drop - sub-view */\n                    this.dragItems = true;\n\n                    /** editor for annotations - sub-view */\n                    this.annotationEditor = null;\n\n                    /** allow user purge of dataset files? */\n                    this.purgeAllowed = attributes.purgeAllowed || false;\n\n                    // states/modes the panel can be in\n                    /** is the panel currently showing the dataset selection controls? */\n                    this.annotationEditorShown =\n                        attributes.annotationEditorShown || false;\n                    this.tagsEditorShown = attributes.tagsEditorShown || false;\n                },\n\n                /** Override to handle history as drag-drop target */\n                _setUpListeners: function() {\n                    _super.prototype._setUpListeners.call(this);\n                    return this.on({\n                        \"droptarget:drop\": function(ev, data) {\n                            // process whatever was dropped and re-hide the drop target\n                            this.dataDropped(data);\n                            this.dropTargetOff();\n                        },\n                        \"view:attached view:removed\": function() {\n                            this._renderCounts();\n                        },\n                        \"search:loading-progress\": this._renderSearchProgress,\n                        \"search:searching\": this._renderSearchFindings\n                    });\n                },\n\n                // ------------------------------------------------------------------------ listeners\n                /** listening for history and HDA events */\n                _setUpModelListeners: function() {\n                    _super.prototype._setUpModelListeners.call(this);\n                    this.listenTo(\n                        this.model,\n                        \"change:size\",\n                        this.updateHistoryDiskSize\n                    );\n                    return this;\n                },\n\n                /** listening for collection events */\n                _setUpCollectionListeners: function() {\n                    _super.prototype._setUpCollectionListeners.call(this);\n                    this.listenTo(this.collection, {\n                        \"change:deleted\": this._handleItemDeletedChange,\n                        \"change:visible\": this._handleItemVisibleChange,\n                        \"change:purged\": function(model) {\n                            // hafta get the new nice-size w/o the purged model\n                            this.model.fetch();\n                        },\n                        // loading indicators for deleted/hidden\n                        \"fetching-deleted\": function(collection) {\n                            this.$(\"> .controls .deleted-count\").html(\n                                \"<i>\" + _l(\"loading...\") + \"</i>\"\n                            );\n                        },\n                        \"fetching-hidden\": function(collection) {\n                            this.$(\"> .controls .hidden-count\").html(\n                                \"<i>\" + _l(\"loading...\") + \"</i>\"\n                            );\n                        },\n                        \"fetching-deleted-done fetching-hidden-done\": this\n                            ._renderCounts\n                    });\n                    return this;\n                },\n\n                // ------------------------------------------------------------------------ panel rendering\n                /** In this override, add tag and annotation editors and a btn to toggle the selectors */\n                _buildNewRender: function() {\n                    // create a new render using a skeleton template, render title buttons, render body, and set up events, etc.\n                    var $newRender = _super.prototype._buildNewRender.call(\n                        this\n                    );\n                    if (!this.model) {\n                        return $newRender;\n                    }\n\n                    if (\n                        Galaxy &&\n                        Galaxy.user &&\n                        Galaxy.user.id &&\n                        Galaxy.user.id === this.model.get(\"user_id\")\n                    ) {\n                        this._renderTags($newRender);\n                        this._renderAnnotation($newRender);\n                    }\n                    return $newRender;\n                },\n\n                /** Update the history size display (curr. upper right of panel). */\n                updateHistoryDiskSize: function() {\n                    this.$(\".history-size\").text(this.model.get(\"nice_size\"));\n                },\n\n                /** override to render counts when the items are rendered */\n                renderItems: function($whereTo) {\n                    var views = _super.prototype.renderItems.call(\n                        this,\n                        $whereTo\n                    );\n                    if (!this.searchFor) {\n                        this._renderCounts($whereTo);\n                    } else {\n                        this._renderSearchFindings($whereTo);\n                    }\n                    return views;\n                },\n\n                /** override to show counts, what's deleted/hidden, and links to toggle those */\n                _renderCounts: function($whereTo) {\n                    $whereTo = $whereTo instanceof jQuery ? $whereTo : this.$el;\n                    var html = this.templates.counts(this.model.toJSON(), this);\n                    return $whereTo.find(\"> .controls .subtitle\").html(html);\n                },\n\n                /** render the tags sub-view controller */\n                _renderTags: function($where) {\n                    var panel = this;\n                    this.tagsEditor = new TAGS.TagsEditor({\n                        model: this.model,\n                        el: $where.find(\".controls .tags-display\"),\n                        onshowFirstTime: function() {\n                            this.render();\n                        },\n                        // show hide sub-view tag editors when this is shown/hidden\n                        onshow: function() {\n                            panel.toggleHDATagEditors(true, panel.fxSpeed);\n                        },\n                        onhide: function() {\n                            panel.toggleHDATagEditors(false, panel.fxSpeed);\n                        },\n                        $activator: faIconButton({\n                            title: _l(\"Edit history tags\"),\n                            classes: \"history-tag-btn\",\n                            faIcon: \"fa-tags\"\n                        }).appendTo($where.find(\".controls .actions\"))\n                    });\n                },\n                /** render the annotation sub-view controller */\n                _renderAnnotation: function($where) {\n                    var panel = this;\n                    this.annotationEditor = new ANNOTATIONS.AnnotationEditor({\n                        model: this.model,\n                        el: $where.find(\".controls .annotation-display\"),\n                        onshowFirstTime: function() {\n                            this.render();\n                        },\n                        // show hide sub-view view annotation editors when this is shown/hidden\n                        onshow: function() {\n                            panel.toggleHDAAnnotationEditors(\n                                true,\n                                panel.fxSpeed\n                            );\n                        },\n                        onhide: function() {\n                            panel.toggleHDAAnnotationEditors(\n                                false,\n                                panel.fxSpeed\n                            );\n                        },\n                        $activator: faIconButton({\n                            title: _l(\"Edit history annotation\"),\n                            classes: \"history-annotate-btn\",\n                            faIcon: \"fa-comment\"\n                        }).appendTo($where.find(\".controls .actions\"))\n                    });\n                },\n\n                /** Set up HistoryViewEdit js/widget behaviours\n     *  In this override, make the name editable\n     */\n                _setUpBehaviors: function($where) {\n                    $where = $where || this.$el;\n                    _super.prototype._setUpBehaviors.call(this, $where);\n                    if (!this.model) {\n                        return;\n                    }\n\n                    // anon users shouldn't have access to any of the following\n                    if (\n                        !Galaxy.user ||\n                        Galaxy.user.isAnonymous() ||\n                        Galaxy.user.id !== this.model.get(\"user_id\")\n                    ) {\n                        return;\n                    }\n\n                    var panel = this,\n                        nameSelector = \"> .controls .name\";\n                    $where\n                        .find(nameSelector)\n                        .attr(\"title\", _l(\"Click to rename history\"))\n                        .tooltip({ placement: \"bottom\" })\n                        .make_text_editable({\n                            on_finish: function(newName) {\n                                var previousName = panel.model.get(\"name\");\n                                if (newName && newName !== previousName) {\n                                    panel.$el.find(nameSelector).text(newName);\n                                    panel.model\n                                        .save({ name: newName })\n                                        .fail(function() {\n                                            panel.$el\n                                                .find(nameSelector)\n                                                .text(\n                                                    panel.model.previous(\"name\")\n                                                );\n                                        });\n                                } else {\n                                    panel.$el\n                                        .find(nameSelector)\n                                        .text(previousName);\n                                }\n                            }\n                        });\n                },\n\n                /** return a new popup menu for choosing a multi selection action\n     *  ajax calls made for multiple datasets are queued\n     */\n                multiselectActions: function() {\n                    var panel = this,\n                        actions = [\n                            {\n                                html: _l(\"Hide datasets\"),\n                                func: function() {\n                                    var action =\n                                        HDA_MODEL.HistoryDatasetAssociation\n                                            .prototype.hide;\n                                    panel.getSelectedModels().ajaxQueue(action);\n                                }\n                            },\n                            {\n                                html: _l(\"Unhide datasets\"),\n                                func: function() {\n                                    var action =\n                                        HDA_MODEL.HistoryDatasetAssociation\n                                            .prototype.unhide;\n                                    panel.getSelectedModels().ajaxQueue(action);\n                                }\n                            },\n                            {\n                                html: _l(\"Delete datasets\"),\n                                func: function() {\n                                    var action =\n                                        HDA_MODEL.HistoryDatasetAssociation\n                                            .prototype[\"delete\"];\n                                    panel.getSelectedModels().ajaxQueue(action);\n                                }\n                            },\n                            {\n                                html: _l(\"Undelete datasets\"),\n                                func: function() {\n                                    var action =\n                                        HDA_MODEL.HistoryDatasetAssociation\n                                            .prototype.undelete;\n                                    panel.getSelectedModels().ajaxQueue(action);\n                                }\n                            }\n                        ];\n                    if (panel.purgeAllowed) {\n                        actions.push({\n                            html: _l(\"Permanently delete datasets\"),\n                            func: function() {\n                                if (\n                                    confirm(\n                                        _l(\n                                            \"This will permanently remove the data in your datasets. Are you sure?\"\n                                        )\n                                    )\n                                ) {\n                                    var action =\n                                        HDA_MODEL.HistoryDatasetAssociation\n                                            .prototype.purge;\n                                    panel.getSelectedModels().ajaxQueue(action);\n                                }\n                            }\n                        });\n                    }\n                    actions = actions.concat(panel._collectionActions());\n                    return actions;\n                },\n\n                /**   */\n                _collectionActions: function() {\n                    var panel = this;\n                    return [\n                        {\n                            html: _l(\"Build Dataset List\"),\n                            func: function() {\n                                panel.buildCollection(\"list\");\n                            }\n                        },\n                        // TODO: Only show quick pair if two things selected.\n                        {\n                            html: _l(\"Build Dataset Pair\"),\n                            func: function() {\n                                panel.buildCollection(\"paired\");\n                            }\n                        },\n                        {\n                            html: _l(\"Build List of Dataset Pairs\"),\n                            func: function() {\n                                panel.buildCollection(\"list:paired\");\n                            }\n                        }\n                    ];\n                },\n\n                buildCollection: function(\n                    collectionType,\n                    selection,\n                    hideSourceItems\n                ) {\n                    var panel = this;\n                    var selection = selection || panel.getSelectedModels();\n                    var hideSourceItems = hideSourceItems || false;\n                    var createFunc;\n                    if (collectionType == \"list\") {\n                        createFunc =\n                            LIST_COLLECTION_CREATOR.createListCollection;\n                    } else if (collectionType == \"paired\") {\n                        createFunc =\n                            PAIR_COLLECTION_CREATOR.createPairCollection;\n                    } else if (collectionType == \"list:paired\") {\n                        createFunc =\n                            LIST_OF_PAIRS_COLLECTION_CREATOR.createListOfPairsCollection;\n                    } else {\n                        console.warn(\n                            \"Unknown collectionType encountered \" +\n                                collectionType\n                        );\n                    }\n                    createFunc(selection, hideSourceItems).done(function() {\n                        panel.model.refresh();\n                    });\n                },\n\n                // ------------------------------------------------------------------------ sub-views\n                /** In this override, add purgeAllowed and whether tags/annotation editors should be shown */\n                _getItemViewOptions: function(model) {\n                    var options = _super.prototype._getItemViewOptions.call(\n                        this,\n                        model\n                    );\n                    _.extend(options, {\n                        purgeAllowed: this.purgeAllowed,\n                        tagsEditorShown:\n                            this.tagsEditor && !this.tagsEditor.hidden,\n                        annotationEditorShown:\n                            this.annotationEditor &&\n                            !this.annotationEditor.hidden\n                    });\n                    return options;\n                },\n\n                /** If this item is deleted and we're not showing deleted items, remove the view\n     *  @param {Model} the item model to check\n     */\n                _handleItemDeletedChange: function(itemModel) {\n                    if (itemModel.get(\"deleted\")) {\n                        this._handleItemDeletion(itemModel);\n                    } else {\n                        this._handleItemUndeletion(itemModel);\n                    }\n                    this._renderCounts();\n                },\n\n                _handleItemDeletion: function(itemModel) {\n                    var contentsShown = this.model.get(\"contents_active\");\n                    contentsShown.deleted += 1;\n                    contentsShown.active -= 1;\n                    if (!this.model.contents.includeDeleted) {\n                        this.removeItemView(itemModel);\n                    }\n                    this.model.set(\"contents_active\", contentsShown);\n                },\n\n                _handleItemUndeletion: function(itemModel) {\n                    var contentsShown = this.model.get(\"contents_active\");\n                    contentsShown.deleted -= 1;\n                    if (!this.model.contents.includeDeleted) {\n                        contentsShown.active -= 1;\n                    }\n                    this.model.set(\"contents_active\", contentsShown);\n                },\n\n                /** If this item is hidden and we're not showing hidden items, remove the view\n     *  @param {Model} the item model to check\n     */\n                _handleItemVisibleChange: function(itemModel) {\n                    if (itemModel.hidden()) {\n                        this._handleItemHidden(itemModel);\n                    } else {\n                        this._handleItemUnhidden(itemModel);\n                    }\n                    this._renderCounts();\n                },\n\n                _handleItemHidden: function(itemModel) {\n                    var contentsShown = this.model.get(\"contents_active\");\n                    contentsShown.hidden += 1;\n                    contentsShown.active -= 1;\n                    if (!this.model.contents.includeHidden) {\n                        this.removeItemView(itemModel);\n                    }\n                    this.model.set(\"contents_active\", contentsShown);\n                },\n\n                _handleItemUnhidden: function(itemModel) {\n                    var contentsShown = this.model.get(\"contents_active\");\n                    contentsShown.hidden -= 1;\n                    if (!this.model.contents.includeHidden) {\n                        contentsShown.active -= 1;\n                    }\n                    this.model.set(\"contents_active\", contentsShown);\n                },\n\n                /** toggle the visibility of each content's tagsEditor applying all the args sent to this function */\n                toggleHDATagEditors: function(showOrHide, speed) {\n                    _.each(this.views, function(view) {\n                        if (view.tagsEditor) {\n                            view.tagsEditor.toggle(showOrHide, speed);\n                        }\n                    });\n                },\n\n                /** toggle the visibility of each content's annotationEditor applying all the args sent to this function */\n                toggleHDAAnnotationEditors: function(showOrHide, speed) {\n                    _.each(this.views, function(view) {\n                        if (view.annotationEditor) {\n                            view.annotationEditor.toggle(showOrHide, speed);\n                        }\n                    });\n                },\n\n                // ------------------------------------------------------------------------ panel events\n                /** event map */\n                events: _.extend(_.clone(_super.prototype.events), {\n                    \"click .show-selectors-btn\": \"toggleSelectors\",\n                    \"click .toggle-deleted-link\": function(ev) {\n                        this.toggleShowDeleted();\n                    },\n                    \"click .toggle-hidden-link\": function(ev) {\n                        this.toggleShowHidden();\n                    }\n                }),\n\n                // ------------------------------------------------------------------------ search\n                _renderSearchProgress: function(limit, offset) {\n                    var stop = limit + offset;\n                    return this.$(\"> .controls .subtitle\").html(\n                        [\n                            \"<i>\",\n                            _l(\"Searching \"),\n                            stop,\n                            \"/\",\n                            this.model.contentsShown(),\n                            \"</i>\"\n                        ].join(\"\")\n                    );\n                },\n\n                /** override to display number found in subtitle */\n                _renderSearchFindings: function($whereTo) {\n                    $whereTo = $whereTo instanceof jQuery ? $whereTo : this.$el;\n                    var html = this.templates.found(this.model.toJSON(), this);\n                    $whereTo.find(\"> .controls .subtitle\").html(html);\n                    return this;\n                },\n\n                // ------------------------------------------------------------------------ as drop target\n                /** turn all the drag and drop handlers on and add some help text above the drop area */\n                dropTargetOn: function() {\n                    if (this.dropTarget) {\n                        return this;\n                    }\n                    this.dropTarget = true;\n\n                    //TODO: to init\n                    var dropHandlers = {\n                        dragenter: _.bind(this.dragenter, this),\n                        dragover: _.bind(this.dragover, this),\n                        dragleave: _.bind(this.dragleave, this),\n                        drop: _.bind(this.drop, this)\n                    };\n\n                    var $dropTarget = this._renderDropTarget();\n                    this.$list().before([\n                        this._renderDropTargetHelp(),\n                        $dropTarget\n                    ]);\n                    for (var evName in dropHandlers) {\n                        if (dropHandlers.hasOwnProperty(evName)) {\n                            //console.debug( evName, dropHandlers[ evName ] );\n                            $dropTarget.on(evName, dropHandlers[evName]);\n                        }\n                    }\n                    return this;\n                },\n\n                /** render a box to serve as a 'drop here' area on the history */\n                _renderDropTarget: function() {\n                    this.$(\".history-drop-target\").remove();\n                    return $(\"<div/>\").addClass(\"history-drop-target\");\n                },\n\n                /** tell the user how it works  */\n                _renderDropTargetHelp: function() {\n                    this.$(\".history-drop-target-help\").remove();\n                    return $(\"<div/>\")\n                        .addClass(\"history-drop-target-help\")\n                        .text(\n                            _l(\n                                \"Drag datasets here to copy them to the current history\"\n                            )\n                        );\n                },\n\n                /** shut down drag and drop event handlers and remove drop target */\n                dropTargetOff: function() {\n                    if (!this.dropTarget) {\n                        return this;\n                    }\n                    //this.log( 'dropTargetOff' );\n                    this.dropTarget = false;\n                    var dropTarget = this.$(\".history-drop-target\").get(0);\n                    for (var evName in this._dropHandlers) {\n                        if (this._dropHandlers.hasOwnProperty(evName)) {\n                            dropTarget.off(evName, this._dropHandlers[evName]);\n                        }\n                    }\n                    this.$(\".history-drop-target\").remove();\n                    this.$(\".history-drop-target-help\").remove();\n                    return this;\n                },\n                /** toggle the target on/off */\n                dropTargetToggle: function() {\n                    if (this.dropTarget) {\n                        this.dropTargetOff();\n                    } else {\n                        this.dropTargetOn();\n                    }\n                    return this;\n                },\n\n                dragenter: function(ev) {\n                    //console.debug( 'dragenter:', this, ev );\n                    ev.preventDefault();\n                    ev.stopPropagation();\n                    this.$(\".history-drop-target\").css(\n                        \"border\",\n                        \"2px solid black\"\n                    );\n                },\n                dragover: function(ev) {\n                    ev.preventDefault();\n                    ev.stopPropagation();\n                },\n                dragleave: function(ev) {\n                    //console.debug( 'dragleave:', this, ev );\n                    ev.preventDefault();\n                    ev.stopPropagation();\n                    this.$(\".history-drop-target\").css(\n                        \"border\",\n                        \"1px dashed black\"\n                    );\n                },\n                /** when (text) is dropped try to parse as json and trigger an event */\n                drop: function(ev) {\n                    ev.preventDefault();\n                    //ev.stopPropagation();\n\n                    var self = this;\n                    var dataTransfer = ev.originalEvent.dataTransfer;\n                    var data = dataTransfer.getData(\"text\");\n\n                    dataTransfer.dropEffect = \"move\";\n                    try {\n                        data = JSON.parse(data);\n                    } catch (err) {\n                        self.warn(\"error parsing JSON from drop:\", data);\n                    }\n\n                    self.trigger(\"droptarget:drop\", ev, data, self);\n                    return false;\n                },\n\n                /** handler that copies data into the contents */\n                dataDropped: function(data) {\n                    var self = this;\n                    // HDA: dropping will copy it to the history\n                    if (\n                        _.isObject(data) &&\n                        data.model_class === \"HistoryDatasetAssociation\" &&\n                        data.id\n                    ) {\n                        if (self.contents.currentPage !== 0) {\n                            return self.contents.fetchPage(0).then(function() {\n                                return self.model.contents.copy(data.id);\n                            });\n                        }\n                        return self.model.contents.copy(data.id);\n                    }\n                    return jQuery.when();\n                },\n\n                // ........................................................................ misc\n                /** Return a string rep of the history */\n                toString: function() {\n                    return (\n                        \"HistoryViewEdit(\" +\n                        (this.model ? this.model.get(\"name\") : \"\") +\n                        \")\"\n                    );\n                }\n            }\n        );\n\n        //------------------------------------------------------------------------------ TEMPLATES\n        HistoryViewEdit.prototype.templates = (function() {\n            var countsTemplate = BASE_MVC.wrapTemplate(\n                [\n                    \"<% var shown = Math.max( view.views.length, history.contents_active.active ) %>\",\n                    \"<% if( shown ){ %>\",\n                    '<span class=\"shown-count\">',\n                    \"<%- shown %> \",\n                    _l(\"shown\"),\n                    \"</span>\",\n                    \"<% } %>\",\n\n                    \"<% if( history.contents_active.deleted ){ %>\",\n                    '<span class=\"deleted-count\">',\n                    \"<% if( view.model.contents.includeDeleted ){ %>\",\n                    '<a class=\"toggle-deleted-link\" href=\"javascript:void(0);\">',\n                    _l(\"hide deleted\"),\n                    \"</a>\",\n                    \"<% } else { %>\",\n                    \"<%- history.contents_active.deleted %> \",\n                    '<a class=\"toggle-deleted-link\" href=\"javascript:void(0);\">',\n                    _l(\"deleted\"),\n                    \"</a>\",\n                    \"<% } %>\",\n                    \"</span>\",\n                    \"<% } %>\",\n\n                    \"<% if( history.contents_active.hidden ){ %>\",\n                    '<span class=\"hidden-count\">',\n                    \"<% if( view.model.contents.includeHidden ){ %>\",\n                    '<a class=\"toggle-hidden-link\" href=\"javascript:void(0);\">',\n                    _l(\"hide hidden\"),\n                    \"</a>\",\n                    \"<% } else { %>\",\n                    \"<%- history.contents_active.hidden %> \",\n                    '<a class=\"toggle-hidden-link\" href=\"javascript:void(0);\">',\n                    _l(\"hidden\"),\n                    \"</a>\",\n                    \"<% } %>\",\n                    \"</span>\",\n                    \"<% } %>\"\n                ],\n                \"history\"\n            );\n\n            var foundTemplate = BASE_MVC.wrapTemplate(\n                [\n                    _l(\"Found\"),\n                    \" <%- view.views.length %>, \",\n\n                    \"<% if( history.contents_active.deleted ){ %>\",\n                    \"<% if( view.model.contents.includeDeleted ){ %>\",\n                    '<a class=\"toggle-deleted-link\" href=\"javascript:void(0);\">',\n                    _l(\"hide deleted\"),\n                    \"</a>, \",\n                    \"<% } else { %>\",\n                    '<a class=\"toggle-deleted-link\" href=\"javascript:void(0);\">',\n                    _l(\"show deleted\"),\n                    \"</a>, \",\n                    \"<% } %>\",\n                    \"<% } %>\",\n\n                    \"<% if( history.contents_active.hidden ){ %>\",\n                    \"<% if( view.model.contents.includeHidden ){ %>\",\n                    '<a class=\"toggle-hidden-link\" href=\"javascript:void(0);\">',\n                    _l(\"hide hidden\"),\n                    \"</a>\",\n                    \"<% } else { %>\",\n                    '<a class=\"toggle-hidden-link\" href=\"javascript:void(0);\">',\n                    _l(\"show hidden\"),\n                    \"</a>\",\n                    \"<% } %>\",\n                    \"<% } %>\"\n                ],\n                \"history\"\n            );\n\n            return _.extend(_.clone(_super.prototype.templates), {\n                counts: countsTemplate,\n                found: foundTemplate\n            });\n        })();\n\n        //==============================================================================\n        return {\n            HistoryViewEdit: HistoryViewEdit\n        };\n    }\n);\n"]}