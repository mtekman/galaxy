{"version":3,"sources":["mvc/history/hdca-li.js"],"names":["define","STATES","DC_LI","DC_VIEW","BASE_MVC","_l","className","_super","prototype","_setUpListeners","extend","model","call","this","listenTo","change:tags change:populated change:visible","_getFoldoutPanelClass","render","ListOfListsCollectionView","TypeError","ListCollectionView","PairCollectionView","ListOfPairsCollectionView","_swapNewRender","addClass","get","$newRender","state","modelString","OK","RUNNING","warnings","$el","toString","titleBarTemplate","titleBar","_","templates","hidden","wrapTemplate","HDCAListItemView"],"mappings":"aAAAA,QAEQ,qBAOA,+BALA,iCAOA,eALA,sBAOA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAIQC,IAAAA,EAAWC,EAAOC,eAGlBC,EAAiBF,EAAAG,QAEbJ,UAAcC,EAAKI,UAAOL,UAAA,mBAMrBG,gBAAA,WANLF,EAAAC,UAAAC,gBAAAG,KAAAC,MANiCA,KAAAC,SAAAD,KAAAF,OAO7BI,8CAA+C,SASvDJ,EACAK,GAEQH,KAAAI,aAMAD,sBAAA,WACI,OAAOb,KAAAA,MAAQe,IAAAA,oBARvB,IAAA,OAUUC,OACNhB,EAAAiB,mBA7B6B,IAAA,SAsBzB,OAAOjB,EAAQkB,mBAY3B,IAAA,cACgB,OAAAlB,EAAAmB,0BACLd,IAAUe,YACjB,OAAApB,EAAAe,0BAIA,MAAA,IAAAC,UACSK,2BACTX,KAAAF,MAAAc,IAAA,qBAKJF,eAAA,SAAAG,GACUnB,EAAAC,UAAAe,eAAWX,KAAAC,KAAAa,GAIV,IAAAC,EAAAd,KAAAF,MAAsBiB,IAAAA,aAtDzC3B,EAAA4B,GAuDS5B,EAAA6B,QAMDC,OAFRlB,KAAAmB,IAAAR,SAAA,SAAAG,GAEqBjB,KAAOsB,KAXpBC,SAAU,WA6BN,MAAA,qBAJRpB,KAAAF,MACIuB,KAAmB9B,MAAAA,GAEf,cAEA,OA0BZ,OALQ+B,EAAUD,UAAAA,UAAAA,WAFd,IAAAH,EAAAK,EAAA1B,UAAAH,EAAAC,UAAA6B,UAAAN,UAvCJO,OAAAlC,EAAAmC,cA8CO,mCACHC,+CADJnC,EAAA,mCAzHR,SAoFwB,WAEJ,gBAKJ6B,EAAmB9B,EAASmC,cAGxB,6CACA,mCACA,sBAEA,kDACA,mDACA,SACA,+BACA,0BACA,2FACA,wCACA,4DACA,UACA,YACA,UACA,UAEJ,cAGJ,OAAOH,EAAE1B,UAAWH,EAAOC,UAAU6B,WACjCN,SAAUA,EACVI,SAAUD,IAAAA,IAMdM,iBAAkBA","file":"../../../scripts/mvc/history/hdca-li.js","sourcesContent":["define(\n    [\n        \"mvc/dataset/states\",\n        \"mvc/collection/collection-li\",\n        \"mvc/collection/collection-view\",\n        \"mvc/base-mvc\",\n        \"utils/localization\"\n    ],\n    function(STATES, DC_LI, DC_VIEW, BASE_MVC, _l) {\n        \"use strict\";\n\n        //==============================================================================\n        var _super = DC_LI.DCListItemView;\n        /** @class Read only view for HistoryDatasetCollectionAssociation (a dataset collection inside a history).\n */\n        var HDCAListItemView = _super.extend(\n            /** @lends HDCAListItemView.prototype */ {\n                className: _super.prototype.className + \" history-content\",\n\n                /** event listeners */\n                _setUpListeners: function() {\n                    _super.prototype._setUpListeners.call(this);\n                    this.listenTo(this.model, {\n                        \"change:tags change:populated change:visible\": function(\n                            model,\n                            options\n                        ) {\n                            this.render();\n                        }\n                    });\n                },\n\n                /** Override to provide the proper collections panels as the foldout */\n                _getFoldoutPanelClass: function() {\n                    switch (this.model.get(\"collection_type\")) {\n                        case \"list\":\n                            return DC_VIEW.ListCollectionView;\n                        case \"paired\":\n                            return DC_VIEW.PairCollectionView;\n                        case \"list:paired\":\n                            return DC_VIEW.ListOfPairsCollectionView;\n                        case \"list:list\":\n                            return DC_VIEW.ListOfListsCollectionView;\n                    }\n                    throw new TypeError(\n                        \"Uknown collection_type: \" +\n                            this.model.get(\"collection_type\")\n                    );\n                },\n\n                /** In this override, add the state as a class for use with state-based CSS */\n                _swapNewRender: function($newRender) {\n                    _super.prototype._swapNewRender.call(this, $newRender);\n                    //TODO: model currently has no state\n                    var state = !this.model.get(\"populated\")\n                        ? STATES.RUNNING\n                        : STATES.OK;\n                    //if( this.model.has( 'state' ) ){\n                    this.$el.addClass(\"state-\" + state);\n                    //}\n                    return this.$el;\n                },\n\n                // ......................................................................... misc\n                /** String representation */\n                toString: function() {\n                    var modelString = this.model\n                        ? this.model + \"\"\n                        : \"(no model)\";\n                    return \"HDCAListItemView(\" + modelString + \")\";\n                }\n            }\n        );\n\n        /** underscore templates */\n        HDCAListItemView.prototype.templates = (function() {\n            var warnings = _.extend({}, _super.prototype.templates.warnings, {\n                hidden: BASE_MVC.wrapTemplate(\n                    [\n                        // add a warning when hidden\n                        \"<% if( !collection.visible ){ %>\",\n                        '<div class=\"hidden-msg warningmessagesmall\">',\n                        _l(\"This collection has been hidden\"),\n                        \"</div>\",\n                        \"<% } %>\"\n                    ],\n                    \"collection\"\n                )\n            });\n\n            // could steal this from hda-base (or use mixed content)\n            var titleBarTemplate = BASE_MVC.wrapTemplate(\n                [\n                    // adding the hid display to the title\n                    '<div class=\"title-bar clear\" tabindex=\"0\">',\n                    '<span class=\"state-icon\"></span>',\n                    '<div class=\"title\">',\n                    //TODO: remove whitespace and use margin-right\n                    '<span class=\"hid\"><%- collection.hid %></span> ',\n                    '<span class=\"name\"><%- collection.name %></span>',\n                    \"</div>\",\n                    '<div class=\"subtitle\"></div>',\n                    '<span class=\"nametags\">',\n                    \"<% _.each(_.sortBy(_.uniq(collection.tags), function(x) { return x }), function(tag){ %>\",\n                    '<% if (tag.indexOf(\"name:\") == 0){ %>',\n                    '<span class=\"label label-info\"><%- tag.slice(5) %></span>',\n                    \"<% } %>\",\n                    \"<% }); %>\",\n                    \"</span>\",\n                    \"</div>\"\n                ],\n                \"collection\"\n            );\n\n            return _.extend({}, _super.prototype.templates, {\n                warnings: warnings,\n                titleBar: titleBarTemplate\n            });\n        })();\n\n        //==============================================================================\n        return {\n            HDCAListItemView: HDCAListItemView\n        };\n    }\n);\n"]}