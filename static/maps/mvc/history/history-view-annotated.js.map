{"version":3,"sources":["mvc/history/history-view-annotated.js"],"names":["define","HISTORY_VIEW","HDA_LI","HDCA_LI","BASE_MVC","_l","_super","HistoryView","AnnotatedHistoryView","extend","$newRender","renderHistoryAnnotation","_buildNewRender","annotation","model","prototype","call","this","renderItems","$whereTo","$el","get","$controls","find","remove","_renderItemView$el","$","_","text","currentTarget","stopPropagation","self","views","view","append","render","_clickSectionLink","sectionNumber","toString","clone","events","click .contents-container","ev","click","click .icon-btn","$currTarget","length","attr","dropdown","parent","data","openSection"],"mappings":"aAAAA,QAEQ,2BAOA,qBALA,sBAOA,eALA,sBAEJ,SAASC,EAAcC,EAAQC,EAASC,EAAUC,GAO9C,IAAIC,EAASL,EAAaM,YAkH1B,OACIC,qBAnGqBF,EAAAG,QAETC,UAGCC,EAAAA,UAAAA,UAAwBD,2BAIjCE,gBAAA,WAEQC,IAAAA,EAAkBC,EAAUC,UAAAH,gBAAhCI,KACKH,MAGLH,OADCO,KAAAN,wBAAAD,GACDA,GAIJQ,wBAAa,SAAAR,GACTS,IAAWA,EAAYF,KAAKG,MAA5BC,IAAA,cACON,GAGPO,EAAeC,KAAA,yBAA+BC,KAA9CX,IAeAK,YAAA,SAAAC,GA7CqCA,EAAAA,GAAAF,KAAAG,IA2BrCd,EAAOS,UAAUG,YAAYF,KAAKC,KAAME,GAsB5C,IAAAG,EAAAH,EAAAI,KAAA,eACAE,EAAoBF,KAAA,+BAAeC,SAlDME,EAiCjC,6CA2BSC,QACbD,EAAA,yCAAAE,KACAvB,EAAA,YAESwB,EAAAA,yCAALD,KAJ2CvB,EAAA,iBAUxCyB,SAAHR,GAEA,OAAAS,KAAAC,OAQHP,mBAAA,SAAAQ,GAhFoC,OAAAP,EAAA,qCAAAQ,QAoDjCD,EAAKE,OAAO,GAAGf,IA+BvBgB,EAAAA,kCAAgCR,KACxBS,EAAgBX,MAAKG,IAAAA,eAAL,OASxBS,OAAUX,EAAAlB,OAAAkB,EAAAY,MAAWjC,EAAAS,UAAAyB,SAMpBC,4BAAA,SAAAC,GApGTA,EAAAZ,kBAiEgBJ,EAAEgB,EAAGb,eAuCrBN,KAAA,yBACOoB,SAjIfC,kBAAA,SAAAF,GA+FwBA,EAAGZ,kBAGH,IAAIe,EAAcnB,EAAEgB,EAAGb,eAEnBgB,EAAYC,QACwB,aAApCD,EAAYE,KAAK,gBAEjBF,EAAYG,SAAS,aAKjCZ,kBAAmB,SAASM,GACxB,IAAIL,EAAgBX,EAAEgB,EAAGb,eACpBoB,SACAA,SACAC,KAAK,WACVjC,KAAKkC,YAAYd,IAKrBC,SAAU,WACN,MACI,yBACCrB,KAAKH,MAAQG,KAAKH,MAAMO,IAAI,QAAU,IACvC","file":"../../../scripts/mvc/history/history-view-annotated.js","sourcesContent":["define(\n    [\n        \"mvc/history/history-view\",\n        \"mvc/history/hda-li\",\n        \"mvc/history/hdca-li\",\n        \"mvc/base-mvc\",\n        \"utils/localization\"\n    ],\n    function(HISTORY_VIEW, HDA_LI, HDCA_LI, BASE_MVC, _l) {\n        \"use strict\";\n\n        /* =============================================================================\nTODO:\n\n============================================================================= */\n        var _super = HISTORY_VIEW.HistoryView;\n        // used in history/display.mako and history/embed.mako\n        /** @class View/Controller for a tabular view of the history model.\n *\n *  As ReadOnlyHistoryView, but with:\n *      history annotation always shown\n *      datasets displayed in a table:\n *          datasets in left cells, dataset annotations in the right\n */\n        var AnnotatedHistoryView = _super.extend(\n            /** @lends AnnotatedHistoryView.prototype */ {\n                className:\n                    _super.prototype.className + \" annotated-history-panel\",\n\n                // ------------------------------------------------------------------------ panel rendering\n                /** In this override, add the history annotation */\n                _buildNewRender: function() {\n                    //TODO: shouldn't this display regardless (on all non-current panels)?\n                    var $newRender = _super.prototype._buildNewRender.call(\n                        this\n                    );\n                    this.renderHistoryAnnotation($newRender);\n                    return $newRender;\n                },\n\n                /** render the history's annotation as its own field */\n                renderHistoryAnnotation: function($newRender) {\n                    var annotation = this.model.get(\"annotation\");\n                    if (!annotation) {\n                        return;\n                    }\n                    $newRender.find(\"> .controls .subtitle\").text(annotation);\n                },\n\n                /** override to add headers to indicate the dataset, annotation columns */\n                renderItems: function($whereTo) {\n                    $whereTo = $whereTo || this.$el;\n                    _super.prototype.renderItems.call(this, $whereTo);\n\n                    var $controls = $whereTo.find(\"> .controls\");\n                    $controls.find(\".contents-container.headers\").remove();\n\n                    var $headers = $(\n                        '<div class=\"contents-container headers\"/>'\n                    )\n                        .append([\n                            $('<div class=\"history-content header\"/>').text(\n                                _l(\"Dataset\")\n                            ),\n                            $('<div class=\"additional-info header\"/>').text(\n                                _l(\"Annotation\")\n                            )\n                        ])\n                        .appendTo($controls);\n\n                    return self.views;\n                },\n\n                // ------------------------------------------------------------------------ sub-views\n                /** override to wrap each subview */\n                _renderItemView$el: function(view) {\n                    return $('<div class=\"contents-container\"/>').append([\n                        view.render(0).$el,\n                        $('<div class=\"additional-info\"/>').text(\n                            view.model.get(\"annotation\") || \"\"\n                        )\n                    ]);\n                },\n\n                // ------------------------------------------------------------------------ panel events\n                events: _.extend(_.clone(_super.prototype.events), {\n                    // clicking on any part of the row will expand the items\n                    \"click .contents-container\": function(ev) {\n                        ev.stopPropagation();\n                        $(ev.currentTarget)\n                            .find(\".list-item .title-bar\")\n                            .click();\n                    },\n                    // prevent propagation on icon btns so they won't bubble up to tr and toggleBodyVisibility\n                    \"click .icon-btn\": function(ev) {\n                        ev.stopPropagation();\n                        // stopProp will prevent bootstrap from getting the click needed to open a dropdown\n                        //  in the case of metafile download buttons - workaround here\n                        var $currTarget = $(ev.currentTarget);\n                        if (\n                            $currTarget.length &&\n                            $currTarget.attr(\"data-toggle\") === \"dropdown\"\n                        ) {\n                            $currTarget.dropdown(\"toggle\");\n                        }\n                    }\n                }),\n\n                _clickSectionLink: function(ev) {\n                    var sectionNumber = $(ev.currentTarget)\n                        .parent()\n                        .parent()\n                        .data(\"section\");\n                    this.openSection(sectionNumber);\n                },\n\n                // ........................................................................ misc\n                /** Return a string rep of the history */\n                toString: function() {\n                    return (\n                        \"AnnotatedHistoryView(\" +\n                        (this.model ? this.model.get(\"name\") : \"\") +\n                        \")\"\n                    );\n                }\n            }\n        );\n\n        //==============================================================================\n        return {\n            AnnotatedHistoryView: AnnotatedHistoryView\n        };\n    }\n);\n"]}