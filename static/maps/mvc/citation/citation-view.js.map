{"version":3,"sources":["mvc/citation/citation-view.js"],"names":["define","baseMVC","citationModel","_l","CitationView","Backbone","View","extend","tagName","className","render","this","append","formattedReference","model","entryType","fields","ref","authorsAndYear","title","pages","address","year","volume","_asSentence","number","journal","doi","doiUrl","url","booktitle","publisher","howpublished","note","series","institution","issn","type","info","str","_formatBookInfo","CitationListView","initialize","listenTo","citationView","rawTextarea","collection","chapter","renderCitation","showFormatted","editor","show","partialWarningElement","trim","el","events","click .citations-to-bibtex","click .citations-to-formatted","citation","$","val","attributes","content","$el","html","citationsElement","each","item","showBibtex","hide","select","partial","join"],"mappings":"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","file":"../../../scripts/mvc/citation/citation-view.js","sourcesContent":["define(\n    [\"mvc/base-mvc\", \"mvc/citation/citation-model\", \"utils/localization\"],\n    function(baseMVC, citationModel, _l) {\n        var CitationView = Backbone.View.extend({\n            tagName: \"div\",\n            className: \"citations\",\n            render: function() {\n                this.$el.append(\"<p>\" + this.formattedReference() + \"</p>\");\n                return this;\n            },\n            formattedReference: function() {\n                var model = this.model;\n                var entryType = model.entryType();\n                var fields = model.fields();\n\n                var ref = \"\";\n                // Code inspired by...\n                // https://github.com/vkaravir/bib-publication-list/blob/master/src/bib-publication-list.js\n                var authorsAndYear =\n                    this._asSentence(\n                        (fields.author ? fields.author : \"\") +\n                            (fields.year ? \" (\" + fields.year + \")\" : \"\")\n                    ) + \" \";\n                var title = fields.title || \"\";\n                var pages = fields.pages ? \"pp. \" + fields.pages : \"\";\n                var address = fields.address;\n                if (entryType == \"article\") {\n                    var volume =\n                        (fields.volume ? fields.volume : \"\") +\n                        (fields.number ? \" (\" + fields.number + \")\" : \"\") +\n                        (pages ? \", \" + pages : \"\");\n                    ref =\n                        authorsAndYear +\n                        this._asSentence(title) +\n                        (fields.journal\n                            ? \"In <em>\" + fields.journal + \", \"\n                            : \"\") +\n                        this._asSentence(volume) +\n                        this._asSentence(fields.address) +\n                        \"</em>\";\n                } else if (\n                    entryType == \"inproceedings\" ||\n                    entryType == \"proceedings\"\n                ) {\n                    ref =\n                        authorsAndYear +\n                        this._asSentence(title) +\n                        (fields.booktitle\n                            ? \"In <em>\" + fields.booktitle + \", \"\n                            : \"\") +\n                        (pages ? pages : \"\") +\n                        (address ? \", \" + address : \"\") +\n                        \".</em>\";\n                } else if (\n                    entryType == \"mastersthesis\" ||\n                    entryType == \"phdthesis\"\n                ) {\n                    ref =\n                        authorsAndYear +\n                        this._asSentence(title) +\n                        (fields.howpublished\n                            ? fields.howpublished + \". \"\n                            : \"\") +\n                        (fields.note ? fields.note + \".\" : \"\");\n                } else if (entryType == \"techreport\") {\n                    ref =\n                        authorsAndYear +\n                        this._asSentence(title) +\n                        this._asSentence(fields.institution) +\n                        this._asSentence(fields.number) +\n                        this._asSentence(fields.type);\n                } else if (\n                    entryType == \"book\" ||\n                    entryType == \"inbook\" ||\n                    entryType == \"incollection\"\n                ) {\n                    ref = authorsAndYear + \" \" + this._formatBookInfo(fields);\n                } else {\n                    ref =\n                        authorsAndYear +\n                        \" \" +\n                        this._asSentence(title) +\n                        this._asSentence(fields.howpublished) +\n                        this._asSentence(fields.note);\n                }\n                var doiUrl = \"\";\n                if (fields.doi) {\n                    doiUrl = \"http://dx.doi.org/\" + fields.doi;\n                    ref +=\n                        '[<a href=\"' +\n                        doiUrl +\n                        '\" target=\"_blank\">doi:' +\n                        fields.doi +\n                        \"</a>]\";\n                }\n                var url = fields.url || doiUrl;\n                if (url) {\n                    ref += '[<a href=\"' + url + '\" target=\"_blank\">Link</a>]';\n                }\n                return ref;\n            },\n            _formatBookInfo: function(fields) {\n                var info = \"\";\n                if (fields.chapter) {\n                    info += fields.chapter + \" in \";\n                }\n                if (fields.title) {\n                    info += \"<em>\" + fields.title + \"</em>\";\n                }\n                if (fields.editor) {\n                    info += \", Edited by \" + fields.editor + \", \";\n                }\n                if (fields.publisher) {\n                    info += \", \" + fields.publisher;\n                }\n                if (fields.pages) {\n                    info += \", pp. \" + fields.pages + \"\";\n                }\n                if (fields.series) {\n                    info += \", <em>\" + fields.series + \"</em>\";\n                }\n                if (fields.volume) {\n                    info += \", Vol.\" + fields.volume;\n                }\n                if (fields.issn) {\n                    info += \", ISBN: \" + fields.issn;\n                }\n                return info + \".\";\n            },\n            _asSentence: function(str) {\n                return str && str.trim() ? str + \". \" : \"\";\n            }\n        });\n\n        var CitationListView = Backbone.View.extend({\n            el: \"#citations\",\n            /**\n     * Set up view.\n     */\n            initialize: function() {\n                this.listenTo(this.collection, \"add\", this.renderCitation);\n            },\n\n            events: {\n                \"click .citations-to-bibtex\": \"showBibtex\",\n                \"click .citations-to-formatted\": \"showFormatted\"\n            },\n\n            renderCitation: function(citation) {\n                var citationView = new CitationView({ model: citation });\n                this.$(\".citations-formatted\").append(citationView.render().el);\n                var rawTextarea = this.$(\".citations-bibtex-text\");\n                rawTextarea.val(\n                    rawTextarea.val() + \"\\n\\r\" + citation.attributes.content\n                );\n            },\n\n            render: function() {\n                this.$el.html(this.citationsElement());\n                this.collection.each(function(item) {\n                    this.renderCitation(item);\n                }, this);\n                this.showFormatted();\n            },\n\n            showBibtex: function() {\n                this.$(\".citations-to-formatted\").show();\n                this.$(\".citations-to-bibtex\").hide();\n                this.$(\".citations-bibtex\").show();\n                this.$(\".citations-formatted\").hide();\n                this.$(\".citations-bibtex-text\").select();\n            },\n\n            showFormatted: function() {\n                this.$(\".citations-to-formatted\").hide();\n                this.$(\".citations-to-bibtex\").show();\n                this.$(\".citations-bibtex\").hide();\n                this.$(\".citations-formatted\").show();\n            },\n\n            partialWarningElement: function() {\n                if (this.collection.partial) {\n                    return [\n                        '<div style=\"padding:5px 10px\">',\n                        \"<b>Warning: This is a experimental feature.</b> Most Galaxy tools will not annotate\",\n                        \" citations explicitly at this time. When writing up your analysis, please manually\",\n                        \" review your histories and find all references\",\n                        \" that should be cited in order to completely describe your work. Also, please remember to\",\n                        ' <a href=\"https://galaxyproject.org/citing-galaxy\">cite Galaxy</a>.',\n                        \"</div>\"\n                    ].join(\"\");\n                } else {\n                    return \"\";\n                }\n            },\n\n            citationsElement: function() {\n                return [\n                    '<div class=\"toolForm\">',\n                    '<div class=\"toolFormTitle\">',\n                    _l(\"Citations\"),\n                    ' <button type=\"button\" class=\"btn btn-xs citations-to-bibtex\" title=\"Show all in BibTeX format.\"><i class=\"fa fa-pencil-square-o\"></i> Show BibTeX</button>',\n                    ' <button type=\"button\" class=\"btn btn-xs citations-to-formatted\" title=\"Return to formatted citation list.\"><i class=\"fa fa-times\"></i> Hide BibTeX</button>',\n                    \"</div>\",\n                    '<div class=\"toolFormBody\" style=\"padding:5px 10px\">',\n                    this.partialWarningElement(),\n                    '<span class=\"citations-formatted\" style=\"word-wrap: break-word;\"></span>',\n                    \"</div>\",\n                    '<div class=\"citations-bibtex toolFormBody\" style=\"padding:5px 10px\">',\n                    '<textarea style=\"width: 100%; height: 500px;\" class=\"citations-bibtex-text\"></textarea>',\n                    \"</div>\",\n                    \"</div>\"\n                ].join(\"\");\n            }\n        });\n\n        //==============================================================================\n        return {\n            CitationView: CitationView,\n            CitationListView: CitationListView\n        };\n    }\n);\n"]}