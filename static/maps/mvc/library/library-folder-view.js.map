{"version":3,"sources":["mvc/library/library-folder-view.js"],"names":["define","mod_toastr","mod_library_model","mod_select","FolderView","Backbone","View","extend","el","model","options","events","click .toolbtn_save_permissions","initialize","this","id","fetchFolder","FolderAsModel","that","fetch","success","show_permissions","showPermissions","error","response","responseJSON","onclick","err_msg","Galaxy","libraries","library_router","back","template","folder","_","self","remove","prepareSelectBoxes","fetched_permissions","is_admin","user","isAdmin","templateFolderPermissions","$el","html","css","$","get","root","_serializeRoles","selected_roles","i","done","selected_modify_folder_roles","addSelectObject","role_list","_createSelectOptions","length","select_options","push","minimumInputLength","placeholder","url","dataType","quietMillis","data","selected_add_item_roles","q","add_library_item_role_list","page","manage_folder_role_list","results","formatResult","manageSelectObject","initSelection","selected_manage_folder_roles","name","callback","init_data","multiple","container","find","_extractIds","ids_list","roles_list","term","page_limit","add_ids","total","modify_ids","role","type","element","val","split","each","item","initialData","join","dropdownCssClass","savePermissions","event","select2","manage_ids","modifySelectObject","post","add_ids[]","manage_ids[]","modify_ids[]","fail"],"mappings":"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","file":"../../../scripts/mvc/library/library-folder-view.js","sourcesContent":["define(\n    [\"libs/toastr\", \"mvc/library/library-model\", \"mvc/ui/ui-select\"],\n    function(mod_toastr, mod_library_model, mod_select) {\n        var FolderView = Backbone.View.extend({\n            el: \"#center\",\n\n            model: null,\n\n            options: {},\n\n            events: {\n                \"click .toolbtn_save_permissions\": \"savePermissions\"\n            },\n\n            initialize: function(options) {\n                this.options = _.extend(this.options, options);\n                if (this.options.id) {\n                    this.fetchFolder();\n                }\n            },\n\n            fetchFolder: function(options) {\n                this.options = _.extend(this.options, options);\n                this.model = new mod_library_model.FolderAsModel({\n                    id: this.options.id\n                });\n                var that = this;\n                this.model.fetch({\n                    success: function() {\n                        if (that.options.show_permissions) {\n                            that.showPermissions();\n                        }\n                    },\n                    error: function(model, response) {\n                        if (typeof response.responseJSON !== \"undefined\") {\n                            mod_toastr.error(\n                                response.responseJSON.err_msg +\n                                    \" Click this to go back.\",\n                                \"\",\n                                {\n                                    onclick: function() {\n                                        Galaxy.libraries.library_router.back();\n                                    }\n                                }\n                            );\n                        } else {\n                            mod_toastr.error(\n                                \"An error occurred. Click this to go back.\",\n                                \"\",\n                                {\n                                    onclick: function() {\n                                        Galaxy.libraries.library_router.back();\n                                    }\n                                }\n                            );\n                        }\n                    }\n                });\n            },\n\n            showPermissions: function(options) {\n                this.options = _.extend(this.options, options);\n                $(\".tooltip\").remove();\n\n                var is_admin = false;\n                if (Galaxy.user) {\n                    is_admin = Galaxy.user.isAdmin();\n                }\n                var template = this.templateFolderPermissions();\n                this.$el.html(\n                    template({ folder: this.model, is_admin: is_admin })\n                );\n\n                var self = this;\n                $.get(\n                    Galaxy.root +\n                        \"api/folders/\" +\n                        self.id +\n                        \"/permissions?scope=current\"\n                )\n                    .done(function(fetched_permissions) {\n                        self.prepareSelectBoxes({\n                            fetched_permissions: fetched_permissions\n                        });\n                    })\n                    .fail(function() {\n                        mod_toastr.error(\n                            \"An error occurred while attempting to fetch folder permissions.\"\n                        );\n                    });\n\n                $(\"#center [data-toggle]\").tooltip();\n                //hack to show scrollbars\n                $(\"#center\").css(\"overflow\", \"auto\");\n            },\n\n            _serializeRoles: function(role_list) {\n                var selected_roles = [];\n                for (var i = 0; i < role_list.length; i++) {\n                    selected_roles.push(\n                        role_list[i][1] + \":\" + role_list[i][0]\n                    );\n                }\n                return selected_roles;\n            },\n\n            prepareSelectBoxes: function(options) {\n                this.options = _.extend(this.options, options);\n                var fetched_permissions = this.options.fetched_permissions;\n                var self = this;\n\n                var selected_add_item_roles = this._serializeRoles(\n                    fetched_permissions.add_library_item_role_list\n                );\n                var selected_manage_folder_roles = this._serializeRoles(\n                    fetched_permissions.manage_folder_role_list\n                );\n                var selected_modify_folder_roles = this._serializeRoles(\n                    fetched_permissions.modify_folder_role_list\n                );\n\n                self.addSelectObject = new mod_select.View(\n                    this._createSelectOptions(\n                        this,\n                        \"add_perm\",\n                        selected_add_item_roles,\n                        false\n                    )\n                );\n                self.manageSelectObject = new mod_select.View(\n                    this._createSelectOptions(\n                        this,\n                        \"manage_perm\",\n                        selected_manage_folder_roles,\n                        false\n                    )\n                );\n                self.modifySelectObject = new mod_select.View(\n                    this._createSelectOptions(\n                        this,\n                        \"modify_perm\",\n                        selected_modify_folder_roles,\n                        false\n                    )\n                );\n            },\n\n            _createSelectOptions: function(self, id, init_data) {\n                var select_options = {\n                    minimumInputLength: 0,\n                    css: id,\n                    multiple: true,\n                    placeholder: \"Click to select a role\",\n                    container: self.$el.find(\"#\" + id),\n                    ajax: {\n                        url:\n                            Galaxy.root +\n                            \"api/folders/\" +\n                            self.id +\n                            \"/permissions?scope=available\",\n                        dataType: \"json\",\n                        quietMillis: 100,\n                        data: function(term, page) {\n                            // page is the one-based page number tracked by Select2\n                            return {\n                                q: term, //search term\n                                page_limit: 10, // page size\n                                page: page // page number\n                            };\n                        },\n                        results: function(data, page) {\n                            var more = page * 10 < data.total; // whether or not there are more results available\n                            // notice we return the value of more so Select2 knows if more results can be loaded\n                            return { results: data.roles, more: more };\n                        }\n                    },\n                    formatResult: function roleFormatResult(role) {\n                        return role.name + \" type: \" + role.type;\n                    },\n\n                    formatSelection: function roleFormatSelection(role) {\n                        return role.name;\n                    },\n                    initSelection: function(element, callback) {\n                        // the input tag has a value attribute preloaded that points to a preselected role's id\n                        // this function resolves that id attribute to an object that select2 can render\n                        // using its formatResult renderer - that way the role name is shown preselected\n                        var data = [];\n                        $(element.val().split(\",\")).each(function() {\n                            var item = this.split(\":\");\n                            data.push({\n                                id: item[0],\n                                name: item[1]\n                            });\n                        });\n                        callback(data);\n                    },\n                    initialData: init_data.join(\",\"),\n                    dropdownCssClass: \"bigdrop\" // apply css that makes the dropdown taller\n                };\n\n                return select_options;\n            },\n\n            /**\n   * Extract the role ids from Select2 elements's 'data'\n   */\n            _extractIds: function(roles_list) {\n                var ids_list = [];\n                for (var i = roles_list.length - 1; i >= 0; i--) {\n                    ids_list.push(roles_list[i].id);\n                }\n                return ids_list;\n            },\n\n            /**\n   * Save the permissions for roles entered in the select boxes.\n   */\n            savePermissions: function(event) {\n                var self = this;\n                var add_ids = this._extractIds(\n                    this.addSelectObject.$el.select2(\"data\")\n                );\n                var manage_ids = this._extractIds(\n                    this.manageSelectObject.$el.select2(\"data\")\n                );\n                var modify_ids = this._extractIds(\n                    this.modifySelectObject.$el.select2(\"data\")\n                );\n                $.post(\n                    Galaxy.root +\n                        \"api/folders/\" +\n                        self.id +\n                        \"/permissions?action=set_permissions\",\n                    {\n                        \"add_ids[]\": add_ids,\n                        \"manage_ids[]\": manage_ids,\n                        \"modify_ids[]\": modify_ids\n                    }\n                )\n                    .done(function(fetched_permissions) {\n                        self.showPermissions({\n                            fetched_permissions: fetched_permissions\n                        });\n                        mod_toastr.success(\"Permissions saved.\");\n                    })\n                    .fail(function() {\n                        mod_toastr.error(\n                            \"An error occurred while attempting to set folder permissions.\"\n                        );\n                    });\n            },\n\n            templateFolderPermissions: function() {\n                return _.template(\n                    [\n                        '<div class=\"library_style_container\">',\n                        '<div id=\"library_toolbar\">',\n                        '<a href=\"#/folders/<%= folder.get(\"parent_id\") %>\">',\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Go back to the parent folder\" class=\"btn btn-default primary-button\" type=\"button\">',\n                        '<span class=\"fa fa-caret-left fa-lg\"/>',\n                        \"&nbsp;Parent folder\",\n                        \"</button>\",\n                        \"</a>\",\n                        \"</div>\",\n                        \"<h1>\",\n                        'Folder: <%= _.escape(folder.get(\"name\")) %>',\n                        \"</h1>\",\n                        '<div class=\"alert alert-warning\">',\n                        \"<% if (is_admin) { %>\",\n                        \"You are logged in as an <strong>administrator</strong> therefore you can manage any folder on this Galaxy instance. Please make sure you understand the consequences.\",\n                        \"<% } else { %>\",\n                        \"You can assign any number of roles to any of the following permission types. However please read carefully the implications of such actions.\",\n                        \"<% }%>\",\n                        \"</div>\",\n                        '<div class=\"dataset_table\">',\n                        \"<h2>Folder permissions</h2>\",\n                        \"<h4>\",\n                        \"Roles that can manage permissions on this folder\",\n                        \"</h4>\",\n                        '<div id=\"manage_perm\" class=\"manage_perm roles-selection\"/>',\n                        '<div class=\"alert alert-info roles-selection\">',\n                        \"User with <strong>any</strong> of these roles can manage permissions on this folder.\",\n                        \"</div>\",\n                        \"<h4>\",\n                        \"Roles that can add items to this folder\",\n                        \"</h4>\",\n                        '<div id=\"add_perm\" class=\"add_perm roles-selection\"/>',\n                        '<div class=\"alert alert-info roles-selection\">',\n                        \"User with <strong>any</strong> of these roles can add items to this folder (folders and datasets).\",\n                        \"</div>\",\n                        \"<h4>\",\n                        \"Roles that can modify this folder\",\n                        \"</h4>\",\n                        '<div id=\"modify_perm\" class=\"modify_perm roles-selection\"/>',\n                        '<div class=\"alert alert-info roles-selection\">',\n                        \"User with <strong>any</strong> of these roles can modify this folder (name, etc.).\",\n                        \"</div>\",\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save modifications\" class=\"btn btn-default toolbtn_save_permissions primary-button\" type=\"button\">',\n                        '<span class=\"fa fa-floppy-o\"/>',\n                        \"&nbsp;Save\",\n                        \"</button>\",\n                        \"</div>\",\n                        \"</div>\"\n                    ].join(\"\")\n                );\n            }\n        });\n\n        return {\n            FolderView: FolderView\n        };\n    }\n);\n"]}