{"version":3,"sources":["mvc/library/library-model.js"],"names":["define","mod_util","Library","Backbone","Model","extend","urlRoot","Galaxy","root","isVisible","show_deleted","this","Libraries","Collection","model","options","search","search_term","lowercase_term","toLowerCase","data","indexOf","getVisible","filters","item","filteredLibraries","sortLibraries","sort_key","sort_order","comparator","generateLibraryComparator","sort","Ldda","LibraryItem","FolderAsModel","Folder","sortFolder","generateFolderComparator","FolderContainer","folder","parse","defaults","id","folder_contents","get","reset","i","obj","length","type","add","folder_item","file_item","emit","error","HistoryItem","url","initialize","GalaxyHistory","GalaxyHistories","HistoryContents","Jstree"],"mappings":"aAAAA,QAAQ,4BAA6B,SAASC,GAE1C,IAAAC,EAAAC,SAAAC,MAAAC,QAGIC,QAASC,OAAOC,KAAO,iBAKvBC,UAAW,SAASC,GAChB,IAAID,GAAY,EAEZA,OAHRA,GAAWE,KAASD,IAAAA,aACZD,GAAY,GAEZA,KATZG,EAAAT,SAAAU,WAAAR,QAgBIC,QAASC,OAAOC,KAAO,gBAAvBF,MAAAA,EAEAQ,WAAOZ,SAHgCa,GAMnCA,EAAUA,OACbC,OAPsC,SAAAC,GAgBnC,GAAmB,IAAfA,EAAmB,OAAON,KAC9B,IAAIO,EAAiBD,EAAYE,cADjC,OAAIF,KAAAA,OAAe,SAAIG,GAEvB,OAAkC,IADbH,EAAAA,IAAYE,QAAAA,cACdE,QAAAH,MAUvBI,WAAY,SAASZ,EAAca,GAQ/B,OAPAA,EAAUA,MADF,IAASb,EACjBa,KAAAA,OAAUA,SAAVC,GACIC,OAAAA,EAAAA,UAAwBb,OAShCc,cAAe,SAAAC,EAAAC,GACXjB,KAAKkB,WAAa5B,EAAS6B,0BAI3BH,EACHC,GADGjB,KAAKoB,UAUTzB,EAASC,SAAcH,MAAAC,WADvB2B,EAAOC,EAAY5B,QAInB6B,QAAAA,OAAgBD,KAAAA,4BAAhBC,EAAgBD,EAAY5B,QAI5B8B,QAAShC,OAAAA,KAASU,iBAGlBuB,EAAAA,SAAYvB,WAAAR,QACRS,MAAAmB,EAKHG,WAAA,SAAAT,EAAAC,GATLjB,KAAAkB,WAAA5B,EAAAoC,yBAKYV,EAORW,GAEIC,KAAAA,UAIJC,EAAOrC,SAAcC,MAAAC,QACjBoC,UACAF,OAAA,IAASJ,EACT7B,QAAAC,OAAAC,KAAA,eACAkC,GAAA,WAEIF,MAAA,SAAQG,GAEJhC,KAAAiC,IAAA,UAASC,QAGT,IAAA,IAAAC,EAAKF,EAALE,EAASC,EAAAJ,gBAATK,OAAAF,IACH,GAAM,WAHAC,EAGAJ,gBAAAG,GAAAG,KAAA,CACH1C,IAAAA,EACI,IAAA2B,EAAAa,EAAAJ,gBAAAG,IAEPnC,KAAAiC,IAAA,UAAAM,IAAAC,QACJ,GAAA,SAAAJ,EAAAJ,gBAAAG,GAAAG,KAAA,CACMF,IAAPK,EAAA,IAAApB,EAAAe,EAAAJ,gBAAAG,IACHnC,KAAAiC,IAAA,UAAAM,IAAAE,QANW7C,OAAO8C,KAAKC,MAS5B,gEAIIC,OAAAA,KAQCA,EAJ4CpD,SAAAC,MAAAC,QAK7CmD,QAAKjD,OAAAC,KAAW,mBAGhBM,EAAOyC,SAAAA,WAAAA,QARXjD,QAAAC,OAAAC,KAAA,iBAEIiD,WAAY,SAAS1C,GASrB2C,KAAAA,GAAAA,EAAgBvD,IAApBqD,IAAA,WALQ,OAAO7C,KAAKL,QAAUK,KAAK+B,GAAK,aAUpCc,MAAKjD,IALLmD,EAAgBvD,SAASC,MAAMC,QASnCC,QAAAC,OAAAC,KAAA,mBALImD,EAAkBxD,SAASU,WAAWR,QACtCmD,IAAKjD,OAAOC,KAAO,gBACnBM,MAAO4C,IAiBP1B,EAAMA,SAJH5B,MAAAC,QAKH6B,QAAAA,OAAeA,KAAAA,qBAGfqB,OACAK,QAAAA,EACAF,UAAAA,EACAC,KAAAA,EACAE,KAAAA,EAZJ3B,cAAAA,EA9JJC,OAAAA,EAqKQG,gBAAiBA,EACjBiB,YAAaA,EACbK,gBAAiBA,EACjBF,cAAeA,EACfC,gBAAiBA,EACjBE,OAAQA","file":"../../../scripts/mvc/library/library-model.js","sourcesContent":["define([\"mvc/library/library-util\"], function(mod_util) {\n    // ============================================================================\n    // LIBRARY RELATED MODELS\n\n    var Library = Backbone.Model.extend({\n        urlRoot: Galaxy.root + \"api/libraries/\",\n\n        /** based on show_deleted would this lib show in the list of lib's?\n       *  @param {Boolean} show_deleted are we including deleted libraries?\n       */\n        isVisible: function(show_deleted) {\n            var isVisible = true;\n            if (!show_deleted && this.get(\"deleted\")) {\n                isVisible = false;\n            }\n            return isVisible;\n        }\n    });\n\n    var Libraries = Backbone.Collection.extend({\n        urlRoot: Galaxy.root + \"api/libraries\",\n\n        model: Library,\n\n        initialize: function(options) {\n            options = options || {};\n        },\n\n        search: function(search_term) {\n            /**\n         * Search the collection and return only the models that have\n         * the search term in their names.\n         * [the term to search]\n         * @type {string}\n         */\n            if (search_term == \"\") return this;\n            var lowercase_term = search_term.toLowerCase();\n            return this.filter(function(data) {\n                var lowercase_name = data.get(\"name\").toLowerCase();\n                return lowercase_name.indexOf(lowercase_term) !== -1;\n            });\n        },\n\n        /** Get every 'shown' library in this collection based on deleted filter\n       *  @param {Boolean} show_deleted are we including deleted libraries?\n       *  @returns array of library models\n       */\n        getVisible: function(show_deleted, filters) {\n            filters = filters || [];\n            var filteredLibraries = new Libraries(\n                this.filter(function(item) {\n                    return item.isVisible(show_deleted);\n                })\n            );\n\n            return filteredLibraries;\n        },\n\n        sortLibraries: function(sort_key, sort_order) {\n            this.comparator = mod_util.generateLibraryComparator(\n                sort_key,\n                sort_order\n            );\n            this.sort();\n        }\n    });\n\n    // ============================================================================\n    // FOLDER RELATED MODELS\n\n    var LibraryItem = Backbone.Model.extend({});\n\n    var Ldda = LibraryItem.extend({\n        urlRoot: Galaxy.root + \"api/libraries/datasets/\"\n    });\n\n    var FolderAsModel = LibraryItem.extend({\n        urlRoot: Galaxy.root + \"api/folders/\"\n    });\n\n    var Folder = Backbone.Collection.extend({\n        model: LibraryItem,\n\n        sortFolder: function(sort_key, sort_order) {\n            this.comparator = mod_util.generateFolderComparator(\n                sort_key,\n                sort_order\n            );\n            this.sort();\n        }\n    });\n\n    var FolderContainer = Backbone.Model.extend({\n        defaults: {\n            folder: new Folder(),\n            urlRoot: Galaxy.root + \"api/folders/\",\n            id: \"unknown\"\n        },\n        parse: function(obj) {\n            // empty the collection\n            this.get(\"folder\").reset();\n            // response is not a simple array, it contains metadata\n            // this will update the inner collection\n            for (var i = 0; i < obj.folder_contents.length; i++) {\n                if (obj.folder_contents[i].type === \"folder\") {\n                    var folder_item = new FolderAsModel(obj.folder_contents[i]);\n                    this.get(\"folder\").add(folder_item);\n                } else if (obj.folder_contents[i].type === \"file\") {\n                    var file_item = new Ldda(obj.folder_contents[i]);\n                    this.get(\"folder\").add(file_item);\n                } else {\n                    Galaxy.emit.error(\n                        \"Unknown folder item type encountered while parsing response.\"\n                    );\n                }\n            }\n            return obj;\n        }\n    });\n\n    // ============================================================================\n    // HISTORY RELATED MODELS\n    // TODO UNITE\n\n    var HistoryItem = Backbone.Model.extend({\n        urlRoot: Galaxy.root + \"api/histories/\"\n    });\n\n    var HistoryContents = Backbone.Collection.extend({\n        urlRoot: Galaxy.root + \"api/histories/\",\n        initialize: function(options) {\n            this.id = options.id;\n        },\n        url: function() {\n            return this.urlRoot + this.id + \"/contents\";\n        },\n        model: HistoryItem\n    });\n\n    var GalaxyHistory = Backbone.Model.extend({\n        urlRoot: Galaxy.root + \"api/histories/\"\n    });\n\n    var GalaxyHistories = Backbone.Collection.extend({\n        url: Galaxy.root + \"api/histories\",\n        model: GalaxyHistory\n    });\n\n    // ============================================================================\n    // JSTREE MODEL\n    /** Represents folder structure parsable by the jstree component.\n     *\n     */\n\n    var Jstree = Backbone.Model.extend({\n        urlRoot: Galaxy.root + \"api/remote_files\"\n    });\n\n    return {\n        Library: Library,\n        Libraries: Libraries,\n        Item: Ldda,\n        Ldda: Ldda,\n        FolderAsModel: FolderAsModel,\n        Folder: Folder,\n        FolderContainer: FolderContainer,\n        HistoryItem: HistoryItem,\n        HistoryContents: HistoryContents,\n        GalaxyHistory: GalaxyHistory,\n        GalaxyHistories: GalaxyHistories,\n        Jstree: Jstree\n    };\n});\n"]}