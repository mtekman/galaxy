{"version":3,"sources":["mvc/library/library-dataset-view.js"],"names":["define","LibraryDatasetView","el","mod_toastr","mod_library_model","mod_utils","mod_select","Backbone","View","extend","edit_mode","options","defaults","events","click .toolbtn_modify_dataset","click .toolbtn_cancel_modifications","click .toolbtn-download-dataset","click .toolbtn-import-dataset","click .copy-link-to-clipboard","click .make-private","click .remove-restrictions","select_genome","click .toolbtn_save_modifications","select_extension","text","auto","id","list_genomes","description","this","_","that","model","fetch","success","fetchDataset","fetchVersion","render","Item","error","onclick","show_permissions","Galaxy","show_version","response","responseJSON","err_msg","library_router","back","tooltip","libraries","renderVersion","template","templateDataset","item","$","html","ldda_id","ldda","Ldda","url","enableModification","urlRoot","remove","renderSelectBoxes","genome_build","get","templateVersion","data","param","inputs","templateModifyDataset","$el","info","downloadDataset","self","show","closing_events","title","ld_ids","body","histories","importCurrentIntoHistory","Close","each","split","pair","refreshUserHistoriesList","window","method","callback","appendTo","importIntoHistory","modal","disableButton","templateBulkImportInModal","new_history_name","root","name","buttons","processImportToHistory","enableButton","hide","GalaxyHistories","historyItem","length","warning","location","templateDatasetPermissions","is_unrestricted","post","done","new_history","is_admin","xhr","is_admin_user","prepareSelectBoxes","fetched_permissions","history_id","css","selected_roles","push","role_list","HistoryItem","initialData","content","source","selector","_serializeRoles","manageSelectObject","multiple","roleFormatResult","undefined","access_dataset_roles","container","select_options","set","q","config","results","more","fail","new_name","is_changed","i","new_info","replace","ld","new_genome_build","accessSelectObject","new_ext","patch","dataset_view","modify_item_roles","manage_dataset_roles","copyToClipboard","preventDefault","href","lastIndexOf","substr","formatResult","role","prompt","type","formatSelection","makeDatasetPrivate","element","val","join","ajax","_extractIds","ids_list","roles_list","term","page_limit","page","savePermissions","event","access_ids","roles","find","fetchExtAndGenomes","datatypes","description_url","list_extensions","select2","unshift","genomes","save","current_genome","current_ext","value","showPermissions","removeDatasetRestrictions","manage_ids","modify_ids","modifySelectObject","access_ids[]","manage_ids[]","modify_ids[]","key","extension","sort","a","b","file_ext"],"mappings":"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ASC,EAAGC,GAC/B,OAAOD,EAAEjL,GAAKkL,EAAElL,GAAK,EAAIiL,EAAEjL,GAAKkL,EAAElL,IAAM,EAAI,QAOhEsC,kBAAmB,SAASrD,GAKxB,IAAIoB,EAAOF,KACPgK,EAAiB,IACjBC,EAAc,YACK,IAAZnL,SAC6B,IAAzBA,EAAQsD,eACf4H,EAAiBlL,EAAQsD,mBAEG,IAArBtD,EAAQkM,WACff,EAAcnL,EAAQkM,WAG9BhL,KAAKR,cAAgB,IAAIf,EAAWE,MAChC+G,IAAK,wBACLnD,KAAMrC,EAAKJ,aACX2G,UAAWvG,EAAKyC,IAAI4G,KAAK,0BACzBW,MAAOF,IAEXhK,KAAKN,iBAAmB,IAAIjB,EAAWE,MACnC+G,IAAK,2BACLnD,KAAMrC,EAAKyJ,gBACXlD,UAAWvG,EAAKyC,IAAI4G,KAAK,6BACzBW,MAAOD,KAIfzI,gBAAiB,WACb,OAAOvB,EAAEsB,UAGD,wCACA,6BACA,0KACA,uCACA,iBACA,YACA,mLACA,mCACA,mBACA,YACA,2CACA,2KACA,qCACA,eACA,YACA,UACA,2CACA,uFACA,8KACA,oCACA,oBACA,YACA,OACA,UACA,SAGA,0BACA,6EACA,4DACA,uCACA,2GACA,iBACA,gFACA,UACA,YACA,QAEA,2CACA,QACA,2JACA,SACA,UAGA,8BACA,2DACA,OACA,oHACA,6CACA,QACA,oCACA,OACA,iCACA,iDACA,QACA,UACA,wCACA,OACA,oCACA,qDACA,QACA,UACA,qCACA,OACA,4BACA,kDACA,QACA,UACA,yCACA,OACA,2CACA,sDACA,QACA,UACA,uCACA,OACA,mCACA,oDACA,QACA,UACA,+CACA,OACA,kCACA,wEACA,QACA,UACA,kDACA,OACA,qCACA,2EACA,QACA,UACA,4CACA,OACA,yCACA,qEACA,QACA,UACA,iDACA,OACA,oCACA,0EACA,QACA,UACA,mCACA,OACA,+BACA,4DACA,QACA,UACA,sCACA,OACA,mCACA,+DACA,QACA,UACA,qCACA,OACA,kCACA,8DACA,QACA,UACA,gCACA,OACA,4BACA,yDACA,QACA,UACA,2CACA,OACA,4BACA,yDACA,QACA,UACA,4CACA,OACA,6BACA,0DACA,QACA,UACA,WAEA,sCACA,8BACA,qBACA,0CACA,SACA,UAEA,sCACA,+BACA,qBACA,0CACA,SACA,UAEA,QACA,qBACA,SACA,SAEA,wCACA,QACA,6BACA,OACA,iEACA,wKACA,WACA,OACA,SACA,UAEA,SAEA,UACFoH,KAAK,MAIfrG,gBAAiB,WACb,OAAOrC,EAAEsB,UAGD,wCACA,6BACA,2EACA,qJACA,+CACA,uBACA,YACA,MACA,SAGA,0BACA,6EACA,4DACA,uCACA,2GACA,iBACA,gFACA,UACA,YACA,QAEA,8HAEA,8BACA,2DACA,OACA,2EACA,6CACA,QACA,oCACA,OACA,iCACA,iDACA,QACA,UACA,wCACA,OACA,oCACA,qDACA,QACA,UACA,qCACA,OACA,4BACA,kDACA,QACA,UACA,yCACA,OACA,2CACA,sDACA,QACA,UACA,uCACA,OACA,mCACA,oDACA,QACA,UACA,+CACA,OACA,kCACA,wEACA,QACA,UACA,kDACA,OACA,qCACA,2EACA,QACA,UACA,4CACA,OACA,yCACA,qEACA,QACA,UACA,iDACA,OACA,oCACA,0EACA,QACA,UACA,mCACA,OACA,+BACA,4DACA,QACA,UACA,sCACA,OACA,2CACA,+DACA,QACA,UACA,qCACA,OACA,iDACA,8DACA,QACA,UACA,gCACA,OACA,4BACA,yDACA,QACA,UACA,WACA,QACA,qBACA,SACA,SAEA,SAEA,UACFoH,KAAK,MAIfjG,sBAAuB,WACnB,OAAOzC,EAAEsB,UAGD,wCACA,6BACA,kLACA,oCACA,eACA,YACA,8KACA,uCACA,aACA,YACA,SAGA,0BACA,6EACA,4DACA,uCACA,2GACA,iBACA,gFACA,UACA,YACA,QAEA,8BACA,2DACA,OACA,oHACA,oIACA,QACA,OACA,iCACA,OACA,0EACA,QACA,QACA,OACA,oCACA,OACA,oEACA,QACA,QACA,OACA,4BACA,kDACA,QACA,OACA,2CACA,sDACA,QACA,OACA,mCACA,oDACA,QACA,mBACA,kCACA,wEACA,QACA,qCACA,yDACA,2EACA,iBACA,+BACA,UACA,QACA,OACA,yCACA,qEACA,QACA,OACA,oCACA,0EACA,QACA,OACA,+BACA,4DACA,QACA,OACA,mCACA,+DACA,QACA,OACA,yCACA,8IACA,QAEA,gCACA,OACA,4BACA,yDACA,QACA,UACA,WACA,QACA,qBACA,SACA,SACA,SAEA,UACFoH,KAAK,MAIf5D,2BAA4B,WACxB,OAAO9E,EAAEsB,UAGD,wCACA,6BACA,2EACA,mJACA,qCACA,wBACA,YACA,MACA,SAGA,0BACA,6EACA,4DACA,uCACA,2GACA,iBACA,gFACA,UACA,YACA,QAEA,sDACA,oCACA,wBACA,yKACA,iBACA,+IACA,UACA,SACA,8BACA,uCACA,kDACA,mEACA,8KACA,QACA,uCACA,+LACA,4CACA,yHACA,iBACA,oGACA,UACA,6CACA,mEACA,iDACA,qFACA,mGACA,mGACA,SACA,4DACA,mEACA,iDACA,sLACA,SACA,iLACA,uCACA,aACA,YACA,SAEA,UACFoH,KAAK,MAIfzE,0BAA2B,WACvB,OAAOjE,EAAEsB,UAED,QACA,mCACA,mBACA,qHACA,8CACA,mGACA,YACA,YACA,SACA,mCACA,kBACA,4GACA,WACA,SACA,UACFoH,KAAK","file":"../../../scripts/mvc/library/library-dataset-view.js","sourcesContent":["define(\n    [\n        \"libs/toastr\",\n        \"mvc/library/library-model\",\n        \"utils/utils\",\n        \"mvc/ui/ui-select\"\n    ],\n    function(mod_toastr, mod_library_model, mod_utils, mod_select) {\n        var LibraryDatasetView = Backbone.View.extend({\n            el: \"#center\",\n\n            model: null,\n\n            options: {},\n\n            defaults: {\n                edit_mode: false\n            },\n\n            events: {\n                \"click .toolbtn_modify_dataset\": \"enableModification\",\n                \"click .toolbtn_cancel_modifications\": \"render\",\n                \"click .toolbtn-download-dataset\": \"downloadDataset\",\n                \"click .toolbtn-import-dataset\": \"importIntoHistory\",\n                \"click .copy-link-to-clipboard\": \"copyToClipboard\",\n                \"click .make-private\": \"makeDatasetPrivate\",\n                \"click .remove-restrictions\": \"removeDatasetRestrictions\",\n                \"click .toolbtn_save_permissions\": \"savePermissions\",\n                \"click .toolbtn_save_modifications\": \"saveModifications\"\n            },\n\n            // genome select\n            select_genome: null,\n\n            // extension select\n            select_extension: null,\n\n            // extension types\n            list_extensions: [],\n\n            // datatype placeholder for extension auto-detection\n            auto: {\n                id: \"auto\",\n                text: \"Auto-detect\",\n                description:\n                    \"This system will try to detect the file type automatically.\" +\n                    \" If your file is not detected properly as one of the known formats,\" +\n                    \" it most likely means that it has some format problems (e.g., different\" +\n                    \" number of columns on different rows). You can still coerce the system\" +\n                    \" to set your data to the format you think it should be.\" +\n                    \" You can also upload compressed files, which will automatically be decompressed.\"\n            },\n\n            // genomes\n            list_genomes: [],\n\n            initialize: function(options) {\n                this.options = _.extend(this.options, options);\n                this.fetchExtAndGenomes();\n                if (this.options.id) {\n                    this.fetchDataset();\n                }\n            },\n\n            fetchDataset: function(options) {\n                this.options = _.extend(this.options, options);\n                this.model = new mod_library_model.Item({\n                    id: this.options.id\n                });\n                var that = this;\n                this.model.fetch({\n                    success: function() {\n                        if (that.options.show_permissions) {\n                            that.showPermissions();\n                        } else if (that.options.show_version) {\n                            that.fetchVersion();\n                        } else {\n                            that.render();\n                        }\n                    },\n                    error: function(model, response) {\n                        if (typeof response.responseJSON !== \"undefined\") {\n                            mod_toastr.error(\n                                response.responseJSON.err_msg +\n                                    \" Click this to go back.\",\n                                \"\",\n                                {\n                                    onclick: function() {\n                                        Galaxy.libraries.library_router.back();\n                                    }\n                                }\n                            );\n                        } else {\n                            mod_toastr.error(\n                                \"An error occurred. Click this to go back.\",\n                                \"\",\n                                {\n                                    onclick: function() {\n                                        Galaxy.libraries.library_router.back();\n                                    }\n                                }\n                            );\n                        }\n                    }\n                });\n            },\n\n            render: function(options) {\n                this.options = _.extend(this.options, options);\n                $(\".tooltip\").remove();\n                var template = this.templateDataset();\n                this.$el.html(template({ item: this.model }));\n                $(\".peek\").html(this.model.get(\"peek\"));\n                $(\"#center [data-toggle]\").tooltip();\n            },\n\n            fetchVersion: function(options) {\n                this.options = _.extend(this.options, options);\n                that = this;\n                if (!this.options.ldda_id) {\n                    this.render();\n                    mod_toastr.error(\n                        \"Library dataset version requested but no id provided.\"\n                    );\n                } else {\n                    this.ldda = new mod_library_model.Ldda({\n                        id: this.options.ldda_id\n                    });\n                    this.ldda.url =\n                        this.ldda.urlRoot +\n                        this.model.id +\n                        \"/versions/\" +\n                        this.ldda.id;\n                    this.ldda.fetch({\n                        success: function() {\n                            that.renderVersion();\n                        },\n                        error: function(model, response) {\n                            if (typeof response.responseJSON !== \"undefined\") {\n                                mod_toastr.error(response.responseJSON.err_msg);\n                            } else {\n                                mod_toastr.error(\"An error occurred.\");\n                            }\n                        }\n                    });\n                }\n            },\n\n            renderVersion: function() {\n                $(\".tooltip\").remove();\n                var template = this.templateVersion();\n                this.$el.html(template({ item: this.model, ldda: this.ldda }));\n                $(\".peek\").html(this.ldda.get(\"peek\"));\n            },\n\n            enableModification: function() {\n                $(\".tooltip\").remove();\n                var template = this.templateModifyDataset();\n                this.$el.html(template({ item: this.model }));\n                this.renderSelectBoxes({\n                    genome_build: this.model.get(\"genome_build\"),\n                    file_ext: this.model.get(\"file_ext\")\n                });\n                $(\".peek\").html(this.model.get(\"peek\"));\n                $(\"#center [data-toggle]\").tooltip();\n            },\n\n            downloadDataset: function() {\n                var url =\n                    Galaxy.root +\n                    \"api/libraries/datasets/download/uncompressed\";\n                var data = { ld_ids: this.id };\n                this.processDownload(url, data);\n            },\n\n            processDownload: function(url, data, method) {\n                //url and data options required\n                if (url && data) {\n                    //data can be string of parameters or array/object\n                    data = typeof data == \"string\" ? data : $.param(data);\n                    //split params into form inputs\n                    var inputs = \"\";\n                    $.each(data.split(\"&\"), function() {\n                        var pair = this.split(\"=\");\n                        inputs +=\n                            '<input type=\"hidden\" name=\"' +\n                            pair[0] +\n                            '\" value=\"' +\n                            pair[1] +\n                            '\" />';\n                    });\n                    //send request\n                    $(\n                        '<form action=\"' +\n                            url +\n                            '\" method=\"' +\n                            (method || \"post\") +\n                            '\">' +\n                            inputs +\n                            \"</form>\"\n                    )\n                        .appendTo(\"body\")\n                        .submit()\n                        .remove();\n\n                    mod_toastr.info(\"Your download will begin soon.\");\n                }\n            },\n\n            importIntoHistory: function() {\n                this.refreshUserHistoriesList(function(self) {\n                    var template = self.templateBulkImportInModal();\n                    self.modal = Galaxy.modal;\n                    self.modal.show({\n                        closing_events: true,\n                        title: \"Import into History\",\n                        body: template({ histories: self.histories.models }),\n                        buttons: {\n                            Import: function() {\n                                self.importCurrentIntoHistory();\n                            },\n                            Close: function() {\n                                Galaxy.modal.hide();\n                            }\n                        }\n                    });\n                });\n            },\n\n            refreshUserHistoriesList: function(callback) {\n                var self = this;\n                this.histories = new mod_library_model.GalaxyHistories();\n                this.histories.fetch({\n                    success: function(histories) {\n                        if (histories.length === 0) {\n                            mod_toastr.warning(\n                                \"You have to create history first. Click this to do so.\",\n                                \"\",\n                                {\n                                    onclick: function() {\n                                        window.location = Galaxy.root;\n                                    }\n                                }\n                            );\n                        } else {\n                            callback(self);\n                        }\n                    },\n                    error: function(model, response) {\n                        if (typeof response.responseJSON !== \"undefined\") {\n                            mod_toastr.error(response.responseJSON.err_msg);\n                        } else {\n                            mod_toastr.error(\"An error occurred.\");\n                        }\n                    }\n                });\n            },\n\n            importCurrentIntoHistory: function() {\n                this.modal.disableButton(\"Import\");\n                var new_history_name = this.modal\n                    .$(\"input[name=history_name]\")\n                    .val();\n                var that = this;\n                if (new_history_name !== \"\") {\n                    $.post(Galaxy.root + \"api/histories\", {\n                        name: new_history_name\n                    })\n                        .done(function(new_history) {\n                            that.processImportToHistory(new_history.id);\n                        })\n                        .fail(function(xhr, status, error) {\n                            mod_toastr.error(\"An error occurred.\");\n                        })\n                        .always(function() {\n                            that.modal.enableButton(\"Import\");\n                        });\n                } else {\n                    var history_id = $(this.modal.$el)\n                        .find(\n                            \"select[name=dataset_import_single] option:selected\"\n                        )\n                        .val();\n                    this.processImportToHistory(history_id);\n                    this.modal.enableButton(\"Import\");\n                }\n            },\n\n            processImportToHistory: function(history_id) {\n                var historyItem = new mod_library_model.HistoryItem();\n                historyItem.url =\n                    historyItem.urlRoot + history_id + \"/contents\";\n                // set the used history as current so user will see the last one\n                // that he imported into in the history panel on the 'analysis' page\n                jQuery.getJSON(\n                    Galaxy.root + \"history/set_as_current?id=\" + history_id\n                );\n                // save the dataset into selected history\n                historyItem.save(\n                    { content: this.id, source: \"library\" },\n                    {\n                        success: function() {\n                            Galaxy.modal.hide();\n                            mod_toastr.success(\n                                \"Dataset imported. Click this to start analyzing it.\",\n                                \"\",\n                                {\n                                    onclick: function() {\n                                        window.location = Galaxy.root;\n                                    }\n                                }\n                            );\n                        },\n                        error: function(model, response) {\n                            if (typeof response.responseJSON !== \"undefined\") {\n                                mod_toastr.error(\n                                    \"Dataset not imported. \" +\n                                        response.responseJSON.err_msg\n                                );\n                            } else {\n                                mod_toastr.error(\n                                    \"An error occured. Dataset not imported. Please try again.\"\n                                );\n                            }\n                        }\n                    }\n                );\n            },\n\n            showPermissions: function(options) {\n                var template = this.templateDatasetPermissions();\n                var self = this;\n                this.options = _.extend(this.options, options);\n                $(\".tooltip\").remove();\n                if (this.options.fetched_permissions !== undefined) {\n                    if (\n                        this.options.fetched_permissions.access_dataset_roles\n                            .length === 0\n                    ) {\n                        this.model.set({ is_unrestricted: true });\n                    } else {\n                        this.model.set({ is_unrestricted: false });\n                    }\n                }\n                this.$el.html(\n                    template({\n                        item: this.model,\n                        is_admin: Galaxy.config.is_admin_user\n                    })\n                );\n                $.get(\n                    Galaxy.root +\n                        \"api/libraries/datasets/\" +\n                        self.id +\n                        \"/permissions?scope=current\"\n                )\n                    .done(function(fetched_permissions) {\n                        self.prepareSelectBoxes({\n                            fetched_permissions: fetched_permissions,\n                            is_admin: Galaxy.config.is_admin_user\n                        });\n                    })\n                    .fail(function() {\n                        mod_toastr.error(\n                            \"An error occurred while attempting to fetch dataset permissions.\"\n                        );\n                    });\n                $(\"#center [data-toggle]\").tooltip();\n                $(\"#center\").css(\"overflow\", \"auto\");\n            },\n\n            _serializeRoles: function(role_list) {\n                var selected_roles = [];\n                for (var i = 0; i < role_list.length; i++) {\n                    // Replace the : and , in role's name since these are select2 separators for initialData\n                    selected_roles.push(\n                        role_list[i][1] +\n                            \":\" +\n                            role_list[i][0].replace(\":\", \" \").replace(\",\", \" &\")\n                    );\n                }\n                return selected_roles;\n            },\n\n            prepareSelectBoxes: function(options) {\n                this.options = _.extend(this.options, options);\n                this.accessSelectObject = new mod_select.View(\n                    this._generate_select_options({\n                        selector: \"access_perm\",\n                        initialData: this._serializeRoles(\n                            this.options.fetched_permissions\n                                .access_dataset_roles\n                        )\n                    })\n                );\n                this.modifySelectObject = new mod_select.View(\n                    this._generate_select_options({\n                        selector: \"modify_perm\",\n                        initialData: this._serializeRoles(\n                            this.options.fetched_permissions.modify_item_roles\n                        )\n                    })\n                );\n                this.manageSelectObject = new mod_select.View(\n                    this._generate_select_options({\n                        selector: \"manage_perm\",\n                        initialData: this._serializeRoles(\n                            this.options.fetched_permissions\n                                .manage_dataset_roles\n                        )\n                    })\n                );\n            },\n\n            _generate_select_options: function(options) {\n                var select_options = {\n                    minimumInputLength: 0,\n                    multiple: true,\n                    placeholder: \"Click to select a role\",\n                    formatResult: function roleFormatResult(role) {\n                        return role.name + \" type: \" + role.type;\n                    },\n                    formatSelection: function roleFormatSelection(role) {\n                        return role.name;\n                    },\n                    initSelection: function(element, callback) {\n                        // the input tag has a value attribute preloaded that points to a preselected role's id\n                        // this function resolves that id attribute to an object that select2 can render\n                        // using its formatResult renderer - that way the role name is shown preselected\n                        var data = [];\n                        $(element.val().split(\",\")).each(function() {\n                            var item = this.split(\":\");\n                            data.push({\n                                id: item[0],\n                                name: item[1]\n                            });\n                        });\n                        callback(data);\n                    },\n                    dropdownCssClass: \"bigdrop\" // apply css that makes the dropdown taller\n                };\n                select_options.container = this.$el.find(\n                    \"#\" + options.selector\n                );\n                select_options.css = options.selector;\n                select_options.initialData = options.initialData.join(\",\");\n                select_options.ajax = {\n                    url:\n                        Galaxy.root +\n                        \"api/libraries/datasets/\" +\n                        this.id +\n                        \"/permissions?scope=available\",\n                    dataType: \"json\",\n                    quietMillis: 100,\n                    data: function(term, page) {\n                        // page is the one-based page number tracked by Select2\n                        return {\n                            q: term, //search term\n                            page_limit: 10, // page size, should be same as used in 'more' variable below\n                            page: page // page number\n                        };\n                    },\n                    results: function(data, page) {\n                        var more = page * 10 < data.total; // whether or not there are more results available\n                        // notice we return the value of more so Select2 knows if more results can be loaded\n                        return { results: data.roles, more: more };\n                    }\n                };\n                return select_options;\n            },\n\n            /**\n   * Save the changes made to the library dataset.\n   */\n            saveModifications: function(options) {\n                var is_changed = false;\n                var ld = this.model;\n                var new_name = this.$el.find(\".input_dataset_name\").val();\n                if (\n                    typeof new_name !== \"undefined\" &&\n                    new_name !== ld.get(\"name\")\n                ) {\n                    if (new_name.length > 0) {\n                        ld.set(\"name\", new_name);\n                        is_changed = true;\n                    } else {\n                        mod_toastr.warning(\n                            \"Library dataset name has to be at least 1 character long.\"\n                        );\n                        return;\n                    }\n                }\n                var new_info = this.$el.find(\".input_dataset_misc_info\").val();\n                if (\n                    typeof new_info !== \"undefined\" &&\n                    new_info !== ld.get(\"misc_info\")\n                ) {\n                    ld.set(\"misc_info\", new_info);\n                    is_changed = true;\n                }\n                var new_genome_build = this.select_genome.$el.select2(\"data\")\n                    .id;\n                if (\n                    typeof new_genome_build !== \"undefined\" &&\n                    new_genome_build !== ld.get(\"genome_build\")\n                ) {\n                    ld.set(\"genome_build\", new_genome_build);\n                    is_changed = true;\n                }\n                var new_ext = this.select_extension.$el.select2(\"data\").id;\n                if (\n                    typeof new_ext !== \"undefined\" &&\n                    new_ext !== ld.get(\"file_ext\")\n                ) {\n                    ld.set(\"file_ext\", new_ext);\n                    is_changed = true;\n                }\n                var dataset_view = this;\n                if (is_changed) {\n                    ld.save(null, {\n                        patch: true,\n                        success: function(ld) {\n                            dataset_view.render();\n                            mod_toastr.success(\n                                \"Changes to library dataset saved.\"\n                            );\n                        },\n                        error: function(model, response) {\n                            if (typeof response.responseJSON !== \"undefined\") {\n                                mod_toastr.error(response.responseJSON.err_msg);\n                            } else {\n                                mod_toastr.error(\n                                    \"An error occured while attempting to update the library dataset.\"\n                                );\n                            }\n                        }\n                    });\n                } else {\n                    dataset_view.render();\n                    mod_toastr.info(\"Nothing has changed.\");\n                }\n            },\n\n            copyToClipboard: function(e) {\n                e.preventDefault();\n                var href = Backbone.history.location.href;\n                if (href.lastIndexOf(\"/permissions\") !== -1) {\n                    href = href.substr(0, href.lastIndexOf(\"/permissions\"));\n                }\n                window.prompt(\"Copy to clipboard: Ctrl+C, Enter\", href);\n            },\n\n            makeDatasetPrivate: function() {\n                var self = this;\n                $.post(\n                    Galaxy.root +\n                        \"api/libraries/datasets/\" +\n                        self.id +\n                        \"/permissions?action=make_private\"\n                )\n                    .done(function(fetched_permissions) {\n                        self.model.set({ is_unrestricted: false });\n                        self.showPermissions({\n                            fetched_permissions: fetched_permissions\n                        });\n                        mod_toastr.success(\n                            \"The dataset is now private to you.\"\n                        );\n                    })\n                    .fail(function() {\n                        mod_toastr.error(\n                            \"An error occurred while attempting to make dataset private.\"\n                        );\n                    });\n            },\n\n            removeDatasetRestrictions: function() {\n                var self = this;\n                $.post(\n                    Galaxy.root +\n                        \"api/libraries/datasets/\" +\n                        self.id +\n                        \"/permissions?action=remove_restrictions\"\n                )\n                    .done(function(fetched_permissions) {\n                        self.model.set({ is_unrestricted: true });\n                        self.showPermissions({\n                            fetched_permissions: fetched_permissions\n                        });\n                        mod_toastr.success(\n                            \"Access to this dataset is now unrestricted.\"\n                        );\n                    })\n                    .fail(function() {\n                        mod_toastr.error(\n                            \"An error occurred while attempting to make dataset unrestricted.\"\n                        );\n                    });\n            },\n\n            /**\n   * Extract the role ids from Select2 elements's 'data'\n   */\n            _extractIds: function(roles_list) {\n                var ids_list = [];\n                for (var i = roles_list.length - 1; i >= 0; i--) {\n                    ids_list.push(roles_list[i].id);\n                }\n                return ids_list;\n            },\n\n            /**\n   * Save the permissions for roles entered in the select boxes.\n   */\n            savePermissions: function(event) {\n                var self = this;\n                var access_ids = this._extractIds(\n                    this.accessSelectObject.$el.select2(\"data\")\n                );\n                var manage_ids = this._extractIds(\n                    this.manageSelectObject.$el.select2(\"data\")\n                );\n                var modify_ids = this._extractIds(\n                    this.modifySelectObject.$el.select2(\"data\")\n                );\n                $.post(\n                    Galaxy.root +\n                        \"api/libraries/datasets/\" +\n                        self.id +\n                        \"/permissions?action=set_permissions\",\n                    {\n                        \"access_ids[]\": access_ids,\n                        \"manage_ids[]\": manage_ids,\n                        \"modify_ids[]\": modify_ids\n                    }\n                )\n                    .done(function(fetched_permissions) {\n                        self.showPermissions({\n                            fetched_permissions: fetched_permissions\n                        });\n                        mod_toastr.success(\"Permissions saved.\");\n                    })\n                    .fail(function() {\n                        mod_toastr.error(\n                            \"An error occurred while attempting to set dataset permissions.\"\n                        );\n                    });\n            },\n\n            /**\n   * If needed request all extensions and/or genomes from Galaxy\n   * and save them in sorted arrays.\n   */\n            fetchExtAndGenomes: function() {\n                var that = this;\n                if (this.list_genomes.length == 0) {\n                    mod_utils.get({\n                        url: Galaxy.root + \"api/datatypes?extension_only=False\",\n                        success: function(datatypes) {\n                            for (var key in datatypes) {\n                                that.list_extensions.push({\n                                    id: datatypes[key].extension,\n                                    text: datatypes[key].extension,\n                                    description: datatypes[key].description,\n                                    description_url:\n                                        datatypes[key].description_url\n                                });\n                            }\n                            that.list_extensions.sort(function(a, b) {\n                                return a.id > b.id ? 1 : a.id < b.id ? -1 : 0;\n                            });\n                            that.list_extensions.unshift(that.auto);\n                        }\n                    });\n                }\n                if (this.list_extensions.length == 0) {\n                    mod_utils.get({\n                        url: Galaxy.root + \"api/genomes\",\n                        success: function(genomes) {\n                            for (var key in genomes) {\n                                that.list_genomes.push({\n                                    id: genomes[key][1],\n                                    text: genomes[key][0]\n                                });\n                            }\n                            that.list_genomes.sort(function(a, b) {\n                                return a.id > b.id ? 1 : a.id < b.id ? -1 : 0;\n                            });\n                        }\n                    });\n                }\n            },\n\n            renderSelectBoxes: function(options) {\n                // This won't work properly unlesss we already have the data fetched.\n                // See this.fetchExtAndGenomes()\n                // TODO switch to common resources:\n                // https://trello.com/c/dIUE9YPl/1933-ui-common-resources-and-data-into-galaxy-object\n                var that = this;\n                var current_genome = \"?\";\n                var current_ext = \"auto\";\n                if (typeof options !== \"undefined\") {\n                    if (typeof options.genome_build !== \"undefined\") {\n                        current_genome = options.genome_build;\n                    }\n                    if (typeof options.file_ext !== \"undefined\") {\n                        current_ext = options.file_ext;\n                    }\n                }\n                this.select_genome = new mod_select.View({\n                    css: \"dataset-genome-select\",\n                    data: that.list_genomes,\n                    container: that.$el.find(\"#dataset_genome_select\"),\n                    value: current_genome\n                });\n                this.select_extension = new mod_select.View({\n                    css: \"dataset-extension-select\",\n                    data: that.list_extensions,\n                    container: that.$el.find(\"#dataset_extension_select\"),\n                    value: current_ext\n                });\n            },\n\n            templateDataset: function() {\n                return _.template(\n                    [\n                        // CONTAINER START\n                        '<div class=\"library_style_container\">',\n                        '<div id=\"library_toolbar\">',\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Download dataset\" class=\"btn btn-default toolbtn-download-dataset primary-button toolbar-item\" type=\"button\">',\n                        '<span class=\"fa fa-download\"></span>',\n                        \"&nbsp;Download\",\n                        \"</button>\",\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Import dataset into history\" class=\"btn btn-default toolbtn-import-dataset primary-button toolbar-item\" type=\"button\">',\n                        '<span class=\"fa fa-book\"></span>',\n                        \"&nbsp;to History\",\n                        \"</button>\",\n                        '<% if (item.get(\"can_user_modify\")) { %>',\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Modify library item\" class=\"btn btn-default toolbtn_modify_dataset primary-button toolbar-item\" type=\"button\">',\n                        '<span class=\"fa fa-pencil\"></span>',\n                        \"&nbsp;Modify\",\n                        \"</button>\",\n                        \"<% } %>\",\n                        '<% if (item.get(\"can_user_manage\")) { %>',\n                        '<a href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>/permissions\">',\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Manage permissions\" class=\"btn btn-default toolbtn_change_permissions primary-button toolbar-item\" type=\"button\">',\n                        '<span class=\"fa fa-group\"></span>',\n                        \"&nbsp;Permissions\",\n                        \"</button>\",\n                        \"</a>\",\n                        \"<% } %>\",\n                        \"</div>\",\n\n                        // BREADCRUMBS\n                        '<ol class=\"breadcrumb\">',\n                        '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>',\n                        '<% _.each(item.get(\"full_path\"), function(path_item) { %>',\n                        \"<% if (path_item[0] != item.id) { %>\",\n                        '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ',\n                        \"<% } else { %>\",\n                        '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>',\n                        \"<% } %>\",\n                        \"<% }); %>\",\n                        \"</ol>\",\n\n                        '<% if (item.get(\"is_unrestricted\")) { %>',\n                        \"<div>\",\n                        'This dataset is unrestricted so everybody with the link can access it. Just share <span class=\"copy-link-to-clipboard\"><a href=\"\"a>this page</a></span>.',\n                        \"</div>\",\n                        \"<% } %>\",\n\n                        // TABLE START\n                        '<div class=\"dataset_table\">',\n                        '<table class=\"grid table table-striped table-condensed\">',\n                        \"<tr>\",\n                        '<th class=\"dataset-first-column\" scope=\"row\" id=\"id_row\" data-id=\"<%= _.escape(item.get(\"ldda_id\")) %>\">Name</th>',\n                        '<td><%= _.escape(item.get(\"name\")) %></td>',\n                        \"</tr>\",\n                        '<% if (item.get(\"file_ext\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Data type</th>',\n                        '<td><%= _.escape(item.get(\"file_ext\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (item.get(\"genome_build\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Genome build</th>',\n                        '<td><%= _.escape(item.get(\"genome_build\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (item.get(\"file_size\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Size</th>',\n                        '<td><%= _.escape(item.get(\"file_size\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (item.get(\"date_uploaded\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Date uploaded (UTC)</th>',\n                        '<td><%= _.escape(item.get(\"date_uploaded\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (item.get(\"uploaded_by\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Uploaded by</th>',\n                        '<td><%= _.escape(item.get(\"uploaded_by\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (item.get(\"metadata_data_lines\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Data Lines</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"metadata_data_lines\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (item.get(\"metadata_comment_lines\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Comment Lines</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"metadata_comment_lines\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (item.get(\"metadata_columns\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Number of Columns</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"metadata_columns\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (item.get(\"metadata_column_types\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Column Types</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"metadata_column_types\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (item.get(\"message\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Message</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"message\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (item.get(\"misc_blurb\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Misc. blurb</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"misc_blurb\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (item.get(\"misc_info\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Misc. info</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"misc_info\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (item.get(\"tags\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Tags</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"tags\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if ( item.get(\"uuid\") !== \"ok\" ) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">UUID</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"uuid\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if ( item.get(\"state\") !== \"ok\" ) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">State</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"state\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        \"</table>\",\n\n                        '<% if (item.get(\"job_stderr\")) { %>',\n                        \"<h4>Job Standard Error</h4>\",\n                        '<pre class=\"code\">',\n                        '<%= _.escape(item.get(\"job_stderr\")) %>',\n                        \"</pre>\",\n                        \"<% } %>\",\n\n                        '<% if (item.get(\"job_stdout\")) { %>',\n                        \"<h4>Job Standard Output</h4>\",\n                        '<pre class=\"code\">',\n                        '<%= _.escape(item.get(\"job_stdout\")) %>',\n                        \"</pre>\",\n                        \"<% } %>\",\n\n                        \"<div>\",\n                        '<pre class=\"peek\">',\n                        \"</pre>\",\n                        \"</div>\",\n\n                        '<% if (item.get(\"has_versions\")) { %>',\n                        \"<div>\",\n                        \"<h3>Expired versions:</h3>\",\n                        \"<ul>\",\n                        '<% _.each(item.get(\"expired_versions\"), function(version) { %>',\n                        '<li><a title=\"See details of this version\" href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>/versions/<%- version[0] %>\"><%- version[1] %></a></li>',\n                        \"<% }) %>\",\n                        \"<ul>\",\n                        \"</div>\",\n                        \"<% } %>\",\n                        // TABLE END\n                        \"</div>\",\n                        // CONTAINER END\n                        \"</div>\"\n                    ].join(\"\")\n                );\n            },\n\n            templateVersion: function() {\n                return _.template(\n                    [\n                        // CONTAINER START\n                        '<div class=\"library_style_container\">',\n                        '<div id=\"library_toolbar\">',\n                        '<a href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>\">',\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Go to latest dataset\" class=\"btn btn-default primary-button toolbar-item\" type=\"button\">',\n                        '<span class=\"fa fa-caret-left fa-lg\"></span>',\n                        \"&nbsp;Latest dataset\",\n                        \"</button>\",\n                        \"<a>\",\n                        \"</div>\",\n\n                        // BREADCRUMBS\n                        '<ol class=\"breadcrumb\">',\n                        '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>',\n                        '<% _.each(item.get(\"full_path\"), function(path_item) { %>',\n                        \"<% if (path_item[0] != item.id) { %>\",\n                        '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ',\n                        \"<% } else { %>\",\n                        '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>',\n                        \"<% } %>\",\n                        \"<% }); %>\",\n                        \"</ol>\",\n\n                        '<div class=\"alert alert-warning\">This is an expired version of the library dataset: <%= _.escape(item.get(\"name\")) %></div>',\n                        // DATASET START\n                        '<div class=\"dataset_table\">',\n                        '<table class=\"grid table table-striped table-condensed\">',\n                        \"<tr>\",\n                        '<th scope=\"row\" id=\"id_row\" data-id=\"<%= _.escape(ldda.id) %>\">Name</th>',\n                        '<td><%= _.escape(ldda.get(\"name\")) %></td>',\n                        \"</tr>\",\n                        '<% if (ldda.get(\"file_ext\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Data type</th>',\n                        '<td><%= _.escape(ldda.get(\"file_ext\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (ldda.get(\"genome_build\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Genome build</th>',\n                        '<td><%= _.escape(ldda.get(\"genome_build\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (ldda.get(\"file_size\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Size</th>',\n                        '<td><%= _.escape(ldda.get(\"file_size\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (ldda.get(\"date_uploaded\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Date uploaded (UTC)</th>',\n                        '<td><%= _.escape(ldda.get(\"date_uploaded\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (ldda.get(\"uploaded_by\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Uploaded by</th>',\n                        '<td><%= _.escape(ldda.get(\"uploaded_by\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (ldda.get(\"metadata_data_lines\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Data Lines</th>',\n                        '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_data_lines\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (ldda.get(\"metadata_comment_lines\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Comment Lines</th>',\n                        '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_comment_lines\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (ldda.get(\"metadata_columns\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Number of Columns</th>',\n                        '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_columns\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (ldda.get(\"metadata_column_types\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Column Types</th>',\n                        '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_column_types\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (ldda.get(\"message\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Message</th>',\n                        '<td scope=\"row\"><%= _.escape(ldda.get(\"message\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (ldda.get(\"misc_blurb\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Miscellaneous blurb</th>',\n                        '<td scope=\"row\"><%= _.escape(ldda.get(\"misc_blurb\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (ldda.get(\"misc_info\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Miscellaneous information</th>',\n                        '<td scope=\"row\"><%= _.escape(ldda.get(\"misc_info\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (item.get(\"tags\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Tags</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"tags\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        \"</table>\",\n                        \"<div>\",\n                        '<pre class=\"peek\">',\n                        \"</pre>\",\n                        \"</div>\",\n                        // DATASET END\n                        \"</div>\",\n                        // CONTAINER END\n                        \"</div>\"\n                    ].join(\"\")\n                );\n            },\n\n            templateModifyDataset: function() {\n                return _.template(\n                    [\n                        // CONTAINER START\n                        '<div class=\"library_style_container\">',\n                        '<div id=\"library_toolbar\">',\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Cancel modifications\" class=\"btn btn-default toolbtn_cancel_modifications primary-button toolbar-item\" type=\"button\">',\n                        '<span class=\"fa fa-times\"></span>',\n                        \"&nbsp;Cancel\",\n                        \"</button>\",\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save modifications\" class=\"btn btn-default toolbtn_save_modifications primary-button toolbar-item\" type=\"button\">',\n                        '<span class=\"fa fa-floppy-o\"></span>',\n                        \"&nbsp;Save\",\n                        \"</button>\",\n                        \"</div>\",\n\n                        // BREADCRUMBS\n                        '<ol class=\"breadcrumb\">',\n                        '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>',\n                        '<% _.each(item.get(\"full_path\"), function(path_item) { %>',\n                        \"<% if (path_item[0] != item.id) { %>\",\n                        '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ',\n                        \"<% } else { %>\",\n                        '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>',\n                        \"<% } %>\",\n                        \"<% }); %>\",\n                        \"</ol>\",\n\n                        '<div class=\"dataset_table\">',\n                        '<table class=\"grid table table-striped table-condensed\">',\n                        \"<tr>\",\n                        '<th class=\"dataset-first-column\" scope=\"row\" id=\"id_row\" data-id=\"<%= _.escape(item.get(\"ldda_id\")) %>\">Name</th>',\n                        '<td><input class=\"input_dataset_name form-control\" type=\"text\" placeholder=\"name\" value=\"<%= _.escape(item.get(\"name\")) %>\"></td>',\n                        \"</tr>\",\n                        \"<tr>\",\n                        '<th scope=\"row\">Data type</th>',\n                        \"<td>\",\n                        '<span id=\"dataset_extension_select\" class=\"dataset-extension-select\" />',\n                        \"</td>\",\n                        \"</tr>\",\n                        \"<tr>\",\n                        '<th scope=\"row\">Genome build</th>',\n                        \"<td>\",\n                        '<span id=\"dataset_genome_select\" class=\"dataset-genome-select\" />',\n                        \"</td>\",\n                        \"</tr>\",\n                        \"<tr>\",\n                        '<th scope=\"row\">Size</th>',\n                        '<td><%= _.escape(item.get(\"file_size\")) %></td>',\n                        \"</tr>\",\n                        \"<tr>\",\n                        '<th scope=\"row\">Date uploaded (UTC)</th>',\n                        '<td><%= _.escape(item.get(\"date_uploaded\")) %></td>',\n                        \"</tr>\",\n                        \"<tr>\",\n                        '<th scope=\"row\">Uploaded by</th>',\n                        '<td><%= _.escape(item.get(\"uploaded_by\")) %></td>',\n                        \"</tr>\",\n                        '<tr scope=\"row\">',\n                        '<th scope=\"row\">Data Lines</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"metadata_data_lines\")) %></td>',\n                        \"</tr>\",\n                        '<th scope=\"row\">Comment Lines</th>',\n                        '<% if (item.get(\"metadata_comment_lines\") === \"\") { %>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"metadata_comment_lines\")) %></td>',\n                        \"<% } else { %>\",\n                        '<td scope=\"row\">unknown</td>',\n                        \"<% } %>\",\n                        \"</tr>\",\n                        \"<tr>\",\n                        '<th scope=\"row\">Number of Columns</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"metadata_columns\")) %></td>',\n                        \"</tr>\",\n                        \"<tr>\",\n                        '<th scope=\"row\">Column Types</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"metadata_column_types\")) %></td>',\n                        \"</tr>\",\n                        \"<tr>\",\n                        '<th scope=\"row\">Message</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"message\")) %></td>',\n                        \"</tr>\",\n                        \"<tr>\",\n                        '<th scope=\"row\">Misc. blurb</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"misc_blurb\")) %></td>',\n                        \"</tr>\",\n                        \"<tr>\",\n                        '<th scope=\"row\">Misc. information</th>',\n                        '<td><input class=\"input_dataset_misc_info form-control\" type=\"text\" placeholder=\"info\" value=\"<%= _.escape(item.get(\"misc_info\")) %>\"></td>',\n                        \"</tr>\",\n                        //TODO: add functionality to modify tags here\n                        '<% if (item.get(\"tags\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Tags</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"tags\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        \"</table>\",\n                        \"<div>\",\n                        '<pre class=\"peek\">',\n                        \"</pre>\",\n                        \"</div>\",\n                        \"</div>\",\n                        // CONTAINER END\n                        \"</div>\"\n                    ].join(\"\")\n                );\n            },\n\n            templateDatasetPermissions: function() {\n                return _.template(\n                    [\n                        // CONTAINER START\n                        '<div class=\"library_style_container\">',\n                        '<div id=\"library_toolbar\">',\n                        '<a href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>\">',\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Go back to dataset\" class=\"btn btn-default primary-button toolbar-item\" type=\"button\">',\n                        '<span class=\"fa fa-file-o\"></span>',\n                        \"&nbsp;Dataset Details\",\n                        \"</button>\",\n                        \"<a>\",\n                        \"</div>\",\n\n                        // BREADCRUMBS\n                        '<ol class=\"breadcrumb\">',\n                        '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>',\n                        '<% _.each(item.get(\"full_path\"), function(path_item) { %>',\n                        \"<% if (path_item[0] != item.id) { %>\",\n                        '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ',\n                        \"<% } else { %>\",\n                        '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>',\n                        \"<% } %>\",\n                        \"<% }); %>\",\n                        \"</ol>\",\n\n                        '<h1>Dataset: <%= _.escape(item.get(\"name\")) %></h1>',\n                        '<div class=\"alert alert-warning\">',\n                        \"<% if (is_admin) { %>\",\n                        \"You are logged in as an <strong>administrator</strong> therefore you can manage any dataset on this Galaxy instance. Please make sure you understand the consequences.\",\n                        \"<% } else { %>\",\n                        \"You can assign any number of roles to any of the following permission types. However please read carefully the implications of such actions.\",\n                        \"<% } %>\",\n                        \"</div>\",\n                        '<div class=\"dataset_table\">',\n                        \"<h2>Library-related permissions</h2>\",\n                        \"<h4>Roles that can modify the library item</h4>\",\n                        '<div id=\"modify_perm\" class=\"modify_perm roles-selection\"></div>',\n                        '<div class=\"alert alert-info roles-selection\">User with <strong>any</strong> of these roles can modify name, metadata, and other information about this library item.</div>',\n                        \"<hr/>\",\n                        \"<h2>Dataset-related permissions</h2>\",\n                        '<div class=\"alert alert-warning\">Changes made below will affect <strong>every</strong> library item that was created from this dataset and also every history this dataset is part of.</div>',\n                        '<% if (!item.get(\"is_unrestricted\")) { %>',\n                        '<p>You can <span class=\"remove-restrictions\"><a href=\"\">remove all access restrictions</a></span> on this dataset.</p>',\n                        \"<% } else { %>\",\n                        '<p>You can <span class=\"make-private\"><a href=\"\">make this dataset private</a></span> to you.</p>',\n                        \"<% } %>\",\n                        \"<h4>Roles that can access the dataset</h4>\",\n                        '<div id=\"access_perm\" class=\"access_perm roles-selection\"></div>',\n                        '<div class=\"alert alert-info roles-selection\">',\n                        \"User has to have <strong>all these roles</strong> in order to access this dataset.\",\n                        \" Users without access permission <strong>cannot</strong> have other permissions on this dataset.\",\n                        \" If there are no access roles set on the dataset it is considered <strong>unrestricted</strong>.\",\n                        \"</div>\",\n                        \"<h4>Roles that can manage permissions on the dataset</h4>\",\n                        '<div id=\"manage_perm\" class=\"manage_perm roles-selection\"></div>',\n                        '<div class=\"alert alert-info roles-selection\">',\n                        \"User with <strong>any</strong> of these roles can manage permissions of this dataset. If you remove yourself you will lose the ability manage this dataset unless you are an admin.\",\n                        \"</div>\",\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save modifications made on this page\" class=\"btn btn-default toolbtn_save_permissions primary-button\" type=\"button\">',\n                        '<span class=\"fa fa-floppy-o\"></span>',\n                        \"&nbsp;Save\",\n                        \"</button>\",\n                        \"</div>\",\n                        // CONTAINER END\n                        \"</div>\"\n                    ].join(\"\")\n                );\n            },\n\n            templateBulkImportInModal: function() {\n                return _.template(\n                    [\n                        \"<div>\",\n                        '<div class=\"library-modal-item\">',\n                        \"Select history: \",\n                        '<select id=\"dataset_import_single\" name=\"dataset_import_single\" style=\"width:50%; margin-bottom: 1em; \" autofocus>',\n                        \"<% _.each(histories, function(history) { %>\",\n                        '<option value=\"<%= _.escape(history.get(\"id\")) %>\"><%= _.escape(history.get(\"name\")) %></option>',\n                        \"<% }); %>\",\n                        \"</select>\",\n                        \"</div>\",\n                        '<div class=\"library-modal-item\">',\n                        \"or create new: \",\n                        '<input type=\"text\" name=\"history_name\" value=\"\" placeholder=\"name of the new history\" style=\"width:50%;\">',\n                        \"</input>\",\n                        \"</div>\",\n                        \"</div>\"\n                    ].join(\"\")\n                );\n            }\n        });\n\n        return {\n            LibraryDatasetView: LibraryDatasetView\n        };\n    }\n);\n"]}