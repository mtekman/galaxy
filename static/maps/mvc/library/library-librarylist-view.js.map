{"version":3,"sources":["mvc/library/library-librarylist-view.js"],"names":["define","LibraryListView","el","mod_toastr","mod_library_model","mod_library_libraryrow_view","_","Backbone","View","extend","page_count","show_page","defaults","all_fetched","initialize","collection","options","this","success","that","render","error","modal","Libraries","urlRoot","fetch","model","response","responseJSON","err_msg","models","setElement","template","templateLibraryList","libraries_to_render","Galaxy","libraries","get","deleted","preferences","is_deleted","where","filter","is_public","page_start","Math","total_libraries_count","search_term","length","fetchDeleted","ceil","remove","slice","$el","i","library","renderOne","order","libraryToolbarView","renderPaginator","rowView","renderRows","html","$","tooltip","css","url","searchLibraries","trimmed_term","search","LibraryRowView","find","append","sort_clicked","set","sort_order","sortLibraries","trim","results","searching","join"],"mappings":"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","file":"../../../scripts/mvc/library/library-librarylist-view.js","sourcesContent":["define(\n    [\n        \"libs/toastr\",\n        \"mvc/library/library-model\",\n        \"mvc/library/library-libraryrow-view\",\n        \"libs/underscore\"\n    ],\n    function(mod_toastr, mod_library_model, mod_library_libraryrow_view, _) {\n        var LibraryListView = Backbone.View.extend({\n            el: \"#libraries_element\",\n\n            events: {\n                \"click .sort-libraries-link\": \"sort_clicked\"\n            },\n\n            defaults: {\n                page_count: null,\n                show_page: null,\n                all_fetched: false\n            },\n\n            /**\n     * Initialize and fetch the libraries from server.\n     * Async render afterwards.\n     * @param  {object} options an object with options\n     */\n            initialize: function(options) {\n                this.options = _.defaults(\n                    this.options || {},\n                    options,\n                    this.defaults\n                );\n                var that = this;\n                this.modal = null;\n                // collection of {Item}s\n                this.collection = new mod_library_model.Libraries();\n                this.collection.url =\n                    this.collection.urlRoot + \"?deleted=false\";\n                this.collection.fetch({\n                    success: function() {\n                        that.render();\n                    },\n                    error: function(model, response) {\n                        if (typeof response.responseJSON !== \"undefined\") {\n                            mod_toastr.error(response.responseJSON.err_msg);\n                        } else {\n                            mod_toastr.error(\"An error occurred.\");\n                        }\n                    }\n                });\n            },\n\n            /**\n     * Render the libraries table either from the object's own collection,\n     * or from a given array of library models,\n     * or render an empty list in case no data is given.\n     */\n            render: function(options) {\n                this.options = _.extend(this.options, options);\n                this.setElement(\"#libraries_element\");\n                var template = this.templateLibraryList();\n                var libraries_to_render = null;\n                var models = null;\n                var is_public = function(model) {\n                    return model.get(\"public\") === true;\n                };\n                $(\".tooltip\").hide();\n                if (typeof options !== \"undefined\") {\n                    models =\n                        typeof options.models !== \"undefined\"\n                            ? options.models\n                            : null;\n                }\n                if (this.collection !== null && models === null) {\n                    this.sortLibraries();\n                    if (Galaxy.libraries.preferences.get(\"with_deleted\")) {\n                        libraries_to_render = this.collection.models;\n                    } else {\n                        libraries_to_render = this.collection.where({\n                            deleted: false\n                        });\n                    }\n                    if (\n                        Galaxy.libraries.preferences.get(\"without_restricted\")\n                    ) {\n                        libraries_to_render = _.filter(\n                            libraries_to_render,\n                            is_public\n                        );\n                    }\n                } else if (models !== null) {\n                    if (Galaxy.libraries.preferences.get(\"with_deleted\")) {\n                        libraries_to_render = models;\n                    } else {\n                        var is_deleted = function(model) {\n                            return model.get(\"deleted\") === false;\n                        };\n                        libraries_to_render = _.filter(models, is_deleted);\n                    }\n                    if (\n                        Galaxy.libraries.preferences.get(\"without_restricted\")\n                    ) {\n                        libraries_to_render = _.filter(\n                            libraries_to_render,\n                            is_public\n                        );\n                    }\n                } else {\n                    libraries_to_render = [];\n                }\n\n                // pagination\n                if (\n                    this.options.show_page === null ||\n                    this.options.show_page < 1\n                ) {\n                    this.options.show_page = 1;\n                }\n                this.options.total_libraries_count = libraries_to_render.length;\n                var page_start =\n                    Galaxy.libraries.preferences.get(\"library_page_size\") *\n                    (this.options.show_page - 1);\n                this.options.page_count = Math.ceil(\n                    this.options.total_libraries_count /\n                        Galaxy.libraries.preferences.get(\"library_page_size\")\n                );\n                if (\n                    this.options.total_libraries_count > 0 &&\n                    page_start < this.options.total_libraries_count\n                ) {\n                    libraries_to_render = libraries_to_render.slice(\n                        page_start,\n                        page_start +\n                            Galaxy.libraries.preferences.get(\n                                \"library_page_size\"\n                            )\n                    );\n                    this.options.libraries_shown = libraries_to_render.length;\n                    // User requests page with no libraries\n                    if (\n                        Galaxy.libraries.preferences.get(\"library_page_size\") *\n                            this.options.show_page >\n                        this.options.total_libraries_count +\n                            Galaxy.libraries.preferences.get(\n                                \"library_page_size\"\n                            )\n                    ) {\n                        libraries_to_render = [];\n                    }\n                    this.$el.html(\n                        template({\n                            length: 1,\n                            order: Galaxy.libraries.preferences.get(\n                                \"sort_order\"\n                            ),\n                            search_term:\n                                Galaxy.libraries.libraryToolbarView.options\n                                    .search_term\n                        })\n                    );\n                    Galaxy.libraries.libraryToolbarView.renderPaginator(\n                        this.options\n                    );\n                    this.renderRows(libraries_to_render);\n                } else {\n                    this.$el.html(\n                        template({\n                            length: 0,\n                            order: Galaxy.libraries.preferences.get(\n                                \"sort_order\"\n                            ),\n                            search_term:\n                                Galaxy.libraries.libraryToolbarView.options\n                                    .search_term\n                        })\n                    );\n                    Galaxy.libraries.libraryToolbarView.renderPaginator(\n                        this.options\n                    );\n                }\n                $(\"#center [data-toggle]\").tooltip();\n                $(\"#center\").css(\"overflow\", \"auto\");\n            },\n\n            fetchDeleted: function() {\n                if (this.options.all_fetched) {\n                    this.render();\n                } else {\n                    var that = this;\n                    this.collection.url =\n                        this.collection.urlRoot + \"?deleted=true\";\n                    this.collection.fetch({\n                        remove: false,\n                        success: function() {\n                            that.options.all_fetched = true;\n                            that.render();\n                        },\n                        error: function(model, response) {\n                            if (typeof response.responseJSON !== \"undefined\") {\n                                mod_toastr.error(response.responseJSON.err_msg);\n                            } else {\n                                mod_toastr.error(\"An error occurred.\");\n                            }\n                        }\n                    });\n                }\n            },\n\n            /**\n     * Render all given models as rows in the library list\n     * @param  {array} libraries_to_render array of library models to render\n     */\n            renderRows: function(libraries_to_render) {\n                for (var i = 0; i < libraries_to_render.length; i++) {\n                    var library = libraries_to_render[i];\n                    this.renderOne({ library: library });\n                }\n            },\n\n            /**\n     * Create a view for the given model and add it to the libraries view.\n     * @param {Library} model of the view that will be rendered\n     */\n            renderOne: function(options) {\n                var library = options.library;\n                var rowView = new mod_library_libraryrow_view.LibraryRowView(\n                    library\n                );\n                this.$el.find(\"#library_list_body\").append(rowView.el);\n            },\n\n            /**\n     * Table heading was clicked, update sorting preferences and re-render.\n     * @return {[type]} [description]\n     */\n            sort_clicked: function() {\n                if (Galaxy.libraries.preferences.get(\"sort_order\") === \"asc\") {\n                    Galaxy.libraries.preferences.set({ sort_order: \"desc\" });\n                } else {\n                    Galaxy.libraries.preferences.set({ sort_order: \"asc\" });\n                }\n                this.render();\n            },\n\n            /**\n     * Sort the underlying collection according to the parameters received.\n     * Currently supports only sorting by name.\n     */\n            sortLibraries: function() {\n                if (Galaxy.libraries.preferences.get(\"sort_by\") === \"name\") {\n                    if (\n                        Galaxy.libraries.preferences.get(\"sort_order\") === \"asc\"\n                    ) {\n                        this.collection.sortLibraries(\"name\", \"asc\");\n                    } else if (\n                        Galaxy.libraries.preferences.get(\"sort_order\") ===\n                        \"desc\"\n                    ) {\n                        this.collection.sortLibraries(\"name\", \"desc\");\n                    }\n                }\n            },\n\n            /**\n     * In case the search_term is not empty perform the search and render\n     * the result. Render all visible libraries otherwise.\n     * @param  {string} search_term string to search for\n     */\n            searchLibraries: function(search_term) {\n                var trimmed_term = $.trim(search_term);\n                if (trimmed_term !== \"\") {\n                    var results = null;\n                    results = this.collection.search(search_term);\n                    this.options.searching = true;\n                    this.render({ models: results, show_page: 1 });\n                } else {\n                    this.options.searching = false;\n                    this.render();\n                }\n            },\n\n            // MMMMMMMMMMMMMMMMMM\n            // === TEMPLATES ====\n            // MMMMMMMMMMMMMMMMMM\n\n            templateLibraryList: function() {\n                return _.template(\n                    [\n                        '<div class=\"library_container table-responsive\">',\n                        \"<% if(length === 0) { %>\",\n                        \"<% if(search_term.length > 0) { %>\",\n                        \"<div>\",\n                        \"There are no libraries matching your search. Try different keyword.\",\n                        \"</div>\",\n                        \"<% } else{ %>\",\n                        \"<div>\",\n                        \"There are no libraries visible to you here. If you expected some to show up please consult the\",\n                        ' <a href=\"https://galaxyproject.org/data-libraries/#permissions\" target=\"_blank\">library security wikipage</a>',\n                        ' or visit the <a href=\"https://biostar.usegalaxy.org/\" target=\"_blank\">Galaxy support site</a>.',\n                        \"</div>\",\n                        \"<% }%>\",\n                        \"<% } else{ %>\",\n                        '<table class=\"grid table table-condensed\">',\n                        \"<thead>\",\n                        '<th style=\"width:30%;\">',\n                        '<a class=\"sort-libraries-link\" title=\"Click to reverse order\" href=\"#\">',\n                        \"name\",\n                        \"</a>\",\n                        '<span title=\"Sorted alphabetically\" class=\"fa fa-sort-alpha-<%- order %>\"/>',\n                        \"</th>\",\n                        '<th style=\"width:22%;\">description</th>',\n                        '<th style=\"width:22%;\">synopsis</th> ',\n                        '<th style=\"width:26%;\"></th>',\n                        \"</thead>\",\n                        '<tbody id=\"library_list_body\">',\n                        // library item views will attach here\n                        \"</tbody>\",\n                        \"</table>\",\n                        \"<% }%>\",\n                        \"</div>\"\n                    ].join(\"\")\n                );\n            }\n        });\n\n        return {\n            LibraryListView: LibraryListView\n        };\n    }\n);\n"]}