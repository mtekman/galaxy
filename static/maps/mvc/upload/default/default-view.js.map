{"version":3,"sources":["mvc/upload/default/default-view.js"],"names":["define","upload_size","collection","counter","success","error","running","reset","UploadFtp","UploadExtension","Popover","Select","initialize","LazyLimited","Backbone","View","app","list_genomes","UploadModel","Collection","announce","$uploadtable","id","title","this","icon","self","btnFtp","options","list_extensions","onclick","_eventFtp","ui_button","ftp_upload_site","currentFtp","btnCreate","Button","$uploadbox","$","btnLocal","Ui","btnStart","uploadbox","select","btnStop","_eventStop","btnReset","_eventCreate","btnClose","modal","each","_eventProgress","_eventSuccess","hide","_","_eventComplete","ondragover","ondragleave","button","prepend","$el","url","nginx_upload_path","index","file","select_extension","container","filter","ext","composite_files","history_id","_changeExtension","extension","percentage","message","target","list","addClass","removeClass","data","value","onchange","css","loader","$container","upload_row","default_extension","find","e","_eventRemove","text","placement","on","compatible","select_genome","default_genome","genome","_changeGenome","show_table","enable_reset","enable_start","UploadRow","model","enable_sources","_eventAnnounce","file_mode","file_path","file_data","get","status","upload_completed","Galaxy","currHistoryPanel","refreshContents","_uploadPercentage","render","new_model","Model","file_name","file_size","size","remove","path","add","it","visible","set","ftp","name","ftp_file","onremove","model_index","_eventError","info","mode","onadd","show","_eventStart","length","uploadpost","toData","currentHistory","_uploadFtp","start","_template","html","stop","_eventReset","defaults_only","push"],"mappings":"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","file":"../../../../scripts/mvc/upload/default/default-view.js","sourcesContent":["/** Renders contents of the default uploader */\ndefine(\n    [\n        \"utils/utils\",\n        \"mvc/upload/upload-model\",\n        \"mvc/upload/default/default-row\",\n        \"mvc/upload/upload-ftp\",\n        \"mvc/upload/upload-extension\",\n        \"mvc/ui/ui-popover\",\n        \"mvc/ui/ui-select\",\n        \"mvc/ui/ui-misc\",\n        \"mvc/lazy/lazy-limited\",\n        \"utils/uploadbox\"\n    ],\n    function(\n        Utils,\n        UploadModel,\n        UploadRow,\n        UploadFtp,\n        UploadExtension,\n        Popover,\n        Select,\n        Ui,\n        LazyLimited\n    ) {\n        return Backbone.View.extend({\n            // current upload size in bytes\n            upload_size: 0,\n\n            // contains upload row models\n            collection: new UploadModel.Collection(),\n\n            // keeps track of the current uploader state\n            counter: {\n                announce: 0,\n                success: 0,\n                error: 0,\n                running: 0,\n                reset: function() {\n                    this.announce = this.success = this.error = this.running = 0;\n                }\n            },\n\n            initialize: function(app) {\n                var self = this;\n                this.app = app;\n                this.options = app.options;\n                this.list_extensions = app.list_extensions;\n                this.list_genomes = app.list_genomes;\n                this.ui_button = app.ui_button;\n                this.ftp_upload_site = app.currentFtp();\n\n                // build template\n                this.setElement(this._template());\n                this.$uploadbox = this.$(\".upload-box\");\n                this.$uploadtable = this.$(\".upload-table\");\n\n                // append buttons to dom\n                this.btnLocal = new Ui.Button({\n                    id: \"btn-local\",\n                    title: \"Choose local file\",\n                    onclick: function() {\n                        self.uploadbox.select();\n                    },\n                    icon: \"fa fa-laptop\"\n                });\n                this.btnFtp = new Ui.Button({\n                    id: \"btn-ftp\",\n                    title: \"Choose FTP file\",\n                    onclick: function() {\n                        self._eventFtp();\n                    },\n                    icon: \"fa fa-folder-open-o\"\n                });\n                this.btnCreate = new Ui.Button({\n                    id: \"btn-new\",\n                    title: \"Paste/Fetch data\",\n                    onclick: function() {\n                        self._eventCreate();\n                    },\n                    icon: \"fa fa-edit\"\n                });\n                this.btnStart = new Ui.Button({\n                    id: \"btn-start\",\n                    title: \"Start\",\n                    onclick: function() {\n                        self._eventStart();\n                    }\n                });\n                this.btnStop = new Ui.Button({\n                    id: \"btn-stop\",\n                    title: \"Pause\",\n                    onclick: function() {\n                        self._eventStop();\n                    }\n                });\n                this.btnReset = new Ui.Button({\n                    id: \"btn-reset\",\n                    title: \"Reset\",\n                    onclick: function() {\n                        self._eventReset();\n                    }\n                });\n                this.btnClose = new Ui.Button({\n                    id: \"btn-close\",\n                    title: \"Close\",\n                    onclick: function() {\n                        self.app.modal.hide();\n                    }\n                });\n                _.each(\n                    [\n                        this.btnLocal,\n                        this.btnFtp,\n                        this.btnCreate,\n                        this.btnStop,\n                        this.btnReset,\n                        this.btnStart,\n                        this.btnClose\n                    ],\n                    function(button) {\n                        self.$(\".upload-buttons\").prepend(button.$el);\n                    }\n                );\n\n                // file upload\n                this.uploadbox = this.$uploadbox.uploadbox({\n                    url: this.app.options.nginx_upload_path,\n                    announce: function(index, file) {\n                        self._eventAnnounce(index, file);\n                    },\n                    initialize: function(index) {\n                        return self.app.toData(\n                            [self.collection.get(index)],\n                            self.history_id\n                        );\n                    },\n                    progress: function(index, percentage) {\n                        self._eventProgress(index, percentage);\n                    },\n                    success: function(index, message) {\n                        self._eventSuccess(index, message);\n                    },\n                    error: function(index, message) {\n                        self._eventError(index, message);\n                    },\n                    complete: function() {\n                        self._eventComplete();\n                    },\n                    ondragover: function() {\n                        self.$uploadbox.addClass(\"highlight\");\n                    },\n                    ondragleave: function() {\n                        self.$uploadbox.removeClass(\"highlight\");\n                    }\n                });\n\n                // add ftp file viewer\n                this.ftp = new Popover.View({\n                    title: \"FTP files\",\n                    container: this.btnFtp.$el\n                });\n\n                // select extension\n                this.select_extension = new Select.View({\n                    css: \"upload-footer-selection\",\n                    container: this.$(\".upload-footer-extension\"),\n                    data: _.filter(this.list_extensions, function(ext) {\n                        return !ext.composite_files;\n                    }),\n                    value: this.options.default_extension,\n                    onchange: function(extension) {\n                        self._changeExtension(extension);\n                    }\n                });\n\n                // handle extension info popover\n                this.$(\".upload-footer-extension-info\")\n                    .on(\"click\", function(e) {\n                        new UploadExtension({\n                            $el: $(e.target),\n                            title: self.select_extension.text(),\n                            extension: self.select_extension.value(),\n                            list: self.list_extensions,\n                            placement: \"top\"\n                        });\n                    })\n                    .on(\"mousedown\", function(e) {\n                        e.preventDefault();\n                    });\n\n                // genome extension\n                this.select_genome = new Select.View({\n                    css: \"upload-footer-selection\",\n                    container: this.$(\".upload-footer-genome\"),\n                    data: this.list_genomes,\n                    value: this.options.default_genome,\n                    onchange: function(genome) {\n                        self._changeGenome(genome);\n                    }\n                });\n\n                // Lazy load helper\n                this.loader = new LazyLimited({\n                    $container: this.$uploadbox,\n                    collection: this.collection,\n                    new_content: function(model) {\n                        var upload_row = new UploadRow(self, { model: model });\n                        self.$uploadtable\n                            .find(\"> tbody:first\")\n                            .append(upload_row.$el);\n                        upload_row.render();\n                        return upload_row;\n                    }\n                });\n\n                // events\n                this.collection.on(\"remove\", function(model) {\n                    self._eventRemove(model);\n                });\n                this.render();\n            },\n\n            render: function() {\n                var message = \"\";\n                if (this.counter.announce == 0) {\n                    if (this.uploadbox.compatible()) {\n                        message = \"&nbsp;\";\n                    } else {\n                        message =\n                            \"Browser does not support Drag & Drop. Try Firefox 4+, Chrome 7+, IE 10+, Opera 12+ or Safari 6+.\";\n                    }\n                } else {\n                    if (this.counter.running == 0) {\n                        message =\n                            \"You added \" +\n                            this.counter.announce +\n                            \" file(s) to the queue. Add more files or click 'Start' to proceed.\";\n                    } else {\n                        message =\n                            \"Please wait...\" +\n                            this.counter.announce +\n                            \" out of \" +\n                            this.counter.running +\n                            \" remaining.\";\n                    }\n                }\n                this.$(\".upload-top-info\").html(message);\n                var enable_reset =\n                    this.counter.running == 0 &&\n                    this.counter.announce +\n                        this.counter.success +\n                        this.counter.error >\n                        0;\n                var enable_start =\n                    this.counter.running == 0 && this.counter.announce > 0;\n                var enable_sources = this.counter.running == 0;\n                var show_table =\n                    this.counter.announce +\n                        this.counter.success +\n                        this.counter.error >\n                    0;\n                this.btnReset[enable_reset ? \"enable\" : \"disable\"]();\n                this.btnStart[enable_start ? \"enable\" : \"disable\"]();\n                this.btnStart.$el[enable_start ? \"addClass\" : \"removeClass\"](\n                    \"btn-primary\"\n                );\n                this.btnStop[this.counter.running > 0 ? \"enable\" : \"disable\"]();\n                this.btnLocal[enable_sources ? \"enable\" : \"disable\"]();\n                this.btnFtp[enable_sources ? \"enable\" : \"disable\"]();\n                this.btnCreate[enable_sources ? \"enable\" : \"disable\"]();\n                this.btnFtp.$el[this.ftp_upload_site ? \"show\" : \"hide\"]();\n                this.$(\".upload-table\")[show_table ? \"show\" : \"hide\"]();\n                this.$(\".upload-helper\")[show_table ? \"hide\" : \"show\"]();\n            },\n\n            /** A new file has been dropped/selected through the uploadbox plugin */\n            _eventAnnounce: function(index, file) {\n                this.counter.announce++;\n                var new_model = new UploadModel.Model({\n                    id: index,\n                    file_name: file.name,\n                    file_size: file.size,\n                    file_mode: file.mode || \"local\",\n                    file_path: file.path,\n                    file_data: file\n                });\n                this.render();\n                this.collection.add(new_model);\n            },\n\n            /** Progress */\n            _eventProgress: function(index, percentage) {\n                var it = this.collection.get(index);\n                it.set(\"percentage\", percentage);\n                this.ui_button.model.set(\n                    \"percentage\",\n                    this._uploadPercentage(percentage, it.get(\"file_size\"))\n                );\n            },\n\n            /** Success */\n            _eventSuccess: function(index, message) {\n                var it = this.collection.get(index);\n                it.set({ percentage: 100, status: \"success\" });\n                this.ui_button.model.set(\n                    \"percentage\",\n                    this._uploadPercentage(100, it.get(\"file_size\"))\n                );\n                this.upload_completed += it.get(\"file_size\") * 100;\n                this.counter.announce--;\n                this.counter.success++;\n                this.render();\n                Galaxy.currHistoryPanel.refreshContents();\n            },\n\n            /** Error */\n            _eventError: function(index, message) {\n                var it = this.collection.get(index);\n                it.set({ percentage: 100, status: \"error\", info: message });\n                this.ui_button.model.set({\n                    percentage: this._uploadPercentage(\n                        100,\n                        it.get(\"file_size\")\n                    ),\n                    status: \"danger\"\n                });\n                this.upload_completed += it.get(\"file_size\") * 100;\n                this.counter.announce--;\n                this.counter.error++;\n                this.render();\n            },\n\n            /** Queue is done */\n            _eventComplete: function() {\n                this.collection.each(function(model) {\n                    model.get(\"status\") == \"queued\" &&\n                        model.set(\"status\", \"init\");\n                });\n                this.counter.running = 0;\n                this.render();\n            },\n\n            /** Remove model from upload list */\n            _eventRemove: function(model) {\n                var status = model.get(\"status\");\n                if (status == \"success\") {\n                    this.counter.success--;\n                } else if (status == \"error\") {\n                    this.counter.error--;\n                } else {\n                    this.counter.announce--;\n                }\n                this.uploadbox.remove(model.id);\n                this.render();\n            },\n\n            //\n            // events triggered by this view\n            //\n\n            /** Show/hide ftp popup */\n            _eventFtp: function() {\n                if (!this.ftp.visible) {\n                    this.ftp.empty();\n                    var self = this;\n                    this.ftp.append(\n                        new UploadFtp({\n                            collection: this.collection,\n                            ftp_upload_site: this.ftp_upload_site,\n                            onadd: function(ftp_file) {\n                                return self.uploadbox.add([\n                                    {\n                                        mode: \"ftp\",\n                                        name: ftp_file.path,\n                                        size: ftp_file.size,\n                                        path: ftp_file.path\n                                    }\n                                ]);\n                            },\n                            onremove: function(model_index) {\n                                self.collection.remove(model_index);\n                            }\n                        }).$el\n                    );\n                    this.ftp.show();\n                } else {\n                    this.ftp.hide();\n                }\n            },\n\n            /** Create a new file */\n            _eventCreate: function() {\n                this.uploadbox.add([\n                    { name: \"New File\", size: 0, mode: \"new\" }\n                ]);\n            },\n\n            /** Start upload process */\n            _eventStart: function() {\n                if (this.counter.announce != 0 && this.counter.running == 0) {\n                    // prepare upload process\n                    var self = this;\n                    this.upload_size = 0;\n                    this.upload_completed = 0;\n                    this.collection.each(function(model) {\n                        if (model.get(\"status\") == \"init\") {\n                            model.set(\"status\", \"queued\");\n                            self.upload_size += model.get(\"file_size\");\n                        }\n                    });\n                    this.ui_button.model.set({\n                        percentage: 0,\n                        status: \"success\"\n                    });\n                    this.counter.running = this.counter.announce;\n                    this.history_id = this.app.currentHistory();\n\n                    // package ftp files separately, and remove them from queue\n                    this._uploadFtp();\n\n                    // queue remaining files\n                    this.uploadbox.start();\n                    this.render();\n                }\n            },\n\n            /** Pause upload process */\n            _eventStop: function() {\n                if (this.counter.running > 0) {\n                    this.ui_button.model.set(\"status\", \"info\");\n                    $(\".upload-top-info\").html(\n                        \"Queue will pause after completing the current file...\"\n                    );\n                    this.uploadbox.stop();\n                }\n            },\n\n            /** Remove all */\n            _eventReset: function() {\n                if (this.counter.running == 0) {\n                    var self = this;\n                    this.collection.reset();\n                    this.counter.reset();\n                    this.uploadbox.reset();\n                    this.select_extension.value(this.options.default_extension);\n                    this.select_genome.value(this.options.default_genome);\n                    this.ui_button.model.set(\"percentage\", 0);\n                    this.render();\n                }\n            },\n\n            /** Update extension for all models */\n            _changeExtension: function(extension, defaults_only) {\n                var self = this;\n                this.collection.each(function(model) {\n                    if (\n                        model.get(\"status\") == \"init\" &&\n                        (model.get(\"extension\") ==\n                            self.options.default_extension ||\n                            !defaults_only)\n                    ) {\n                        model.set(\"extension\", extension);\n                    }\n                });\n            },\n\n            /** Update genome for all models */\n            _changeGenome: function(genome, defaults_only) {\n                var self = this;\n                this.collection.each(function(model) {\n                    if (\n                        model.get(\"status\") == \"init\" &&\n                        (model.get(\"genome\") == self.options.default_genome ||\n                            !defaults_only)\n                    ) {\n                        model.set(\"genome\", genome);\n                    }\n                });\n            },\n\n            /** Package and upload ftp files in a single request */\n            _uploadFtp: function() {\n                var self = this;\n                var list = [];\n                this.collection.each(function(model) {\n                    if (\n                        model.get(\"status\") == \"queued\" &&\n                        model.get(\"file_mode\") == \"ftp\"\n                    ) {\n                        self.uploadbox.remove(model.id);\n                        list.push(model);\n                    }\n                });\n                if (list.length > 0) {\n                    $.uploadpost({\n                        data: this.app.toData(list),\n                        url: this.app.options.nginx_upload_path,\n                        success: function(message) {\n                            _.each(list, function(model) {\n                                self._eventSuccess(model.id);\n                            });\n                        },\n                        error: function(message) {\n                            _.each(list, function(model) {\n                                self._eventError(model.id, message);\n                            });\n                        }\n                    });\n                }\n            },\n\n            /** Calculate percentage of all queued uploads */\n            _uploadPercentage: function(percentage, size) {\n                return (\n                    (this.upload_completed + percentage * size) /\n                    this.upload_size\n                );\n            },\n\n            /** Template */\n            _template: function() {\n                return (\n                    '<div class=\"upload-view-default\">' +\n                    '<div class=\"upload-top\">' +\n                    '<h6 class=\"upload-top-info\"/>' +\n                    \"</div>\" +\n                    '<div class=\"upload-box\">' +\n                    '<div class=\"upload-helper\"><i class=\"fa fa-files-o\"/>Drop files here</div>' +\n                    '<table class=\"upload-table ui-table-striped\" style=\"display: none;\">' +\n                    \"<thead>\" +\n                    \"<tr>\" +\n                    \"<th>Name</th>\" +\n                    \"<th>Size</th>\" +\n                    \"<th>Type</th>\" +\n                    \"<th>Genome</th>\" +\n                    \"<th>Settings</th>\" +\n                    \"<th>Status</th>\" +\n                    \"<th/>\" +\n                    \"</tr>\" +\n                    \"</thead>\" +\n                    \"<tbody/>\" +\n                    \"</table>\" +\n                    \"</div>\" +\n                    '<div class=\"upload-footer\">' +\n                    '<span class=\"upload-footer-title\">Type (set all):</span>' +\n                    '<span class=\"upload-footer-extension\"/>' +\n                    '<span class=\"upload-footer-extension-info upload-icon-button fa fa-search\"/> ' +\n                    '<span class=\"upload-footer-title\">Genome (set all):</span>' +\n                    '<span class=\"upload-footer-genome\"/>' +\n                    \"</div>\" +\n                    '<div class=\"upload-buttons\"/>' +\n                    \"</div>\"\n                );\n            }\n        });\n    }\n);\n"]}