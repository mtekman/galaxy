{"version":3,"sources":["mvc/upload/collection/collection-row.js"],"names":["define","status_classes","init","running","UploadSettings","Popover","Select","success","View","extend","initialize","self","app","error","options","$text","this","$size","$info_text","model","$info_progress","_template","$text_content","$","$symbol","$progress_bar","$percentage","settings","title","container","placement","default_genome","default_extension","select_genome","value","select_extension","set","url_paste","on","e","listenTo","target","val","_refreshPercentage","length","_refreshInfo","_refreshFileSize","remove","collection","attributes","$title","html","render","width","top","_","height","file_name","show","Utils","bytesToString","file_size","$el","$mode","addClass","css","info","hide","file_mode","get","percentage","parseInt","status","_refreshStatus","removeClass","enabled","attr","_showSettings","visible","append","id","_removeRow","indexOf","empty"],"mappings":"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","file":"../../../../scripts/mvc/upload/collection/collection-row.js","sourcesContent":["/** Renders the collection uploader rows */\ndefine(\n    [\n        \"utils/utils\",\n        \"mvc/upload/upload-model\",\n        \"mvc/upload/upload-settings\",\n        \"mvc/ui/ui-popover\",\n        \"mvc/ui/ui-select\"\n    ],\n    function(Utils, UploadModel, UploadSettings, Popover, Select) {\n        return Backbone.View.extend({\n            /** Dictionary of upload states and associated icons */\n            status_classes: {\n                init: \"upload-icon-button fa fa-trash-o\",\n                queued: \"upload-icon fa fa-spinner fa-spin\",\n                running: \"upload-icon fa fa-spinner fa-spin\",\n                success: \"upload-icon-button fa fa-check\",\n                error: \"upload-icon-button fa fa-exclamation-triangle\"\n            },\n\n            initialize: function(app, options) {\n                var self = this;\n                this.app = app;\n                this.model = options.model;\n                this.setElement(this._template(options.model));\n                this.$mode = this.$(\".upload-mode\");\n                this.$title = this.$(\".upload-title-extended\");\n                this.$text = this.$(\".upload-text\");\n                this.$size = this.$(\".upload-size\");\n                this.$info_text = this.$(\".upload-info-text\");\n                this.$info_progress = this.$(\".upload-info-progress\");\n                this.$text_content = this.$(\".upload-text-content\");\n                this.$symbol = this.$(\".upload-symbol\");\n                this.$progress_bar = this.$(\".upload-progress-bar\");\n                this.$percentage = this.$(\".upload-percentage\");\n\n                // append popup to settings icon\n                this.settings = new Popover.View({\n                    title: \"Upload configuration\",\n                    container: this.$(\".upload-settings\"),\n                    placement: \"bottom\"\n                });\n\n                // identify default genome and extension values\n                var default_genome = this.app.select_genome.value();\n                var default_extension = this.app.select_extension.value();\n\n                // handle click event\n                this.$symbol.on(\"click\", function() {\n                    self._removeRow();\n                });\n\n                // handle text editing event\n                this.$text_content.on(\"change input\", function(e) {\n                    self.model.set({\n                        url_paste: $(e.target).val(),\n                        file_size: $(e.target).val().length\n                    });\n                });\n\n                // model events\n                this.listenTo(this.model, \"change:percentage\", function() {\n                    self._refreshPercentage();\n                });\n                this.listenTo(this.model, \"change:status\", function() {\n                    self._refreshStatus();\n                });\n                this.listenTo(this.model, \"change:info\", function() {\n                    self._refreshInfo();\n                });\n                this.listenTo(this.model, \"change:file_size\", function() {\n                    self._refreshFileSize();\n                });\n                this.listenTo(this.model, \"remove\", function() {\n                    self.remove();\n                });\n                this.app.collection.on(\"reset\", function() {\n                    self.remove();\n                });\n            },\n\n            render: function() {\n                var options = this.model.attributes;\n                this.$title.html(_.escape(options.file_name));\n                this.$size.html(Utils.bytesToString(options.file_size));\n                this.$mode\n                    .removeClass()\n                    .addClass(\"upload-mode\")\n                    .addClass(\"text-primary\");\n                if (options.file_mode == \"new\") {\n                    this.$text\n                        .css({\n                            width: this.$el.width() - 16 + \"px\",\n                            top: this.$el.height() - 8 + \"px\"\n                        })\n                        .show();\n                    this.$el.height(\n                        this.$el.height() - 8 + this.$text.height() + 16\n                    );\n                    this.$mode.addClass(\"fa fa-edit\");\n                } else if (options.file_mode == \"local\") {\n                    this.$mode.addClass(\"fa fa-laptop\");\n                } else if (options.file_mode == \"ftp\") {\n                    this.$mode.addClass(\"fa fa-folder-open-o\");\n                }\n            },\n\n            /** Refresh info text */\n            _refreshInfo: function() {\n                var info = this.model.get(\"info\");\n                if (info) {\n                    this.$info_text\n                        .html(\"<strong>Failed: </strong>\" + info)\n                        .show();\n                } else {\n                    this.$info_text.hide();\n                }\n            },\n\n            /** Refresh percentage status */\n            _refreshPercentage: function() {\n                var percentage = parseInt(this.model.get(\"percentage\"));\n                this.$progress_bar.css({ width: percentage + \"%\" });\n                this.$percentage.html(\n                    percentage != 100\n                        ? percentage + \"%\"\n                        : \"Adding to history...\"\n                );\n            },\n\n            /** Refresh status */\n            _refreshStatus: function() {\n                var status = this.model.get(\"status\");\n                this.$symbol\n                    .removeClass()\n                    .addClass(\"upload-symbol\")\n                    .addClass(this.status_classes[status]);\n                this.model.set(\"enabled\", status == \"init\");\n                var enabled = this.model.get(\"enabled\");\n                this.$text_content.attr(\"disabled\", !enabled);\n                if (status == \"success\") {\n                    this.$el.addClass(\"success\");\n                    this.$percentage.html(\"100%\");\n                }\n                if (status == \"error\") {\n                    this.$el.addClass(\"danger\");\n                    this.$info_progress.hide();\n                }\n            },\n\n            /** Refresh file size */\n            _refreshFileSize: function() {\n                this.$size.html(\n                    Utils.bytesToString(this.model.get(\"file_size\"))\n                );\n            },\n\n            /** Remove row */\n            _removeRow: function() {\n                if (\n                    [\"init\", \"success\", \"error\"].indexOf(\n                        this.model.get(\"status\")\n                    ) !== -1\n                ) {\n                    this.app.collection.remove(this.model);\n                }\n            },\n\n            /** Attach file info popup */\n            _showSettings: function() {\n                if (!this.settings.visible) {\n                    this.settings.empty();\n                    this.settings.append(new UploadSettings(this).$el);\n                    this.settings.show();\n                } else {\n                    this.settings.hide();\n                }\n            },\n\n            /** View template */\n            _template: function(options) {\n                return (\n                    '<tr id=\"upload-row-' +\n                    options.id +\n                    '\" class=\"upload-row\">' +\n                    \"<td>\" +\n                    '<div class=\"upload-text-column\">' +\n                    '<div class=\"upload-mode\"/>' +\n                    '<div class=\"upload-title-extended\"/>' +\n                    '<div class=\"upload-text\">' +\n                    '<div class=\"upload-text-info\">You can tell Galaxy to download data from web by entering URL in this box (one per line). You can also directly paste the contents of a file.</div>' +\n                    '<textarea class=\"upload-text-content form-control\"/>' +\n                    \"</div>\" +\n                    \"</div>\" +\n                    \"</td>\" +\n                    \"<td>\" +\n                    '<div class=\"upload-size\"/>' +\n                    \"</td>\" +\n                    \"<td>\" +\n                    '<div class=\"upload-info\">' +\n                    '<div class=\"upload-info-text\"/>' +\n                    '<div class=\"upload-info-progress progress\">' +\n                    '<div class=\"upload-progress-bar progress-bar progress-bar-success\"/>' +\n                    '<div class=\"upload-percentage\">0%</div>' +\n                    \"</div>\" +\n                    \"</div>\" +\n                    \"</td>\" +\n                    \"<td>\" +\n                    '<div class=\"upload-symbol ' +\n                    this.status_classes.init +\n                    '\"/>' +\n                    \"</td>\" +\n                    \"</tr>\"\n                );\n            }\n        });\n    }\n);\n"]}