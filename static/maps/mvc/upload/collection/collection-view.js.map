{"version":3,"sources":["mvc/upload/collection/collection-view.js"],"names":["define","upload_size","collection","counter","success","error","running","reset","UploadFtp","UploadExtension","Popover","Select","initialize","LIST_COLLECTION_CREATOR","Backbone","View","app","list_genomes","setElement","UploadModel","_template","id","title","onclick","self","uploadbox","icon","announce","this","_eventFtp","options","list_extensions","btnCreate","Ui","Button","ftp_upload_site","currentFtp","btnLocal","btnStart","select","btnFtp","btnBuild","_eventBuild","btnStop","_eventCreate","btnReset","_eventReset","btnClose","modal","each","_eventStop","_eventProgress","_eventSuccess","hide","_","_eventComplete","ondragover","ondragleave","button","$","prepend","$el","url","nginx_upload_path","select_extension","index","_eventAnnounce","file","data","ext","composite_files","get","progress","percentage","collectionType","message","select_collection","container","_eventError","text","onchange","updateCollectionType","addClass","removeClass","placement","select_genome","css","filter","default_extension","updateGenome","genome","updateExtension","extension","_eventRemove","_updateScreen","new_model","file_name","e","add","upload_row","UploadRow","model","render","on","preventDefault","value","default_genome","hids","set","ui_button","Model","status","name","file_size","size","upload_completed","mode","path","append","allHids","forEach","_uploadPercentage","it","Galaxy","currHistoryPanel","refreshContents","info","visible","ftp","onadd","ftp_file","onremove","models","upload","push","apply","map","hid","getByHid","selection","constructor","historyId","buildCollection","_eventStart","remove","empty","show","defaults_only","currentHistory","start","enable_reset","enable_start","enable_build","enable_sources","show_table","compatible","html"],"mappings":"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","file":"../../../../scripts/mvc/upload/collection/collection-view.js","sourcesContent":["/** Renders contents of the collection uploader */\ndefine(\n    [\n        \"utils/utils\",\n        \"mvc/upload/upload-model\",\n        \"mvc/upload/collection/collection-row\",\n        \"mvc/upload/upload-ftp\",\n        \"mvc/upload/upload-extension\",\n        \"mvc/ui/ui-popover\",\n        \"mvc/ui/ui-select\",\n        \"mvc/ui/ui-misc\",\n        \"mvc/collection/list-collection-creator\",\n        \"utils/uploadbox\"\n    ],\n    function(\n        Utils,\n        UploadModel,\n        UploadRow,\n        UploadFtp,\n        UploadExtension,\n        Popover,\n        Select,\n        Ui,\n        LIST_COLLECTION_CREATOR\n    ) {\n        return Backbone.View.extend({\n            // current upload size in bytes\n            upload_size: 0,\n\n            // contains upload row models\n            collection: new UploadModel.Collection(),\n\n            // keeps track of the current uploader state\n            counter: {\n                announce: 0,\n                success: 0,\n                error: 0,\n                running: 0,\n                reset: function() {\n                    this.announce = this.success = this.error = this.running = 0;\n                }\n            },\n\n            initialize: function(app) {\n                var self = this;\n                this.app = app;\n                this.options = app.options;\n                this.list_extensions = app.list_extensions;\n                this.list_genomes = app.list_genomes;\n                this.ui_button = app.ui_button;\n                this.ftp_upload_site = app.currentFtp();\n                this.setElement(this._template());\n\n                // append buttons to dom\n                this.btnLocal = new Ui.Button({\n                    id: \"btn-local\",\n                    title: \"Choose local files\",\n                    onclick: function() {\n                        self.uploadbox.select();\n                    },\n                    icon: \"fa fa-laptop\"\n                });\n                this.btnFtp = new Ui.Button({\n                    id: \"btn-ftp\",\n                    title: \"Choose FTP files\",\n                    onclick: function() {\n                        self._eventFtp();\n                    },\n                    icon: \"fa fa-folder-open-o\"\n                });\n                this.btnCreate = new Ui.Button({\n                    id: \"btn-new\",\n                    title: \"Paste/Fetch data\",\n                    onclick: function() {\n                        self._eventCreate();\n                    },\n                    icon: \"fa fa-edit\"\n                });\n                this.btnStart = new Ui.Button({\n                    id: \"btn-start\",\n                    title: \"Start\",\n                    onclick: function() {\n                        self._eventStart();\n                    }\n                });\n                this.btnBuild = new Ui.Button({\n                    id: \"btn-build\",\n                    title: \"Build\",\n                    onclick: function() {\n                        self._eventBuild();\n                    }\n                });\n                this.btnStop = new Ui.Button({\n                    id: \"btn-stop\",\n                    title: \"Pause\",\n                    onclick: function() {\n                        self._eventStop();\n                    }\n                });\n                this.btnReset = new Ui.Button({\n                    id: \"btn-reset\",\n                    title: \"Reset\",\n                    onclick: function() {\n                        self._eventReset();\n                    }\n                });\n                this.btnClose = new Ui.Button({\n                    id: \"btn-close\",\n                    title: \"Close\",\n                    onclick: function() {\n                        self.app.modal.hide();\n                    }\n                });\n                _.each(\n                    [\n                        this.btnLocal,\n                        this.btnFtp,\n                        this.btnCreate,\n                        this.btnStop,\n                        this.btnReset,\n                        this.btnStart,\n                        this.btnBuild,\n                        this.btnClose\n                    ],\n                    function(button) {\n                        self.$(\".upload-buttons\").prepend(button.$el);\n                    }\n                );\n\n                // file upload\n                this.uploadbox = this.$(\".upload-box\").uploadbox({\n                    url: this.app.options.nginx_upload_path,\n                    announce: function(index, file) {\n                        self._eventAnnounce(index, file);\n                    },\n                    initialize: function(index) {\n                        return self.app.toData(\n                            [self.collection.get(index)],\n                            self.history_id\n                        );\n                    },\n                    progress: function(index, percentage) {\n                        self._eventProgress(index, percentage);\n                    },\n                    success: function(index, message) {\n                        self._eventSuccess(index, message);\n                    },\n                    error: function(index, message) {\n                        self._eventError(index, message);\n                    },\n                    complete: function() {\n                        self._eventComplete();\n                    },\n                    ondragover: function() {\n                        self.$(\".upload-box\").addClass(\"highlight\");\n                    },\n                    ondragleave: function() {\n                        self.$(\".upload-box\").removeClass(\"highlight\");\n                    }\n                });\n\n                // add ftp file viewer\n                this.ftp = new Popover.View({\n                    title: \"FTP files\",\n                    container: this.btnFtp.$el\n                });\n\n                // select extension\n                this.select_extension = new Select.View({\n                    css: \"upload-footer-selection-compressed\",\n                    container: this.$(\".upload-footer-extension\"),\n                    data: _.filter(this.list_extensions, function(ext) {\n                        return !ext.composite_files;\n                    }),\n                    value: this.options.default_extension,\n                    onchange: function(extension) {\n                        self.updateExtension(extension);\n                    }\n                });\n\n                this.collectionType = \"list\";\n                this.select_collection = new Select.View({\n                    css: \"upload-footer-selection-compressed\",\n                    container: this.$(\".upload-footer-collection-type\"),\n                    data: [\n                        { id: \"list\", text: \"List\" },\n                        { id: \"paired\", text: \"Paired\" },\n                        { id: \"list:paired\", text: \"List of Pairs\" }\n                    ],\n                    value: \"list\",\n                    onchange: function(collectionType) {\n                        self.updateCollectionType(collectionType);\n                    }\n                });\n\n                // handle extension info popover\n                this.$(\".upload-footer-extension-info\")\n                    .on(\"click\", function(e) {\n                        new UploadExtension({\n                            $el: $(e.target),\n                            title: self.select_extension.text(),\n                            extension: self.select_extension.value(),\n                            list: self.list_extensions,\n                            placement: \"top\"\n                        });\n                    })\n                    .on(\"mousedown\", function(e) {\n                        e.preventDefault();\n                    });\n\n                // genome extension\n                this.select_genome = new Select.View({\n                    css: \"upload-footer-selection\",\n                    container: this.$(\".upload-footer-genome\"),\n                    data: this.list_genomes,\n                    value: this.options.default_genome,\n                    onchange: function(genome) {\n                        self.updateGenome(genome);\n                    }\n                });\n\n                // events\n                this.collection.on(\"remove\", function(model) {\n                    self._eventRemove(model);\n                });\n                this._updateScreen();\n            },\n\n            /** A new file has been dropped/selected through the uploadbox plugin */\n            _eventAnnounce: function(index, file) {\n                this.counter.announce++;\n                var new_model = new UploadModel.Model({\n                    id: index,\n                    file_name: file.name,\n                    file_size: file.size,\n                    file_mode: file.mode || \"local\",\n                    file_path: file.path,\n                    file_data: file,\n                    extension: this.select_extension.value(),\n                    genome: this.select_genome.value()\n                });\n                this.collection.add(new_model);\n                var upload_row = new UploadRow(this, { model: new_model });\n                this.$(\".upload-table > tbody:first\").append(upload_row.$el);\n                this._updateScreen();\n                upload_row.render();\n            },\n\n            /** Progress */\n            _eventProgress: function(index, percentage) {\n                var it = this.collection.get(index);\n                it.set(\"percentage\", percentage);\n                this.ui_button.model.set(\n                    \"percentage\",\n                    this._uploadPercentage(percentage, it.get(\"file_size\"))\n                );\n            },\n\n            /** Success */\n            _eventSuccess: function(index, message) {\n                // var hdaId = message[\"outputs\"][0][\"id\"];\n                var hids = _.pluck(message[\"outputs\"], \"hid\");\n                var it = this.collection.get(index);\n                it.set({ percentage: 100, status: \"success\", hids: hids });\n                this.ui_button.model.set(\n                    \"percentage\",\n                    this._uploadPercentage(100, it.get(\"file_size\"))\n                );\n                this.upload_completed += it.get(\"file_size\") * 100;\n                this.counter.announce--;\n                this.counter.success++;\n                this._updateScreen();\n                Galaxy.currHistoryPanel.refreshContents();\n            },\n\n            /** Error */\n            _eventError: function(index, message) {\n                var it = this.collection.get(index);\n                it.set({ percentage: 100, status: \"error\", info: message });\n                this.ui_button.model.set({\n                    percentage: this._uploadPercentage(\n                        100,\n                        it.get(\"file_size\")\n                    ),\n                    status: \"danger\"\n                });\n                this.upload_completed += it.get(\"file_size\") * 100;\n                this.counter.announce--;\n                this.counter.error++;\n                this._updateScreen();\n            },\n\n            /** Queue is done */\n            _eventComplete: function() {\n                this.collection.each(function(model) {\n                    model.get(\"status\") == \"queued\" &&\n                        model.set(\"status\", \"init\");\n                });\n                this.counter.running = 0;\n                this._updateScreen();\n            },\n\n            _eventBuild: function() {\n                var allHids = [];\n                _.forEach(this.collection.models, function(upload) {\n                    allHids.push.apply(allHids, upload.get(\"hids\"));\n                });\n                var models = _.map(allHids, function(hid) {\n                    return Galaxy.currHistoryPanel.collection.getByHid(hid);\n                });\n                var selection = new Galaxy.currHistoryPanel.collection\n                    .constructor(models);\n                // I'm building the selection wrong because I need to set this historyId directly.\n                selection.historyId =\n                    Galaxy.currHistoryPanel.collection.historyId;\n                Galaxy.currHistoryPanel.buildCollection(\n                    this.collectionType,\n                    selection,\n                    true\n                );\n                this.counter.running = 0;\n                this._updateScreen();\n                this._eventReset();\n                this.app.modal.hide();\n            },\n\n            /** Remove model from upload list */\n            _eventRemove: function(model) {\n                var status = model.get(\"status\");\n                if (status == \"success\") {\n                    this.counter.success--;\n                } else if (status == \"error\") {\n                    this.counter.error--;\n                } else {\n                    this.counter.announce--;\n                }\n                this.uploadbox.remove(model.id);\n                this._updateScreen();\n            },\n\n            //\n            // events triggered by this view\n            //\n\n            /** Show/hide ftp popup */\n            _eventFtp: function() {\n                if (!this.ftp.visible) {\n                    this.ftp.empty();\n                    var self = this;\n                    this.ftp.append(\n                        new UploadFtp({\n                            collection: this.collection,\n                            ftp_upload_site: this.ftp_upload_site,\n                            onadd: function(ftp_file) {\n                                return self.uploadbox.add([\n                                    {\n                                        mode: \"ftp\",\n                                        name: ftp_file.path,\n                                        size: ftp_file.size,\n                                        path: ftp_file.path\n                                    }\n                                ]);\n                            },\n                            onremove: function(model_index) {\n                                self.collection.remove(model_index);\n                            }\n                        }).$el\n                    );\n                    this.ftp.show();\n                } else {\n                    this.ftp.hide();\n                }\n            },\n\n            /** Create a new file */\n            _eventCreate: function() {\n                this.uploadbox.add([\n                    { name: \"New File\", size: 0, mode: \"new\" }\n                ]);\n            },\n\n            /** Start upload process */\n            _eventStart: function() {\n                if (this.counter.announce == 0 || this.counter.running > 0) {\n                    return;\n                }\n                var self = this;\n                this.upload_size = 0;\n                this.upload_completed = 0;\n                this.collection.each(function(model) {\n                    if (model.get(\"status\") == \"init\") {\n                        model.set(\"status\", \"queued\");\n                        self.upload_size += model.get(\"file_size\");\n                    }\n                });\n                this.ui_button.model.set({ percentage: 0, status: \"success\" });\n                this.counter.running = this.counter.announce;\n                this.history_id = this.app.currentHistory();\n                this.uploadbox.start();\n                this._updateScreen();\n            },\n\n            /** Pause upload process */\n            _eventStop: function() {\n                if (this.counter.running > 0) {\n                    this.ui_button.model.set(\"status\", \"info\");\n                    $(\".upload-top-info\").html(\n                        \"Queue will pause after completing the current file...\"\n                    );\n                    this.uploadbox.stop();\n                }\n            },\n\n            /** Remove all */\n            _eventReset: function() {\n                if (this.counter.running == 0) {\n                    this.collection.reset();\n                    this.counter.reset();\n                    this.uploadbox.reset();\n                    this.select_extension.value(this.options.default_extension);\n                    this.select_genome.value(this.options.default_genome);\n                    this.ui_button.model.set(\"percentage\", 0);\n                    this._updateScreen();\n                }\n            },\n\n            /** Update extension for all models */\n            updateExtension: function(extension, defaults_only) {\n                var self = this;\n                this.collection.each(function(model) {\n                    if (\n                        model.get(\"status\") == \"init\" &&\n                        (model.get(\"extension\") ==\n                            self.options.default_extension ||\n                            !defaults_only)\n                    ) {\n                        model.set(\"extension\", extension);\n                    }\n                });\n            },\n\n            /** Update collection type */\n            updateCollectionType: function(collectionType) {\n                var self = this;\n                this.collectionType = collectionType;\n            },\n\n            /** Update genome for all models */\n            updateGenome: function(genome, defaults_only) {\n                var self = this;\n                this.collection.each(function(model) {\n                    if (\n                        model.get(\"status\") == \"init\" &&\n                        (model.get(\"genome\") == self.options.default_genome ||\n                            !defaults_only)\n                    ) {\n                        model.set(\"genome\", genome);\n                    }\n                });\n            },\n\n            /** Set screen */\n            _updateScreen: function() {\n                var message = \"\";\n                if (this.counter.announce == 0) {\n                    if (this.uploadbox.compatible()) {\n                        message = \"&nbsp;\";\n                    } else {\n                        message =\n                            \"Browser does not support Drag & Drop. Try Firefox 4+, Chrome 7+, IE 10+, Opera 12+ or Safari 6+.\";\n                    }\n                } else {\n                    if (this.counter.running == 0) {\n                        message =\n                            \"You added \" +\n                            this.counter.announce +\n                            \" file(s) to the queue. Add more files or click 'Start' to proceed.\";\n                    } else {\n                        message =\n                            \"Please wait...\" +\n                            this.counter.announce +\n                            \" out of \" +\n                            this.counter.running +\n                            \" remaining.\";\n                    }\n                }\n                this.$(\".upload-top-info\").html(message);\n                var enable_reset =\n                    this.counter.running == 0 &&\n                    this.counter.announce +\n                        this.counter.success +\n                        this.counter.error >\n                        0;\n                var enable_start =\n                    this.counter.running == 0 && this.counter.announce > 0;\n                var enable_build =\n                    this.counter.running == 0 &&\n                    this.counter.announce == 0 &&\n                    this.counter.success > 0 &&\n                    this.counter.error == 0;\n                var enable_sources = this.counter.running == 0;\n                var show_table =\n                    this.counter.announce +\n                        this.counter.success +\n                        this.counter.error >\n                    0;\n                this.btnReset[enable_reset ? \"enable\" : \"disable\"]();\n                this.btnStart[enable_start ? \"enable\" : \"disable\"]();\n                this.btnStart.$el[enable_start ? \"addClass\" : \"removeClass\"](\n                    \"btn-primary\"\n                );\n                this.btnBuild[enable_build ? \"enable\" : \"disable\"]();\n                this.btnBuild.$el[enable_build ? \"addClass\" : \"removeClass\"](\n                    \"btn-primary\"\n                );\n                this.btnStop[this.counter.running > 0 ? \"enable\" : \"disable\"]();\n                this.btnLocal[enable_sources ? \"enable\" : \"disable\"]();\n                this.btnFtp[enable_sources ? \"enable\" : \"disable\"]();\n                this.btnCreate[enable_sources ? \"enable\" : \"disable\"]();\n                this.btnFtp.$el[this.ftp_upload_site ? \"show\" : \"hide\"]();\n                this.$(\".upload-table\")[show_table ? \"show\" : \"hide\"]();\n                this.$(\".upload-helper\")[show_table ? \"hide\" : \"show\"]();\n            },\n\n            /** Calculate percentage of all queued uploads */\n            _uploadPercentage: function(percentage, size) {\n                return (\n                    (this.upload_completed + percentage * size) /\n                    this.upload_size\n                );\n            },\n\n            /** Template */\n            _template: function() {\n                return (\n                    '<div class=\"upload-view-default\">' +\n                    '<div class=\"upload-top\">' +\n                    '<h6 class=\"upload-top-info\"/>' +\n                    \"</div>\" +\n                    '<div class=\"upload-box\">' +\n                    '<div class=\"upload-helper\"><i class=\"fa fa-files-o\"/>Drop files here</div>' +\n                    '<table class=\"upload-table ui-table-striped\" style=\"display: none;\">' +\n                    \"<thead>\" +\n                    \"<tr>\" +\n                    \"<th>Name</th>\" +\n                    \"<th>Size</th>\" +\n                    \"<th>Status</th>\" +\n                    \"<th/>\" +\n                    \"</tr>\" +\n                    \"</thead>\" +\n                    \"<tbody/>\" +\n                    \"</table>\" +\n                    \"</div>\" +\n                    '<div class=\"upload-footer\">' +\n                    '<span class=\"upload-footer-title-compressed\">Collection Type:</span>' +\n                    '<span class=\"upload-footer-collection-type\"/>' +\n                    '<span class=\"upload-footer-title-compressed\">File Type:</span>' +\n                    '<span class=\"upload-footer-extension\"/>' +\n                    '<span class=\"upload-footer-extension-info upload-icon-button fa fa-search\"/> ' +\n                    '<span class=\"upload-footer-title-compressed\">Genome (set all):</span>' +\n                    '<span class=\"upload-footer-genome\"/>' +\n                    \"</div>\" +\n                    '<div class=\"upload-buttons\"/>' +\n                    \"</div>\"\n                );\n            }\n        });\n    }\n);\n"]}