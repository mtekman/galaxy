{"version":3,"sources":["mvc/upload/upload-ftp.js"],"names":["define","Utils","Backbone","View","extend","initialize","options","Model","self","class_add","cls","class_remove","class_partial","help_enabled","help_text","ftp_upload_site","collection","onchange","onadd","onremove","set","this","setElement","_template","$content","$","$wait","$help","$number","$disk","$body","$warning","$select","render","show","hide","ajax","url","method","root","success","model","ftp_files","_index","_renderTable","get","empty","length","size","_","each","_renderRow","ftp_file","html","bytesToString","addClass","_refresh","on","$icon","find","append","attributes","$it","model_index","ftp_index","path","undefined","_switch","_all","hasClass","id","add","index","new_index","removeClass","counts","reduce","element","_templateRow","memo","rows","escape","ctime"],"mappings":"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","file":"../../../scripts/mvc/upload/upload-ftp.js","sourcesContent":["/** This renders the content of the ftp popup **/\ndefine([\"utils/utils\"], function(Utils) {\n    return Backbone.View.extend({\n        initialize: function(options) {\n            var self = this;\n            this.model = new Backbone.Model({\n                cls: \"upload-ftp\",\n                class_add: \"upload-icon-button fa fa-square-o\",\n                class_remove: \"upload-icon-button fa fa-check-square-o\",\n                class_partial: \"upload-icon-button fa fa-minus-square-o\",\n                help_enabled: true,\n                help_text:\n                    \"This Galaxy server allows you to upload files via FTP. To upload some files, log in to the FTP server at <strong>\" +\n                    options.ftp_upload_site +\n                    \"</strong> using your Galaxy credentials.\",\n                collection: null,\n                onchange: function() {},\n                onadd: function() {},\n                onremove: function() {}\n            }).set(options);\n            this.collection = this.model.get(\"collection\");\n            this.setElement(this._template());\n            this.$content = this.$(\".upload-ftp-content\");\n            this.$wait = this.$(\".upload-ftp-wait\");\n            this.$help = this.$(\".upload-ftp-help\");\n            this.$number = this.$(\".upload-ftp-number\");\n            this.$disk = this.$(\".upload-ftp-disk\");\n            this.$body = this.$(\".upload-ftp-body\");\n            this.$warning = this.$(\".upload-ftp-warning\");\n            this.$select = this.$(\".upload-ftp-select-all\");\n            this.render();\n        },\n\n        render: function() {\n            var self = this;\n            this.$wait.show();\n            this.$content.hide();\n            this.$warning.hide();\n            this.$help.hide();\n            $.ajax({\n                url: Galaxy.root + \"api/remote_files\",\n                method: \"GET\",\n                success: function(ftp_files) {\n                    self.model.set(\"ftp_files\", ftp_files);\n                    self._index();\n                    self._renderTable();\n                },\n                error: function() {\n                    self._renderTable();\n                }\n            });\n        },\n\n        /** Fill table with ftp entries */\n        _renderTable: function() {\n            var self = this;\n            var ftp_files = this.model.get(\"ftp_files\");\n            this.rows = [];\n            if (ftp_files && ftp_files.length > 0) {\n                this.$body.empty();\n                var size = 0;\n                _.each(ftp_files, function(ftp_file) {\n                    self.rows.push(self._renderRow(ftp_file));\n                    size += ftp_file.size;\n                });\n                this.$number.html(ftp_files.length + \" files\");\n                this.$disk.html(Utils.bytesToString(size, true));\n                if (this.collection) {\n                    this.$(\"._has_collection\").show();\n                    this.$select\n                        .addClass(this.model.get(\"class_add\"))\n                        .off()\n                        .on(\"click\", function() {\n                            self._all();\n                        });\n                    this._refresh();\n                }\n                this.$content.show();\n            } else {\n                this.$warning.show();\n            }\n            this.model.get(\"help_enabled\") && this.$help.show();\n            this.$wait.hide();\n        },\n\n        /** Add row */\n        _renderRow: function(ftp_file) {\n            var self = this;\n            var options = this.model.attributes;\n            var $it = $(this._templateRow(ftp_file));\n            var $icon = $it.find(\".icon\");\n            this.$body.append($it);\n            if (this.collection) {\n                var model_index = this.ftp_index[ftp_file.path];\n                $icon.addClass(\n                    model_index === undefined\n                        ? options.class_add\n                        : options.class_remove\n                );\n                $it.on(\"click\", function() {\n                    self._switch($icon, ftp_file);\n                    self._refresh();\n                });\n            } else {\n                $it.on(\"click\", function() {\n                    options.onchange(ftp_file);\n                });\n            }\n            return $icon;\n        },\n\n        /** Create ftp index */\n        _index: function() {\n            var self = this;\n            this.ftp_index = {};\n            this.collection &&\n                this.collection.each(function(model) {\n                    if (model.get(\"file_mode\") == \"ftp\") {\n                        self.ftp_index[model.get(\"file_path\")] = model.id;\n                    }\n                });\n        },\n\n        /** Select all event handler */\n        _all: function() {\n            var options = this.model.attributes;\n            var ftp_files = this.model.get(\"ftp_files\");\n            var add = this.$select.hasClass(options.class_add);\n            for (var index in ftp_files) {\n                var ftp_file = ftp_files[index];\n                var model_index = this.ftp_index[ftp_file.path];\n                if (\n                    (model_index === undefined && add) ||\n                    (model_index !== undefined && !add)\n                ) {\n                    this._switch(this.rows[index], ftp_file);\n                }\n            }\n            this._refresh();\n        },\n\n        /** Handle collection changes */\n        _switch: function($icon, ftp_file) {\n            $icon.removeClass();\n            var options = this.model.attributes;\n            var model_index = this.ftp_index[ftp_file.path];\n            if (model_index === undefined) {\n                var new_index = options.onadd(ftp_file);\n                $icon.addClass(options.class_remove);\n                this.ftp_index[ftp_file.path] = new_index;\n            } else {\n                options.onremove(model_index);\n                $icon.addClass(options.class_add);\n                this.ftp_index[ftp_file.path] = undefined;\n            }\n        },\n\n        /** Refresh select all button state */\n        _refresh: function() {\n            var counts = _.reduce(\n                this.ftp_index,\n                function(memo, element) {\n                    element !== undefined && memo++;\n                    return memo;\n                },\n                0\n            );\n            this.$select.removeClass();\n            if (counts == 0) {\n                this.$select.addClass(this.model.get(\"class_add\"));\n            } else {\n                this.$select.addClass(\n                    counts == this.rows.length\n                        ? this.model.get(\"class_remove\")\n                        : this.model.get(\"class_partial\")\n                );\n            }\n        },\n\n        /** Template of row */\n        _templateRow: function(options) {\n            return (\n                '<tr class=\"upload-ftp-row\">' +\n                '<td class=\"_has_collection\" style=\"display: none;\"><div class=\"icon\"/></td>' +\n                '<td class=\"ftp-name\">' +\n                _.escape(options.path) +\n                \"</td>\" +\n                '<td class=\"ftp-size\">' +\n                Utils.bytesToString(options.size) +\n                \"</td>\" +\n                '<td class=\"ftp-time\">' +\n                options.ctime +\n                \"</td>\" +\n                \"</tr>\"\n            );\n        },\n\n        /** Template of main view */\n        _template: function() {\n            return (\n                '<div class=\"' +\n                this.model.get(\"cls\") +\n                '\">' +\n                '<div class=\"upload-ftp-wait fa fa-spinner fa-spin\"/>' +\n                '<div class=\"upload-ftp-help\">' +\n                this.model.get(\"help_text\") +\n                \"</div>\" +\n                '<div class=\"upload-ftp-content\">' +\n                '<span style=\"whitespace: nowrap; float: left;\">Available files: </span>' +\n                '<span style=\"whitespace: nowrap; float: right;\">' +\n                '<span class=\"upload-icon fa fa-file-text-o\"/>' +\n                '<span class=\"upload-ftp-number\"/>&nbsp;&nbsp;' +\n                '<span class=\"upload-icon fa fa-hdd-o\"/>' +\n                '<span class=\"upload-ftp-disk\"/>' +\n                \"</span>\" +\n                '<table class=\"grid\" style=\"float: left;\">' +\n                \"<thead>\" +\n                \"<tr>\" +\n                '<th class=\"_has_collection\" style=\"display: none;\"><div class=\"upload-ftp-select-all\"></th>' +\n                \"<th>Name</th>\" +\n                \"<th>Size</th>\" +\n                \"<th>Created</th>\" +\n                \"</tr>\" +\n                \"</thead>\" +\n                '<tbody class=\"upload-ftp-body\"/>' +\n                \"</table>\" +\n                \"</div>\" +\n                '<div class=\"upload-ftp-warning warningmessage\">' +\n                \"Your FTP directory does not contain any files.\" +\n                \"</div>\"\n            );\n            (\"<div>\");\n        }\n    });\n});\n"]}