{"version":3,"sources":["mvc/upload/composite/composite-row.js"],"names":["define","status_classes","init","ready","running","error","UploadSettings","UploadFtp","Popover","Ui","Select","Backbone","View","extend","initialize","self","app","options","success","setElement","$source","$text_content","this","$info_text","$info_progress","model","$file_name","_template","$file_desc","$","$file_size","$progress_bar","$percentage","uploadinput","$el","ondragover","ondragleave","removeClass","get","file_data","files","file_name","file_mode","onchange","length","reset","name","file_size","size","button_menu","mode","_refreshReady","ftp_upload_site","ButtonMenu","icon","title","_showFtp","addMenu","dialog","onclick","container","placement","ftp","find","url_paste","settings","$settings","on","e","set","target","val","listenTo","_refreshInfo","_showSettings","_refreshFileName","preventDefault","_refreshFileSize","remove","collection","attr","html","Utils","bytesToString","$status","render","id","_","escape","each","_refreshMode","addClass","top","apply","_refreshPercentage","height","percentage","css","width","$text","hide","info","status","parseInt","show","offsetHeight","_refreshStatus","visible","append","ftp_file","file_path","empty","path"],"mappings":"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","file":"../../../../scripts/mvc/upload/composite/composite-row.js","sourcesContent":["/** Renders the composite upload row view */\ndefine(\n    [\n        \"utils/utils\",\n        \"mvc/upload/upload-settings\",\n        \"mvc/upload/upload-ftp\",\n        \"mvc/ui/ui-popover\",\n        \"mvc/ui/ui-misc\",\n        \"mvc/ui/ui-select\",\n        \"utils/uploadbox\"\n    ],\n    function(Utils, UploadSettings, UploadFtp, Popover, Ui, Select) {\n        return Backbone.View.extend({\n            /** Dictionary of upload states and associated icons */\n            status_classes: {\n                init: \"upload-mode fa fa-exclamation text-primary\",\n                ready: \"upload-mode fa fa-check text-success\",\n                running: \"upload-mode fa fa-spinner fa-spin\",\n                success: \"upload-mode fa fa-check\",\n                error: \"upload-mode fa fa-exclamation-triangle\"\n            },\n\n            initialize: function(app, options) {\n                var self = this;\n                this.app = app;\n                this.model = options.model;\n                this.setElement(this._template());\n                this.$source = this.$(\".upload-source\");\n                this.$settings = this.$(\".upload-settings\");\n                this.$status = this.$(\".upload-status\");\n                this.$text = this.$(\".upload-text\");\n                this.$text_content = this.$(\".upload-text-content\");\n                this.$info_text = this.$(\".upload-info-text\");\n                this.$info_progress = this.$(\".upload-info-progress\");\n                this.$file_name = this.$(\".upload-file-name\");\n                this.$file_desc = this.$(\".upload-file-desc\");\n                this.$file_size = this.$(\".upload-file-size\");\n                this.$progress_bar = this.$(\".upload-progress-bar\");\n                this.$percentage = this.$(\".upload-percentage\");\n\n                // build upload functions\n                this.uploadinput = this.$el.uploadinput({\n                    ondragover: function() {\n                        self.model.get(\"enabled\") &&\n                            self.$el.addClass(\"warning\");\n                    },\n                    ondragleave: function() {\n                        self.$el.removeClass(\"warning\");\n                    },\n                    onchange: function(files) {\n                        if (\n                            self.model.get(\"status\") != \"running\" &&\n                            files &&\n                            files.length > 0\n                        ) {\n                            self.model.reset({\n                                file_data: files[0],\n                                file_name: files[0].name,\n                                file_size: files[0].size,\n                                file_mode: files[0].mode || \"local\"\n                            });\n                            self._refreshReady();\n                        }\n                    }\n                });\n\n                // source selection popup\n                this.button_menu = new Ui.ButtonMenu({\n                    icon: \"fa-caret-down\",\n                    title: \"Select\",\n                    pull: \"left\"\n                });\n                this.$source.append(this.button_menu.$el);\n                this.button_menu.addMenu({\n                    icon: \"fa-laptop\",\n                    title: \"Choose local file\",\n                    onclick: function() {\n                        self.uploadinput.dialog();\n                    }\n                });\n                if (this.app.ftp_upload_site) {\n                    this.button_menu.addMenu({\n                        icon: \"fa-folder-open-o\",\n                        title: \"Choose FTP file\",\n                        onclick: function() {\n                            self._showFtp();\n                        }\n                    });\n                }\n                this.button_menu.addMenu({\n                    icon: \"fa-edit\",\n                    title: \"Paste/Fetch data\",\n                    onclick: function() {\n                        self.model.reset({\n                            file_mode: \"new\",\n                            file_name: \"New File\"\n                        });\n                    }\n                });\n\n                // add ftp file viewer\n                this.ftp = new Popover.View({\n                    title: \"Choose FTP file:\",\n                    container: this.$source.find(\".ui-button-menu\"),\n                    placement: \"right\"\n                });\n\n                // append popup to settings icon\n                this.settings = new Popover.View({\n                    title: \"Upload configuration\",\n                    container: this.$settings,\n                    placement: \"bottom\"\n                });\n\n                // handle text editing event\n                this.$text_content.on(\"change input\", function(e) {\n                    self.model.set({\n                        url_paste: $(e.target).val(),\n                        file_size: $(e.target).val().length\n                    });\n                    self._refreshReady();\n                });\n\n                // handle settings popover\n                this.$settings\n                    .on(\"click\", function(e) {\n                        self._showSettings();\n                    })\n                    .on(\"mousedown\", function(e) {\n                        e.preventDefault();\n                    });\n\n                // model events\n                this.listenTo(this.model, \"change:percentage\", function() {\n                    self._refreshPercentage();\n                });\n                this.listenTo(this.model, \"change:status\", function() {\n                    self._refreshStatus();\n                });\n                this.listenTo(this.model, \"change:info\", function() {\n                    self._refreshInfo();\n                });\n                this.listenTo(this.model, \"change:file_name\", function() {\n                    self._refreshFileName();\n                });\n                this.listenTo(this.model, \"change:file_mode\", function() {\n                    self._refreshMode();\n                });\n                this.listenTo(this.model, \"change:file_size\", function() {\n                    self._refreshFileSize();\n                });\n                this.listenTo(this.model, \"remove\", function() {\n                    self.remove();\n                });\n                this.app.collection.on(\"reset\", function() {\n                    self.remove();\n                });\n            },\n\n            render: function() {\n                this.$el.attr(\"id\", \"upload-row-\" + this.model.id);\n                this.$file_name.html(\n                    _.escape(this.model.get(\"file_name\") || \"-\")\n                );\n                this.$file_desc.html(\n                    this.model.get(\"file_desc\") || \"Unavailable\"\n                );\n                this.$file_size.html(\n                    Utils.bytesToString(this.model.get(\"file_size\"))\n                );\n                this.$status.removeClass().addClass(this.status_classes.init);\n            },\n\n            /** Remove view */\n            remove: function() {\n                // call the base class remove method\n                Backbone.View.prototype.remove.apply(this);\n            },\n\n            //\n            // handle model events\n            //\n\n            /** Refresh ready or not states */\n            _refreshReady: function() {\n                this.app.collection.each(function(model) {\n                    model.set(\n                        \"status\",\n                        (model.get(\"file_size\") > 0 && \"ready\") || \"init\"\n                    );\n                });\n            },\n\n            /** Refresh mode and e.g. show/hide textarea field */\n            _refreshMode: function() {\n                var file_mode = this.model.get(\"file_mode\");\n                if (file_mode == \"new\") {\n                    this.height = this.$el.height();\n                    this.$text\n                        .css({\n                            width: this.$el.width() - 16 + \"px\",\n                            top: this.$el.height() - 8 + \"px\"\n                        })\n                        .show();\n                    this.$el.height(\n                        this.$el.height() - 8 + this.$text.height() + 16\n                    );\n                    this.$text_content.val(\"\").trigger(\"keyup\");\n                } else {\n                    this.$el.height(this.height);\n                    this.$text.hide();\n                }\n            },\n\n            /** Refresh information */\n            _refreshInfo: function() {\n                var info = this.model.get(\"info\");\n                if (info) {\n                    this.$info_text\n                        .html(\"<strong>Failed: </strong>\" + info)\n                        .show();\n                } else {\n                    this.$info_text.hide();\n                }\n            },\n\n            /** Refresh percentage */\n            _refreshPercentage: function() {\n                var percentage = parseInt(this.model.get(\"percentage\"));\n                if (percentage != 0) {\n                    this.$progress_bar.css({ width: percentage + \"%\" });\n                } else {\n                    this.$progress_bar.addClass(\"no-transition\");\n                    this.$progress_bar.css({ width: \"0%\" });\n                    this.$progress_bar[0].offsetHeight;\n                    this.$progress_bar.removeClass(\"no-transition\");\n                }\n                this.$percentage.html(\n                    percentage != 100\n                        ? percentage + \"%\"\n                        : \"Adding to history...\"\n                );\n            },\n\n            /** Refresh status */\n            _refreshStatus: function() {\n                var status = this.model.get(\"status\");\n                this.$status\n                    .removeClass()\n                    .addClass(this.status_classes[status]);\n                this.model.set(\"enabled\", status != \"running\");\n                this.$text_content.attr(\"disabled\", !this.model.get(\"enabled\"));\n                this.$el.removeClass(\"success danger warning\");\n                if (status == \"running\" || status == \"ready\") {\n                    this.model.set(\"percentage\", 0);\n                }\n                this.$source\n                    .find(\".button\")\n                    [status == \"running\" ? \"addClass\" : \"removeClass\"](\n                        \"disabled\"\n                    );\n                if (status == \"success\") {\n                    this.$el.addClass(\"success\");\n                    this.model.set(\"percentage\", 100);\n                    this.$percentage.html(\"100%\");\n                }\n                if (status == \"error\") {\n                    this.$el.addClass(\"danger\");\n                    this.model.set(\"percentage\", 0);\n                    this.$info_progress.hide();\n                    this.$info_text.show();\n                } else {\n                    this.$info_progress.show();\n                    this.$info_text.hide();\n                }\n            },\n\n            /** File name */\n            _refreshFileName: function() {\n                this.$file_name.html(this.model.get(\"file_name\") || \"-\");\n            },\n\n            /** File size */\n            _refreshFileSize: function() {\n                this.$file_size.html(\n                    Utils.bytesToString(this.model.get(\"file_size\"))\n                );\n            },\n\n            /** Show/hide ftp popup */\n            _showFtp: function() {\n                if (!this.ftp.visible) {\n                    var self = this;\n                    this.ftp.empty();\n                    this.ftp.append(\n                        new UploadFtp({\n                            ftp_upload_site: this.app.ftp_upload_site,\n                            onchange: function(ftp_file) {\n                                self.ftp.hide();\n                                if (\n                                    self.model.get(\"status\") != \"running\" &&\n                                    ftp_file\n                                ) {\n                                    self.model.reset({\n                                        file_mode: \"ftp\",\n                                        file_name: ftp_file.path,\n                                        file_size: ftp_file.size,\n                                        file_path: ftp_file.path\n                                    });\n                                    self._refreshReady();\n                                }\n                            }\n                        }).$el\n                    );\n                    this.ftp.show();\n                } else {\n                    this.ftp.hide();\n                }\n            },\n\n            /** Show/hide settings popup */\n            _showSettings: function() {\n                if (!this.settings.visible) {\n                    this.settings.empty();\n                    this.settings.append(new UploadSettings(this).$el);\n                    this.settings.show();\n                } else {\n                    this.settings.hide();\n                }\n            },\n\n            /** Template */\n            _template: function() {\n                return (\n                    '<tr class=\"upload-row\">' +\n                    \"<td>\" +\n                    '<div class=\"upload-source\"/>' +\n                    '<div class=\"upload-text-column\">' +\n                    '<div class=\"upload-text\">' +\n                    '<div class=\"upload-text-info\">You can tell Galaxy to download data from web by entering URL in this box (one per line). You can also directly paste the contents of a file.</div>' +\n                    '<textarea class=\"upload-text-content form-control\"/>' +\n                    \"</div>\" +\n                    \"</div>\" +\n                    \"</td>\" +\n                    \"<td>\" +\n                    '<div class=\"upload-status\"/>' +\n                    \"</td>\" +\n                    \"<td>\" +\n                    '<div class=\"upload-file-desc upload-title\"/>' +\n                    \"</td>\" +\n                    \"<td>\" +\n                    '<div class=\"upload-file-name upload-title\"/>' +\n                    \"</td>\" +\n                    \"<td>\" +\n                    '<div class=\"upload-file-size upload-size\"/>' +\n                    \"</td>\" +\n                    '<td><div class=\"upload-settings upload-icon-button fa fa-gear\"/></td>' +\n                    \"<td>\" +\n                    '<div class=\"upload-info\">' +\n                    '<div class=\"upload-info-text\"/>' +\n                    '<div class=\"upload-info-progress progress\">' +\n                    '<div class=\"upload-progress-bar progress-bar progress-bar-success\"/>' +\n                    '<div class=\"upload-percentage\">0%</div>' +\n                    \"</div>\" +\n                    \"</div>\" +\n                    \"</td>\" +\n                    \"</tr>\"\n                );\n            }\n        });\n    }\n);\n"]}