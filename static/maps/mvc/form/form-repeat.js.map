{"version":3,"sources":["mvc/form/form-repeat.js"],"names":["define","Utils","Ui","View","Backbone","extend","initialize","options","title","empty_text","merge","max","min","button_new","ButtonIcon","tooltip","cls","this","onclick","onnew","setElement","$","append","$list","size","$el","Galaxy","emit","debug","icon","id","list","operations","ondel","portlet","_refresh","button_delete","del","hide","fadeIn","disable","hideOptions","find","remove","_","each","enable","delAll","hideOperation","isEmpty","addClass","html","index"],"mappings":"aACAA,QAAQ,cAAe,oBAAqB,kBAAmB,SAD/DC,EACAD,EAKIE,GAkHA,OACIC,KAjHIC,SAAYD,KAAZE,QACAC,WAAKC,SAAUN,GACXO,KAAAA,QACAC,KAAAA,QAAAA,EAAYC,MAAAH,GACZI,MAAK,SACLC,WAAK,iBAJTD,IAAA,KAMAC,IAAKC,OAEDL,KAAAA,WAAO,IAAAN,EAAYY,YACnBC,KAAAA,UACAC,MAAK,UAAAC,KAAAV,QAAAC,MACLU,QAAS,WAAAD,KAAAV,QAAWC,MAAA,SAChBD,IAAAA,gDACHW,QAAA,WAPLX,EAAAY,OAAAZ,EAAAY,WASAF,KAAKG,WAOTC,EAAA,UACMC,OAAAL,KAAWM,MAAAF,EAAA,WACJG,OAAKH,EAAA,UAAdC,OAAAL,KAAAJ,WAAAY,QAKAD,KAAA,WACIE,OAAAA,EAAAA,KAAOC,KAAKC,OAOZC,IAAAA,SAAMtB,GACNQ,GAAAA,EAASe,KAAAb,KAAAc,KAAAxB,EAAAuB,IAATf,CAOAe,IAAAA,EAD2B,IAAA5B,EAAAY,YAE3BN,KAAAA,aACAQ,QAAKT,2BACLyB,IAAAA,0CAJJd,QAAA,WAMQI,EAAOf,OAAQkB,EAAvBQ,WAGAC,EAAWZ,IAAOY,EAAQT,MAC1BK,GAAKvB,EAALuB,GAGAtB,MAAK2B,cA5DmBnB,IAAAT,EAAAS,KAAA,oBAmDpBgB,YAAcI,cAAeA,KAarCC,EAAKf,OAASQ,EAAIL,KACdS,EAAKT,IAAKM,SAAU,eAAAO,OAChBZ,KAAAA,KAAAA,EAAYE,IACRM,EAGJjB,KAAAM,MAAAD,OAAAY,EAAAT,IAAAc,OAAA,SACHtB,KAAAV,QAAAI,IAAA,GACDM,KAAKM,QAAWN,KAAhBV,QAAAI,KACAM,KAAOJ,WAAP2B,UACAvB,KAAKJ,gBAhCDG,OAAKW,KAAAC,MACLV,qBACIX,0CAkCZ8B,IAAA,SAAAP,GACQb,KAAAc,KAAAD,IAORW,KAAAA,MAAaC,KAAA,IAAAZ,GAAAa,gBACJ9B,KAAAA,KAAWY,GAChBmB,KAAEC,WAAFC,SACIZ,KAAAA,YATJR,OAAAC,KAAeC,MACX,qBACH,6BAHLmB,OAAQ,WAoBR,IAAA,IAAAjB,KAAAb,KAAAc,KACAI,KAAUE,IAAAP,IAKFI,YAAAA,WAKHjB,KAAAJ,WAAAY,IAAAa,OACJM,EAAAC,KAAA5B,KAAAc,KAAA,SAAAG,GA/GLA,EAAAc,cAAA,mBAkHOJ,EAAAK,QAAAhC,KAAAc,OACG5B,KAAAA,IAAAA,OADVkB,EAAA,UAvHJ6B,SAAA,gBAoGyBC,KAAKlC,KAAKV,QAAQE,cAKnC0B,SAAU,WACN,IAAIiB,EAAQ,EACZ,IAAK,IAAItB,KAAMb,KAAKc,KAAM,CACtB,IAAIG,EAAUjB,KAAKc,KAAKD,GACxBI,EAAQ1B,QAAQ4C,EAAQ,KAAOnC,KAAKV,QAAQC,OAC5C0B,EACIjB,KAAKO,OAASP,KAAKV,QAAQK,IACrB,gBACA,iBACR","file":"../../../scripts/mvc/form/form-repeat.js","sourcesContent":["/** This class creates a ui component which enables the dynamic creation of portlets */\ndefine([\"utils/utils\", \"mvc/ui/ui-portlet\", \"mvc/ui/ui-misc\"], function(\n    Utils,\n    Portlet,\n    Ui\n) {\n    var View = Backbone.View.extend({\n        initialize: function(options) {\n            this.list = {};\n            this.options = Utils.merge(options, {\n                title: \"Repeat\",\n                empty_text: \"Not available.\",\n                max: null,\n                min: null\n            });\n            this.button_new = new Ui.ButtonIcon({\n                icon: \"fa-plus\",\n                title: \"Insert \" + this.options.title,\n                tooltip: \"Add new \" + this.options.title + \" block\",\n                cls: \"ui-button-icon ui-clear-float form-repeat-add\",\n                onclick: function() {\n                    options.onnew && options.onnew();\n                }\n            });\n            this.setElement(\n                $(\"<div/>\")\n                    .append((this.$list = $(\"<div/>\")))\n                    .append($(\"<div/>\").append(this.button_new.$el))\n            );\n        },\n\n        /** Number of repeat blocks */\n        size: function() {\n            return _.size(this.list);\n        },\n\n        /** Add new repeat block */\n        add: function(options) {\n            if (!options.id || this.list[options.id]) {\n                Galaxy.emit.debug(\n                    \"form-repeat::add()\",\n                    \"Duplicate or invalid repeat block id.\"\n                );\n                return;\n            }\n            var button_delete = new Ui.ButtonIcon({\n                icon: \"fa-trash-o\",\n                tooltip: \"Delete this repeat block\",\n                cls: \"ui-button-icon-plain form-repeat-delete\",\n                onclick: function() {\n                    options.ondel && options.ondel();\n                }\n            });\n            var portlet = new Portlet.View({\n                id: options.id,\n                title: \"placeholder\",\n                cls: options.cls || \"ui-portlet-repeat\",\n                operations: { button_delete: button_delete }\n            });\n            portlet.append(options.$el);\n            portlet.$el.addClass(\"section-row\").hide();\n            this.list[options.id] = portlet;\n            this.$list.append(portlet.$el.fadeIn(\"fast\"));\n            this.options.max > 0 &&\n                this.size() >= this.options.max &&\n                this.button_new.disable();\n            this._refresh();\n        },\n\n        /** Delete repeat block */\n        del: function(id) {\n            if (!this.list[id]) {\n                Galaxy.emit.debug(\n                    \"form-repeat::del()\",\n                    \"Invalid repeat block id.\"\n                );\n                return;\n            }\n            this.$list.find(\"#\" + id).remove();\n            delete this.list[id];\n            this.button_new.enable();\n            this._refresh();\n        },\n\n        /** Remove all */\n        delAll: function() {\n            for (var id in this.list) {\n                this.del(id);\n            }\n        },\n\n        /** Hides add/del options */\n        hideOptions: function() {\n            this.button_new.$el.hide();\n            _.each(this.list, function(portlet) {\n                portlet.hideOperation(\"button_delete\");\n            });\n            _.isEmpty(this.list) &&\n                this.$el.append(\n                    $(\"<div/>\")\n                        .addClass(\"ui-form-info\")\n                        .html(this.options.empty_text)\n                );\n        },\n\n        /** Refresh view */\n        _refresh: function() {\n            var index = 0;\n            for (var id in this.list) {\n                var portlet = this.list[id];\n                portlet.title(++index + \": \" + this.options.title);\n                portlet[\n                    this.size() > this.options.min\n                        ? \"showOperation\"\n                        : \"hideOperation\"\n                ](\"button_delete\");\n            }\n        }\n    });\n\n    return {\n        View: View\n    };\n});\n"]}