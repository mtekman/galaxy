{"version":3,"sources":["mvc/webhooks.js"],"names":["define","WebhookModel","Backbone","Model","extend","defaults","Webhooks","Collection","model","WebhookView","View","el","options","me","this","initialize","toolId","toolVersion","$el","attr","urlRoot","fetch","success","render","webhook","toJSON","add","name","styles","$","type","script","text","appendTo","webhooks","async","url","Galaxy","root","callback"],"mappings":"aAGAA,UAAW,WACP,IAAIC,EAAeC,SAASC,MAAMC,QAD/BC,UACCJ,UAAAA,KAAJK,EAAAJ,SAAAK,WAAAH,QAOII,MAAOP,IADXQ,EAAAP,SAAAQ,KAAAN,QAKIO,GAAI,gBAAJA,WAAI,SAD+BC,GAI/B,IAAIC,EAAKC,KADbC,EAAYH,EAAAI,QAASJ,GACbC,EAAJD,EAAAK,aAAA,GAEAH,KAAIG,IAAAA,KAAAA,UAAcL,GAGlBE,KAAKI,IAAIC,KAAK,eAAgBF,GAA9BH,KAAKI,MAAL,IAAcjB,EAGda,KAAKN,MAAMY,QAAUR,EAAQQ,QAD7BN,KAAKN,MAALa,OACAC,QAAWF,WACNZ,EAAMa,aAKdE,OAlBkC,WAqB/B,IAAIC,EAAUV,KAAKN,MAAMiB,SAgB7BC,OAhBIZ,KAAIU,IAAAA,KAAU,YAAWC,EAAzBE,KAAA,YAGIH,EAAQI,QADZC,EAAKX,YAASY,KAAA,aACVN,KAAQI,EACNA,QAGFJ,SAAJ,QAAIA,EAAQO,QAKZF,EAAA,aAAAC,KAAA,oBACHE,KAAAR,EAAAO,QAlCLE,SAAA,QAqCUnB,QAUH,OA1DXR,SAAAA,EA4DQG,YAAaA,EACbiB,IATAQ,SAAetB,GACXuB,IAAAA,EAAOvB,IAAQuB,EADJD,EAAfE,IAAAC,OAAAC,KAAA1B,EAAAwB,IAJJF,EAAAb,OAKQc,OAAOvB,EAAQuB,OAAQvB,EAAQuB,MAKhCb,QAAAV,EAAA2B","file":"../../scripts/mvc/webhooks.js","sourcesContent":["/**\n  Webhooks\n**/\ndefine([], function() {\n    var WebhookModel = Backbone.Model.extend({\n        defaults: {\n            activate: false\n        }\n    });\n\n    var Webhooks = Backbone.Collection.extend({\n        model: WebhookModel\n    });\n\n    var WebhookView = Backbone.View.extend({\n        el: \"#webhook-view\",\n\n        initialize: function(options) {\n            var me = this;\n            var toolId = options.toolId || \"\";\n            var toolVersion = options.toolVersion || \"\";\n\n            this.$el.attr(\"tool_id\", toolId);\n            this.$el.attr(\"tool_version\", toolVersion);\n\n            this.model = new WebhookModel();\n            this.model.urlRoot = options.urlRoot;\n            this.model.fetch({\n                success: function() {\n                    me.render();\n                }\n            });\n        },\n\n        render: function() {\n            var webhook = this.model.toJSON();\n\n            this.$el.html('<div id=\"' + webhook.name + '\"></div>');\n            if (webhook.styles)\n                $(\"<style/>\", { type: \"text/css\" })\n                    .text(webhook.styles)\n                    .appendTo(\"head\");\n            if (webhook.script)\n                $(\"<script/>\", { type: \"text/javascript\" })\n                    .text(webhook.script)\n                    .appendTo(\"head\");\n\n            return this;\n        }\n    });\n\n    var add = function(options) {\n        var webhooks = new Webhooks();\n\n        webhooks.url = Galaxy.root + options.url;\n        webhooks.fetch({\n            async: options.async ? options.async : true,\n            success: options.callback\n        });\n    };\n\n    return {\n        Webhooks: Webhooks,\n        WebhookView: WebhookView,\n        add: add\n    };\n});\n"]}