{"version":3,"sources":["mvc/job/job-params.js"],"names":["define","Utils","View","Backbone","extend","initialize","options","this","self","render","console","log","append"],"mappings":"aACAA,QAAQ,eAAgB,SAASC,GAgBG,OAwC5BC,KAxCOC,SAASD,KAAKE,QADzBC,WAAA,SAAAC,GAEID,KAAAA,QAAYC,EACRC,KAAIC,WAAJ,UACAD,KAAKD,UAGRG,OAN2B,WASxBC,QAAQC,IAAI,MADRJ,KACJG,IAAQC,QAARC,OAAA","file":"../../../scripts/mvc/job/job-params.js","sourcesContent":["/** Workflow view */\ndefine([\"utils/utils\"], function(Utils) {\n    /** Build messages after user action */\n    function build_messages(self) {\n        var $el_message = self.$el.find(\".response-message\"),\n            status = Utils.getQueryString(\"status\"),\n            message = Utils.getQueryString(\"message\");\n\n        if (message && message !== \"\") {\n            $el_message.addClass(status + \"message\");\n            $el_message.html(\"<p>\" + _.escape(message) + \"</p>\");\n        } else {\n            $el_message.html(\"\");\n        }\n    }\n\n    /** View of the main workflow list page */\n    var View = Backbone.View.extend({\n        initialize: function(options) {\n            var self = this;\n            this.options = options;\n            this.setElement(\"<div/>\");\n            this.render();\n        },\n\n        render: function() {\n            console.log(\"HI\");\n            var self = this;\n            self.$el.empty().append(\"<h1>Testing</h1>\");\n            //var self = this,\n            //min_query_length = 3;\n            //$.getJSON( Galaxy.root + 'api/workflows/', function( workflows ) {\n            //var $el_workflow = null;\n            //// Add workflow header\n            //// Add user actions message if any\n            //build_messages( self );\n            //$el_workflow = self.$el.find( '.user-workflows' );\n            //// Add the actions buttons\n            //$el_workflow.append( self._templateActionButtons() );\n            //if( workflows.length > 0) {\n            //$el_workflow.append( self._templateWorkflowTable( self, workflows) );\n            //self.adjust_actiondropdown( $el_workflow );\n            //// Register delete and run workflow events\n            //_.each( workflows, function( wf ) {\n            //self.confirm_delete( self, wf );\n            //});\n            //// Register search workflow event\n            //self.search_workflow( self, self.$el.find( '.search-wf' ), self.$el.find( '.workflow-search tr' ), min_query_length );\n            //}\n            //else {\n            //$el_workflow.append( self._templateNoWorkflow() );\n            //}\n            //});\n        }\n    });\n\n    return {\n        View: View\n    };\n});\n"]}