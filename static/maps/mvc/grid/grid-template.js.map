{"version":3,"sources":["mvc/grid/grid-template.js"],"names":["define","Utils","grid","options","tmpl","embedded","this","grid_header","grid_table","info_text","action","grid_filters","title","global_actions","show_popup","length","show_item_checkboxes","i","target","url_args","column","insert","header","num_rows_rendered","items_length","items","encoded_id","item","encode_id","popupmenu_id","columns","visible","key","href","label","body","id","link","j","nowrap","num_page_links","column_settings","value","page_link_range","min_page","type","replace","cls","max_range","max_page","cur_page_num","max_offset","num_pages","operations","page_index","label_id_prefix","footer","use_paging","found_global","min_offset","operation","status","filters","show_advanced_search_link","column_key","f_key","d_key","advanced_search_display","standard_search_display","grid_column_filter","allow_multiple","column_label","global_operation","filterable","is_text","temp_column","filter_value","legend","message","str","filter_element","_","escape","filter","default_filter_dict","advanced_search","size","categorical_filters","cf_key","cf_arg","toLowerCase","url","JSON","stringify","column_filter","jQuery","params","slice","seperator","cf_label","cf","filter_key","sanitize"],"mappings":"aACAA,QAAQ,eAAgB,SAASC,GAAjCD,OAEIE,KAAO,SAAAC,GACH,IAAAC,EAAA,GA2DQ,OAzDAA,EADFD,EAAAE,SACSC,KAAXC,YAAAJ,GAAAG,KAAAE,WAAAL,GAGO,qEAoBPG,KAAAC,YAAAJ,GACIA,uHAcAG,KAAAE,WAAAL,GAWRI,EAAaE,YACLL,GACCD,uDACDC,EAAQK,UACX,UAIGL,GAMII,WAAA,SAAIE,GACJN,MAUH,oNAWLA,YAAQ,SAAKO,GACbP,IAAAA,EAAQ,4BAzFT,GAsDMD,EAAQE,WAqCbD,GAAA,OAAAD,EAAAS,MAAA,SA3FDT,EAAAU,eAAA,CA0DKT,GAAQ,oCAqChB,IAAAU,EAAAX,EAAAU,eAAAE,QAAA,EACQD,IACJV,GACW,oIAGPD,IAAAA,IAAQa,KAAAA,EAAAA,eAAsB,CAC9BZ,IAAQM,EAARP,EAAAU,eAAAI,GACId,GACAC,mDAIIM,EAARQ,OACH,WArCWR,EAAOS,SAuCnB,8BACAT,EAAcP,MACNiB,YAGAN,IACIV,GAAAA,UASAA,GAAAA,QA9Hb,OAgISA,EAAAA,SAKHA,GAAAD,EAAAkB,QAILjB,GAAQE,KAAAK,aAARR,GAhDAC,GAAQ,UAwDRkB,OAAA,SAAAnB,GAEA,IAAIoB,EAAAA,OAGJpB,EAAAa,uBACIQ,GAAAA,OACArB,EAAAsB,MAAAV,OAAA,IACAX,GACAmB,2IAGJnB,GAAA,SAII,IAAA,IAAIsB,KAAAA,EAAaC,QAAKC,CACtB,IAAIC,EAAAA,EAAeC,QAAUb,GAhDzBG,EAAOW,UAkDX3B,GAAA,WAAAgB,EAAAY,IAAA,YACQZ,EAARa,KACI9B,GACQ,YACXiB,EAAAa,KACD,iCAhDYb,EAAOY,IAkDnB,KACYhB,EAAAA,MAEJ,OAhDAZ,GAAQgB,EAAOc,MA0DvB9B,GACQgB,4BACAA,EAAOW,MACP,gBASA,OAHA3B,GAAA,SAjDhB+B,KAAM,SAAShC,GA0DC,IAAAC,EAAA,GAKIgC,GAHHjC,EAAAsB,MAAAV,SAKDX,GAAA,qDAKK,IAAA,IAAAa,KAAAd,EAAAsB,MAAA,CAEJ,IAAAE,EAAAxB,EAAAsB,MAAAR,GAvDLS,EAAaC,EAAKC,UA4DdxB,GAAA,OACAD,EAAIkC,iBAAMV,EAAAS,KACNhC,GAAA,mBAOCA,GAAA,IAUGA,EAAAA,uBACHA,GACJ,qEAcAsB,EACDtB,SACHsB,EACJ,8CAnQN,IAAA,IAAAY,KAAAnC,EAAA2B,QAAA,CAyLS,IAAIV,EAASjB,EAAQ2B,QAAQQ,GAiFzC,GAAAlB,EAAAW,QAAA,CAEI,IAAAQ,EAAA,GACAnB,EAAAmB,SA/EgBA,EAAS,+BAoFjBC,IAAAA,EAAyBA,EAAAA,cAA7BpB,EAAAc,OA7EYG,EAAOI,EAAgBJ,KAiFnCK,EAAAD,EAAAC,MACIC,EAAAA,EAAkBH,OAGH,WAAfI,OAAeC,KAAAH,KACfA,EAAAA,EAAAI,QAAA,QAAA,MA5EI,IAAIV,EAAK,GAiFjBW,EAAA,GACIC,EAAYL,eACZM,EAAWC,QAAAA,EAAeF,SAC1BG,EAAJ,aACgBC,IAAAA,IACZL,GAAA,UAEGA,GAAA,UAIHI,GAAAA,OAAaH,EAAaC,IAG9BZ,GACA,GAAAlC,EAAAkD,WAAAtC,SACIoC,GACYA,YACZf,EACI,YACHW,EACJ,2BAED3C,GACQ,kDACIY,EACA,WACXqB,EAEG,6BAhFYK,EAoFhB,OAEQ,GAAAvC,EAAAkD,WAAAtC,SACPX,GAAA,WAIOkD,GAIAA,YAEIlB,EAKD,YAECW,EAOP,gBACJ3B,EAAAmC,gBAnGe7B,EAqGhB,UACe0B,EAEP,MAQPV,GAAA,IACO,iBAERtC,GAAA,SAzGAA,GAAQ,QAgHZmB,EAEI,OAAAnB,GASAoD,OAAA,SAASvC,GAEL,IAAAb,EAAA,GAMH,GAAAD,EAAAsD,YAAAtD,EAAAiD,UAAA,EAAA,CAED,IAAAZ,EAAArC,EAAAqC,eACApC,EAAkBD,EAAlB+C,aACHE,EAAAjD,EAAAiD,UAGGM,EAAJlB,EAAA,EACAI,EAAkBS,EAAYV,EACtBxC,EAAQkD,EACRK,GAAAA,IAGPC,EAAAhB,GAAAO,GADIN,EAAA,KAKDxC,IAEI+C,EAFJ/C,EAAQuC,EAASgB,EACjBV,EAAU9C,EAAoB6C,EAwBlC,IAfSG,EAPDF,GAAIW,EAOH,EAKTZ,IAFCC,EAAAG,GAED,EAAAF,MAWO9C,GAAP+C,GAlbD,IAmTaP,EAAW,GAsInBiB,GAAAA,2BACH1D,EAAAa,uBAEGZ,GACA,aAjIAA,GA2IR,yDAIQ0D,EAAU3D,IAzINC,GA2IR,gIAIC,IAzIO,IAAIkD,EAAaV,EA2IzBU,EAAAL,EAAA,EACIc,IAEI3C,GAAiBU,EAARoB,aACT9B,GACI4C,uDACAC,EACAC,KACAD,EACAE,UAEJJ,GACH,yCACJT,EAzIe,qEA2IhBA,EACIc,KACAD,EACAC,cAKJnB,EAAAG,IACIhD,GAzIQ,4CAmJZgD,EACQhC,qEACAA,EACAhB,KACHgD,EACJ,eAEDhD,GAAA,UAGAA,GACI2D,wJA3IJ,GAAI5D,EAAQa,qBAAsB,CAoJlCZ,GACA,8JAgBQA,IAAAA,IAAAA,KAAQD,EAAKkE,YAChBT,EAAAzD,EAAAkD,WAAApC,IACJqD,iBA1JWlE,GA4JZ,+BACQwD,EAAa1B,MA1JL,mDAgKpB9B,GAAA,aAII,IAAI0D,GAAU3D,EACd,IAAIoE,KAAAA,EAAAA,WACAP,GAAAA,EAAAA,WAAJ/C,GAAAuD,iBAAA,CACIpD,GAAA,EACAmD,MAtJJ,GAAIb,EAAc,CA4JdtC,GAAOqD,yBACPrE,IAAAA,KACID,EAAAkD,WAAA,CAGP,IAAAO,EAAAzD,EAAAkD,WAAApC,GACO2C,EAAAY,mBACGE,GAEH,kCAKJd,EAAAY,iBACUrE,KACFwE,EAAcxE,MACdyE,QAGIxE,GAAA,aAqBR,OAVKD,EAAA0E,SACJzE,GACJ,yBAEDA,EAAQyE,OAzKJ,cA+KAzE,GAII0E,QAAA,SAAA3E,GACI,IAAA0D,EAAAkB,IAAA5E,EAAA0D,QAtKhB,OAuK6BmB,GAAb5E,EAAAA,SAAAA,UAAa4E,SAIhBnB,EAAA,QAGL,kBAEIA,EACI,8BACAoB,EAAAC,OAAA/E,EAAIgF,SA5KhB,6CAoLSxE,aAAA,SAAAR,GAER,IAAAiF,EAAAjF,EAAAiF,oBA5KDtB,EAAU3D,EAAQ2D,QAGlBK,EAA0B,OA8K1BhE,EAAAkF,kBACAlB,EAAA,SAII,IAAAJ,GAAe,EACXuB,IAAAA,IAAAA,KAAAA,EAAAxD,QAEJ,GAAA,aADCV,EAAAjB,EAAA2B,QAAAb,IACDwD,WAAA,CACAa,IAAAA,EAAAlE,EAAAY,IACHiC,EAAAH,EAAAE,GA5KOE,EAAQkB,EAAoBpB,GA8KpCC,GAAAC,GAAAD,GAAAC,IAEIC,EAAA,SAgBJJ,GAAA,EAKA,IAAAK,EAAqBjE,QACjB,SAAAgE,IACAC,EAAiBmB,QAMbC,IAAAA,EACAC,6CACHrB,EA3LL,gDAmMI,IAAA,IAAAnD,KAAAd,EAAA2B,QAEiBkC,aADjB5C,EAAI+D,EAASrB,QAAQE,IACjBmB,aACA/E,GAAAA,KACIiE,mBAAAlE,EAAAiB,IAoBZhB,GAAAA,6BAzMA2D,IA6MJ3D,GACOA,iEAIX4E,GAAAA,2BAptBR5E,GA8gBgB,6CACA+D,EACA,kLASJ,IAAK,IAAIlD,KAAKd,EAAQ2B,QAAS,CAC3B,IAAIV,EAASjB,EAAQ2B,QAAQb,GACJ,YAArBG,EAAOqD,aACPrE,GAAQE,KAAK+D,mBAAmBlE,EAASiB,IAQjD,OAHAhB,GAAQ,kBAOZiE,mBAAoB,SAASlE,EAASiB,GAERjB,EAAQiF,oBAAlC,IACItB,EAAU3D,EAAQ2D,QAClBS,EAAenD,EAAOc,MACtB8B,EAAa5C,EAAOY,IACC,YAArBZ,EAAOqD,aACPF,EAAeA,EAAamB,eAIhC,IAAItF,EAAO,OASX,GAPyB,YAArBgB,EAAOqD,aACPrE,GACI,+CACAmE,EACA,UAERnE,GAAQ,oCACJgB,EAAOsD,QAAS,CAChBtE,GACI,8CACA4D,EACA,aACA7D,EAAQwF,IACR,mBAEJ,IAAK1E,KAAKd,EAAQ2B,QAAS,CACvB,IAAI6C,EAAcxE,EAAQ2B,QAAQb,GAC9B2D,EAAed,EAAQa,EAAY3C,KACnC4C,GACoB,OAAhBA,IACID,EAAYD,UACZE,EAAegB,KAAKC,UAAUjB,IAElCxE,GACI,4BACAuE,EAAY3C,IACZ,aACA2C,EAAY3C,IACZ,YACA4C,EACA,OAKhBxE,GAAQ,aAAe4D,EAAa,wBAGpC,IAAI8B,EAAgBhC,EAAQE,GAC5B,GAAI8B,EAAe,CAEf,IAAIjD,EAAOkD,OAAOlD,KAAKiD,GAcvB,GAXY,UAARjD,GACqB,OAAjBiD,IAEA1F,GAAQE,KAAK0E,eACThB,EACA8B,IAMA,SAARjD,EACA,IAAK,IAAI5B,KAAK6E,EAAe,CAEzB,IAAIX,EAASW,EAAc7E,GAGvB+E,EAASF,EACbE,EAASA,EAAOC,MAAMhF,GAGtBb,GAAQE,KAAK0E,eAAehB,EAAYmB,IAMpD/E,GAAQ,UAGR,IAAIsC,EAAQ,GACZ,GAAyB,YAArBtB,EAAOqD,WAA0B,CAEjC,IAAIa,GADJ5C,EAAQtB,EAAOc,MAAMwD,eACJ3E,OACbuE,EAAO,KACPA,EAAO,IAGXA,GAAc,EAIlBlF,GACI,sEAEA4D,EACA,oBACAA,EACA,8BACAtB,EACA,WACA4C,EACA,6JAMD,CAEHlF,GAAQ,aAAe4D,EAAa,wBAGpC,IAAIkC,GAAY,EAChB,IAAK,IAAIC,KAAYhG,EAAQoF,oBAAoBvB,GAAa,CAE1D,IAAIoC,EAAKjG,EAAQoF,oBAAoBvB,GAAYmC,GAG7CX,EAAS,GACTC,EAAS,GACb,IAAK,IAAIzD,KAAOoE,EACZZ,EAASxD,EACTyD,EAASW,EAAGpE,GAIZkE,IACA9F,GAAQ,OAEZ8F,GAAY,GAGRf,EAASrB,EAAQE,KACPoC,EAAGpC,IAAemB,GAAUM,EACtCrF,GACI,mCACA4D,EACA,2BACAmC,EACA,UAEJ/F,GACI,mCACA4D,EACA,sDAEAwB,EACA,iBACAC,EACA,KACAU,EACA,cAIZ/F,GAAQ,UAKZ,OAHAA,GAAQ,cAOZ4E,eAAgB,SAASqB,EAAYzB,GAEjC,MACI,kCAFJA,EAAe3E,EAAMqG,SAAS1B,IAI1B,6CACAyB,EACA,iBACAzB,EACA","file":"../../../scripts/mvc/grid/grid-template.js","sourcesContent":["// dependencies\ndefine([\"utils/utils\"], function(Utils) {\n    // grid view templates\n    return {\n        // template\n        grid: function(options) {\n            var tmpl = \"\";\n            if (options.embedded) {\n                tmpl = this.grid_header(options) + this.grid_table(options);\n            } else {\n                tmpl =\n                    '<div class=\"loading-elt-overlay\"></div>' +\n                    \"<table>\" +\n                    \"<tr>\" +\n                    '<td width=\"75%\">' +\n                    this.grid_header(options) +\n                    \"</td>\" +\n                    \"<td></td>\" +\n                    \"<td></td>\" +\n                    \"</tr>\" +\n                    \"<tr>\" +\n                    '<td width=\"100%\" id=\"grid-message\" valign=\"top\"></td>' +\n                    \"<td></td>\" +\n                    \"<td></td>\" +\n                    \"</tr>\" +\n                    \"</table>\" +\n                    this.grid_table(options);\n            }\n\n            // add info text\n            if (options.info_text) {\n                tmpl +=\n                    '<br><div class=\"toolParamHelp\" style=\"clear: both;\">' +\n                    options.info_text +\n                    \"</div>\";\n            }\n\n            // return\n            return tmpl;\n        },\n\n        // template\n        grid_table: function(options) {\n            return (\n                '<form method=\"post\" onsubmit=\"return false;\">' +\n                '<table id=\"grid-table\" class=\"grid\">' +\n                '<thead id=\"grid-table-header\"></thead>' +\n                '<tbody id=\"grid-table-body\"></tbody>' +\n                '<tfoot id=\"grid-table-footer\"></tfoot>' +\n                \"</table>\" +\n                \"</form>\"\n            );\n        },\n\n        // template\n        grid_header: function(options) {\n            var tmpl = '<div class=\"grid-header\">';\n            if (!options.embedded) {\n                tmpl += \"<h2>\" + options.title + \"</h2>\";\n            }\n            if (options.global_actions) {\n                tmpl += '<ul class=\"manage-table-actions\">';\n                var show_popup = options.global_actions.length >= 3;\n                if (show_popup) {\n                    tmpl +=\n                        '<li><a class=\"action-button\" id=\"popup-global-actions\" class=\"menubutton\">Actions</a></li>' +\n                        '<div popupmenu=\"popup-global-actions\">';\n                }\n                for (var i in options.global_actions) {\n                    var action = options.global_actions[i];\n                    tmpl +=\n                        \"<li>\" +\n                        '<a class=\"action-button use-target\" target=\"' +\n                        action.target +\n                        '\" href=\"' +\n                        action.url_args +\n                        '\" onclick=\"return false;\" >' +\n                        action.label +\n                        \"</a>\" +\n                        \"</li>\";\n                }\n                if (show_popup) {\n                    tmpl += \"</div>\";\n                }\n                tmpl += \"</ul>\";\n            }\n            if (options.insert) {\n                tmpl += options.insert;\n            }\n\n            // add grid filters\n            tmpl += this.grid_filters(options);\n            tmpl += \"</div>\";\n\n            // return template\n            return tmpl;\n        },\n\n        // template\n        header: function(options) {\n            // start\n            var tmpl = \"<tr>\";\n\n            // add checkbox\n            if (options.show_item_checkboxes) {\n                tmpl += \"<th>\";\n                if (options.items.length > 0) {\n                    tmpl +=\n                        '<input type=\"checkbox\" id=\"check_all\" name=select_all_checkbox value=\"true\">' +\n                        '<input type=\"hidden\" name=select_all_checkbox value=\"true\">';\n                }\n                tmpl += \"</th>\";\n            }\n\n            // create header elements\n            for (var i in options.columns) {\n                var column = options.columns[i];\n                if (column.visible) {\n                    tmpl += '<th id=\"' + column.key + '-header\">';\n                    if (column.href) {\n                        tmpl +=\n                            '<a href=\"' +\n                            column.href +\n                            '\" class=\"sort-link\" sort_key=\"' +\n                            column.key +\n                            '\">' +\n                            column.label +\n                            \"</a>\";\n                    } else {\n                        tmpl += column.label;\n                    }\n                    tmpl +=\n                        '<span class=\"sort-arrow\">' +\n                        column.extra +\n                        \"</span>\" +\n                        \"</th>\";\n                }\n            }\n\n            // finalize\n            tmpl += \"</tr>\";\n\n            // return template\n            return tmpl;\n        },\n\n        // template\n        body: function(options) {\n            // initialize\n            var tmpl = \"\";\n            var num_rows_rendered = 0;\n            var items_length = options.items.length;\n\n            // empty grid?\n            if (items_length == 0) {\n                // No results.\n                tmpl += '<tr><td colspan=\"100\"><em>No Items</em></td></tr>';\n                num_rows_rendered = 1;\n            }\n\n            // create rows\n            for (var i in options.items) {\n                // encode ids\n                var item = options.items[i];\n                var encoded_id = item.encode_id;\n                var popupmenu_id = \"grid-\" + i + \"-popup\";\n\n                // Tag current\n                tmpl += \"<tr \";\n                if (options.current_item_id == item.id) {\n                    tmpl += 'class=\"current\"';\n                }\n                tmpl += \">\";\n\n                // Item selection column\n                if (options.show_item_checkboxes) {\n                    tmpl +=\n                        '<td style=\"width: 1.5em;\">' +\n                        '<input type=\"checkbox\" name=\"id\" value=\"' +\n                        encoded_id +\n                        '\" id=\"' +\n                        encoded_id +\n                        '\" class=\"grid-row-select-checkbox\" />' +\n                        \"</td>\";\n                }\n\n                // Data columns\n                for (var j in options.columns) {\n                    var column = options.columns[j];\n                    if (column.visible) {\n                        // Nowrap\n                        var nowrap = \"\";\n                        if (column.nowrap) {\n                            nowrap = 'style=\"white-space:nowrap;\"';\n                        }\n\n                        // get column settings\n                        var column_settings = item.column_config[column.label];\n\n                        // load attributes\n                        var link = column_settings.link;\n                        var value = column_settings.value;\n                        var target = column_settings.target;\n\n                        // unescape value\n                        if (jQuery.type(value) === \"string\") {\n                            value = value.replace(/\\/\\//g, \"/\");\n                        }\n\n                        // Attach popup menu?\n                        var id = \"\";\n                        var cls = \"\";\n                        if (column.attach_popup) {\n                            id = \"grid-\" + i + \"-popup\";\n                            cls = \"menubutton\";\n                            if (link != \"\") {\n                                cls += \" split\";\n                            }\n                            cls += \" popup\";\n                        }\n\n                        // Check for row wrapping\n                        tmpl += \"<td \" + nowrap + \">\";\n\n                        // Link\n                        if (link) {\n                            if (options.operations.length != 0) {\n                                tmpl +=\n                                    '<div id=\"' +\n                                    id +\n                                    '\" class=\"' +\n                                    cls +\n                                    '\" style=\"float: left;\">';\n                            }\n                            tmpl +=\n                                '<a class=\"menubutton-label use-target\" target=\"' +\n                                target +\n                                '\" href=\"' +\n                                link +\n                                '\" onclick=\"return false;\">' +\n                                value +\n                                \"</a>\";\n                            if (options.operations.length != 0) {\n                                tmpl += \"</div>\";\n                            }\n                        } else {\n                            tmpl +=\n                                '<div id=\"' +\n                                id +\n                                '\" class=\"' +\n                                cls +\n                                '\"><label id=\"' +\n                                column.label_id_prefix +\n                                encoded_id +\n                                '\" for=\"' +\n                                encoded_id +\n                                '\">' +\n                                (value || \"\") +\n                                \"</label></div>\";\n                        }\n                        tmpl += \"</td>\";\n                    }\n                }\n                tmpl += \"</tr>\";\n                num_rows_rendered++;\n            }\n            return tmpl;\n        },\n\n        // template\n        footer: function(options) {\n            // create template string\n            var tmpl = \"\";\n\n            // paging\n            if (options.use_paging && options.num_pages > 1) {\n                // get configuration\n                var num_page_links = options.num_page_links;\n                var cur_page_num = options.cur_page_num;\n                var num_pages = options.num_pages;\n\n                // First pass on min page.\n                var page_link_range = num_page_links / 2;\n                var min_page = cur_page_num - page_link_range;\n                var min_offset = 0;\n                if (min_page <= 0) {\n                    // Min page is too low.\n                    min_page = 1;\n                    min_offset = page_link_range - (cur_page_num - min_page);\n                }\n\n                // Set max page.\n                var max_range = page_link_range + min_offset;\n                var max_page = cur_page_num + max_range;\n                var max_offset;\n                if (max_page <= num_pages) {\n                    // Max page is fine.\n                    max_offset = 0;\n                } else {\n                    // Max page is too high.\n                    max_page = num_pages;\n                    // +1 to account for the +1 in the loop below.\n                    max_offset = max_range - (max_page + 1 - cur_page_num);\n                }\n\n                // Second and final pass on min page to add any unused\n                // offset from max to min.\n                if (max_offset != 0) {\n                    min_page -= max_offset;\n                    if (min_page < 1) {\n                        min_page = 1;\n                    }\n                }\n\n                // template header\n                tmpl += '<tr id=\"page-links-row\">';\n                if (options.show_item_checkboxes) {\n                    tmpl += \"<td></td>\";\n                }\n                tmpl +=\n                    '<td colspan=\"100\">' +\n                    '<span id=\"page-link-container\">' +\n                    \"Page:\";\n\n                if (min_page > 1) {\n                    tmpl +=\n                        '<span class=\"page-link\" id=\"page-link-1\"><a href=\"javascript:void(0);\" page_num=\"1\" onclick=\"return false;\">1</a></span> ...';\n                }\n\n                // create page urls\n                for (\n                    var page_index = min_page;\n                    page_index < max_page + 1;\n                    page_index++\n                ) {\n                    if (page_index == options.cur_page_num) {\n                        tmpl +=\n                            '<span class=\"page-link inactive-link\" id=\"page-link-' +\n                            page_index +\n                            '\">' +\n                            page_index +\n                            \"</span>\";\n                    } else {\n                        tmpl +=\n                            '<span class=\"page-link\" id=\"page-link-' +\n                            page_index +\n                            '\"><a href=\"javascript:void(0);\" onclick=\"return false;\" page_num=\"' +\n                            page_index +\n                            '\">' +\n                            page_index +\n                            \"</a></span>\";\n                    }\n                }\n\n                // show last page\n                if (max_page < num_pages) {\n                    tmpl +=\n                        \"...\" +\n                        '<span class=\"page-link\" id=\"page-link-' +\n                        num_pages +\n                        '\"><a href=\"javascript:void(0);\" onclick=\"return false;\" page_num=\"' +\n                        num_pages +\n                        '\">' +\n                        num_pages +\n                        \"</a></span>\";\n                }\n                tmpl += \"</span>\";\n\n                // Show all link\n                tmpl +=\n                    '<span class=\"page-link\" id=\"show-all-link-span\"> | <a href=\"javascript:void(0);\" onclick=\"return false;\" page_num=\"all\">Show All</a></span>' +\n                    \"</td>\" +\n                    \"</tr>\";\n            }\n\n            // Grid operations for multiple items.\n            if (options.show_item_checkboxes) {\n                // start template\n                tmpl +=\n                    \"<tr>\" +\n                    '<input type=\"hidden\" id=\"operation\" name=\"operation\" value=\"\">' +\n                    \"<td></td>\" +\n                    '<td colspan=\"100\">' +\n                    'For <span class=\"grid-selected-count\"></span> selected items: ';\n\n                // configure buttons for operations\n                for (var i in options.operations) {\n                    var operation = options.operations[i];\n                    if (operation.allow_multiple) {\n                        tmpl +=\n                            '<input type=\"button\" value=\"' +\n                            operation.label +\n                            '\" class=\"operation-button action-button\">&nbsp;';\n                    }\n                }\n\n                // finalize template\n                tmpl += \"</td>\" + \"</tr>\";\n            }\n\n            // count global operations\n            var found_global = false;\n            for (i in options.operations) {\n                if (options.operations[i].global_operation) {\n                    found_global = true;\n                    break;\n                }\n            }\n\n            // add global operations\n            if (found_global) {\n                tmpl += \"<tr>\" + '<td colspan=\"100\">';\n                for (i in options.operations) {\n                    var operation = options.operations[i];\n                    if (operation.global_operation) {\n                        tmpl +=\n                            '<a class=\"action-button\" href=\"' +\n                            operation.global_operation +\n                            '\">' +\n                            operation.label +\n                            \"</a>\";\n                    }\n                }\n                tmpl += \"</td>\" + \"</tr>\";\n            }\n\n            // add legend\n            if (options.legend) {\n                tmpl +=\n                    \"<tr>\" +\n                    '<td colspan=\"100\">' +\n                    options.legend +\n                    \"</td>\" +\n                    \"</tr>\";\n            }\n\n            // return\n            return tmpl;\n        },\n\n        // template\n        message: function(options) {\n            var status = str(options.status);\n            if (status.indexOf([\"success\", \"ok\"]) != -1) {\n                status = \"done\";\n            }\n            return (\n                \"<p>\" +\n                '<div class=\"' +\n                status +\n                'message transient-message\">' +\n                _.escape(options.message) +\n                \"</div>\" +\n                '<div style=\"clear: both\"></div>' +\n                \"</p>\"\n            );\n        },\n\n        // template\n        grid_filters: function(options) {\n            // get filters\n            var default_filter_dict = options.default_filter_dict;\n            var filters = options.filters;\n\n            // show advanced search if flag set or if there are filters for advanced search fields\n            var advanced_search_display = \"none\";\n            if (options.advanced_search) {\n                advanced_search_display = \"block\";\n            }\n\n            // identify columns with advanced filtering\n            var show_advanced_search_link = false;\n            for (var i in options.columns) {\n                var column = options.columns[i];\n                if (column.filterable == \"advanced\") {\n                    var column_key = column.key;\n                    var f_key = filters[column_key];\n                    var d_key = default_filter_dict[column_key];\n                    if (f_key && d_key && f_key != d_key) {\n                        advanced_search_display = \"block\";\n                    }\n                    show_advanced_search_link = true;\n                }\n            }\n\n            // hide standard search if advanced is shown\n            var standard_search_display = \"block\";\n            if (advanced_search_display == \"block\") {\n                standard_search_display = \"none\";\n            }\n\n            //\n            // standard search\n            //\n            var tmpl =\n                '<div id=\"standard-search\" style=\"display: ' +\n                standard_search_display +\n                ';\">' +\n                \"<table>\" +\n                \"<tr>\" +\n                '<td style=\"padding: 0;\">' +\n                \"<table>\";\n\n            // add standard filters\n            for (var i in options.columns) {\n                var column = options.columns[i];\n                if (column.filterable == \"standard\") {\n                    tmpl += this.grid_column_filter(options, column);\n                }\n            }\n\n            // finalize standard search\n            tmpl += \"</table>\" + \"</td>\" + \"</tr>\" + \"<tr>\" + \"<td>\";\n\n            // show advanced search link in standard display\n            if (show_advanced_search_link) {\n                tmpl +=\n                    '<a href=\"\" class=\"advanced-search-toggle\">Advanced Search</a>';\n            }\n\n            // finalize standard search display\n            tmpl += \"</td>\" + \"</tr>\" + \"</table>\" + \"</div>\";\n\n            //\n            // advanced search\n            //\n            tmpl +=\n                '<div id=\"advanced-search\" style=\"display: ' +\n                advanced_search_display +\n                '; margin-top: 5px; border: 1px solid #ccc;\">' +\n                \"<table>\" +\n                \"<tr>\" +\n                '<td style=\"text-align: left\" colspan=\"100\">' +\n                '<a href=\"\" class=\"advanced-search-toggle\">Close Advanced Search</a>' +\n                \"</td>\" +\n                \"</tr>\";\n\n            // add advanced filters\n            for (var i in options.columns) {\n                var column = options.columns[i];\n                if (column.filterable == \"advanced\") {\n                    tmpl += this.grid_column_filter(options, column);\n                }\n            }\n\n            // finalize advanced search template\n            tmpl += \"</table>\" + \"</div>\";\n\n            // return template\n            return tmpl;\n        },\n\n        // template\n        grid_column_filter: function(options, column) {\n            // collect parameters\n            var default_filter_dict = options.default_filter_dict;\n            var filters = options.filters;\n            var column_label = column.label;\n            var column_key = column.key;\n            if (column.filterable == \"advanced\") {\n                column_label = column_label.toLowerCase();\n            }\n\n            // start\n            var tmpl = \"<tr>\";\n\n            if (column.filterable == \"advanced\") {\n                tmpl +=\n                    '<td align=\"left\" style=\"padding-left: 10px\">' +\n                    column_label +\n                    \":</td>\";\n            }\n            tmpl += '<td style=\"padding-bottom: 1px;\">';\n            if (column.is_text) {\n                tmpl +=\n                    '<form class=\"text-filter-form\" column_key=\"' +\n                    column_key +\n                    '\" action=\"' +\n                    options.url +\n                    '\" method=\"get\" >';\n                // Carry forward filtering criteria with hidden inputs.\n                for (i in options.columns) {\n                    var temp_column = options.columns[i];\n                    var filter_value = filters[temp_column.key];\n                    if (filter_value) {\n                        if (filter_value != \"All\") {\n                            if (temp_column.is_text) {\n                                filter_value = JSON.stringify(filter_value);\n                            }\n                            tmpl +=\n                                '<input type=\"hidden\" id=\"' +\n                                temp_column.key +\n                                '\" name=\"f-' +\n                                temp_column.key +\n                                '\" value=\"' +\n                                filter_value +\n                                '\"/>';\n                        }\n                    }\n                }\n                // Print current filtering criteria and links to delete.\n                tmpl += '<span id=\"' + column_key + '-filtering-criteria\">';\n\n                // add filters\n                var column_filter = filters[column_key];\n                if (column_filter) {\n                    // identify type\n                    var type = jQuery.type(column_filter);\n\n                    // single filter value\n                    if (type == \"string\") {\n                        if (column_filter != \"All\") {\n                            // append template\n                            tmpl += this.filter_element(\n                                column_key,\n                                column_filter\n                            );\n                        }\n                    }\n\n                    // multiple filter values\n                    if (type == \"array\") {\n                        for (var i in column_filter) {\n                            // get filter\n                            var filter = column_filter[i];\n\n                            // copy filters and remove entry\n                            var params = column_filter;\n                            params = params.slice(i);\n\n                            // append template\n                            tmpl += this.filter_element(column_key, filter);\n                        }\n                    }\n                }\n\n                // close span\n                tmpl += \"</span>\";\n\n                // Set value, size of search input field. Minimum size is 20 characters.\n                var value = \"\";\n                if (column.filterable == \"standard\") {\n                    value = column.label.toLowerCase();\n                    var size = value.length;\n                    if (size < 20) {\n                        size = 20;\n                    }\n                    // +4 to account for space after placeholder\n                    size = size + 4;\n                }\n\n                // print input field for column\n                tmpl +=\n                    '<span class=\"search-box\">' +\n                    '<input class=\"search-box-input\" id=\"input-' +\n                    column_key +\n                    '-filter\" name=\"f-' +\n                    column_key +\n                    '\" type=\"text\" placeholder=\"' +\n                    value +\n                    '\" size=\"' +\n                    size +\n                    '\"/>' +\n                    '<button type=\"submit\" style=\"background: transparent; border: none; padding: 4px; margin: 0px;\">' +\n                    '<i class=\"fa fa-search\"></i>' +\n                    \"</button>\" +\n                    \"</span>\" +\n                    \"</form>\";\n            } else {\n                // filter criteria\n                tmpl += '<span id=\"' + column_key + '-filtering-criteria\">';\n\n                // add category filters\n                var seperator = false;\n                for (var cf_label in options.categorical_filters[column_key]) {\n                    // get category filter\n                    var cf = options.categorical_filters[column_key][cf_label];\n\n                    // each filter will have only a single argument, so get that single argument\n                    var cf_key = \"\";\n                    var cf_arg = \"\";\n                    for (var key in cf) {\n                        cf_key = key;\n                        cf_arg = cf[key];\n                    }\n\n                    // add seperator\n                    if (seperator) {\n                        tmpl += \" | \";\n                    }\n                    seperator = true;\n\n                    // add category\n                    var filter = filters[column_key];\n                    if (filter && cf[column_key] && filter == cf_arg) {\n                        tmpl +=\n                            '<span class=\"categorical-filter ' +\n                            column_key +\n                            '-filter current-filter\">' +\n                            cf_label +\n                            \"</span>\";\n                    } else {\n                        tmpl +=\n                            '<span class=\"categorical-filter ' +\n                            column_key +\n                            '-filter\">' +\n                            '<a href=\"javascript:void(0);\" filter_key=\"' +\n                            cf_key +\n                            '\" filter_val=\"' +\n                            cf_arg +\n                            '\">' +\n                            cf_label +\n                            \"</a>\" +\n                            \"</span>\";\n                    }\n                }\n                tmpl += \"</span>\";\n            }\n            tmpl += \"</td>\" + \"</tr>\";\n\n            // return template\n            return tmpl;\n        },\n\n        // template for filter items\n        filter_element: function(filter_key, filter_value) {\n            filter_value = Utils.sanitize(filter_value);\n            return (\n                '<span class=\"text-filter-val\">' +\n                filter_value +\n                '<a href=\"javascript:void(0);\" filter_key=\"' +\n                filter_key +\n                '\" filter_val=\"' +\n                filter_value +\n                '\">' +\n                '<i class=\"fa fa-times\" style=\"padding-left: 5px; padding-bottom: 6px;\"/>' +\n                \"</a>\" +\n                \"</span>\"\n            );\n        }\n    };\n});\n"]}