{"version":3,"sources":["mvc/ui/icon-button.js"],"names":["define","IconButton","Backbone","Model","extend","defaults","title","icon_class","on_click","menu_options","is_menu_button","id","href","target","enabled","visible","tooltip_config","IconButtonView","View","initialize","this","model","attributes","placement","bind","render","tooltip","new_elem","template","toJSON","get","replaceWith","setElement","events","click","event","_","isFunction","options","buffer","IconButtonCollection","Collection","IconButtonMenuView","tagName","self","collection","each","button","elt","$","attr","appendTo","$el","make_popupmenu","create_icon_buttons_menu","button_config","global_config","buttons","map","config"],"mappings":"aAAAA,UAKI,WAKQC,IAAAA,EAAaC,SAASC,MAAMC,QAC5BC,UACIC,MADM,GAENC,WAFM,GAGNC,SAHM,KAINC,aAJM,KAKNC,gBALM,EAMFC,GANE,KAONC,KAPM,KAQNC,OARM,KASNC,SATM,EAUNC,SAVM,EAWNC,qBAOJC,EAAiBf,SAAAgB,KAAcd,QAC/Be,WAAY,WAERC,KAAKC,MAAMC,WAAWN,gBAAmBO,UAAW,UACpDH,KAAKC,MAALG,KAAgB,SAAUJ,KAAKK,OAA/BL,OAGJK,OAAQ,WAEJL,KAASM,IAAAA,QAAQ,QAEbC,IAAAA,EAAWP,KAAKQ,SAASR,KAAKC,MAAMQ,UAKxC,OAHAF,EAASD,QAAQN,KAAKC,MAAUS,IAAA,mBAChCV,KAASW,IAAAA,YAAYJ,GACrBP,KAAKY,WAAWL,GAChBP,MAGJa,QACIC,MAAO,SAGXA,MAAO,SAAAC,GAECC,OAAEC,EAAAA,WAAWjB,KAAKC,MAAUS,IAAA,eAC5BV,KAAKC,MAAUS,IAAA,WAAfV,CAA2Be,IACpB,IAOfP,SAAU,SAAAU,GACFC,IAAAA,EAAS,UAAYD,EAAQhC,MAAQ,uBAqCzC,OAnCIgC,EAAQ5B,iBACR6B,GAAU,gBAGdA,GAAU,IAAMD,EAAQ/B,WAEnB+B,EAAQxB,UACTyB,GAAU,aAIdA,GAAA,IAEID,EAAY3B,KACZ4B,GAAU,QAAUD,EAAV3B,GAAV,KAGJ4B,GAAU,UAAYD,EAAZ1B,KAAV,IAEI0B,EAAQzB,SACR0B,GAAU,YAAcD,EAAQzB,OAAhC,KAGCyB,EAAQvB,UACTwB,GAAU,2BAKVA,EADAD,EAAQxB,QACC,MAAQyB,EAAjB,KAES,SAAWA,EAApB,KAIKA,EAAAA,MAKbC,EAAuBtC,SAASuC,WAAWrC,QAC3CiB,MAAOpB,IAOPyC,EAAqBxC,SAAAgB,KAAcd,QACnCuC,QAAS,MAETxB,WAAY,WACRC,KAAKK,UAGTA,OAAQ,WAEAmB,IAAAA,EAAJxB,KAwBA,OAvBAA,KAAKyB,WAALC,KAAqB,SAASC,GAEtBC,IAAAA,EAAQC,EAAA,QACPC,KAAK,OAAQ,sBAOlBA,KAAA,QAAAH,EAAAzB,WAAAhB,OACIyC,SAAOzB,2BACHI,SAAQqB,EAAOzB,WAAWN,YACjCmC,SAAAP,EAAAQ,KALIlB,MAAMa,EAAOzB,WAAWd,UASzBC,EAAAA,WAAcO,gBACdqC,EAAAA,QAAeL,EAAKvC,WAApBO,gBAIR,IAAAP,EAAAsC,EAAAjB,IAAA,WACArB,GACH4C,eAAAL,EAAAvC,KADUW,QA4Bf,OACInB,WAAYA,EACZgB,eAAgBA,EAChBuB,qBAAsBA,EACtBE,mBAAoBA,EACpBY,yBAfclD,SAAOmD,EAATC,GANPA,IAAeA,MAFxB,IAAAC,EAAA,IAAAjB,EAMQJ,EAAEsB,IAAIC,EAAQ,SAASJ,GAW/B,OAAA,IAAAtD,EACOmC,EAAAhC,OAAAmD,EAAAC,OAAP,OAAA,IAAAd,GAAAG,WAAAY","file":"../../../scripts/mvc/ui/icon-button.js","sourcesContent":["define(\n    [\n        //jquery\n        //backbone\n    ],\n    function() {\n        //=============================================================================\n        /**\n * backbone model for icon buttons\n */\n        var IconButton = Backbone.Model.extend({\n            defaults: {\n                title: \"\",\n                icon_class: \"\",\n                on_click: null,\n                menu_options: null,\n                is_menu_button: true,\n                id: null,\n                href: null,\n                target: null,\n                enabled: true,\n                visible: true,\n                tooltip_config: {}\n            }\n        });\n\n        /**\n *  backbone view for icon buttons\n */\n        var IconButtonView = Backbone.View.extend({\n            initialize: function() {\n                // better rendering this way\n                this.model.attributes.tooltip_config = { placement: \"bottom\" };\n                this.model.bind(\"change\", this.render, this);\n            },\n\n            render: function() {\n                // hide tooltip\n                this.$el.tooltip(\"hide\");\n\n                var new_elem = this.template(this.model.toJSON());\n                // configure tooltip\n                new_elem.tooltip(this.model.get(\"tooltip_config\"));\n                this.$el.replaceWith(new_elem);\n                this.setElement(new_elem);\n                return this;\n            },\n\n            events: {\n                click: \"click\"\n            },\n\n            click: function(event) {\n                // if on_click pass to that function\n                if (_.isFunction(this.model.get(\"on_click\"))) {\n                    this.model.get(\"on_click\")(event);\n                    return false;\n                }\n                // otherwise, bubble up ( to href or whatever )\n                return true;\n            },\n\n            // generate html element\n            template: function(options) {\n                var buffer = 'title=\"' + options.title + '\" class=\"icon-button';\n\n                if (options.is_menu_button) {\n                    buffer += \" menu-button\";\n                }\n\n                buffer += \" \" + options.icon_class;\n\n                if (!options.enabled) {\n                    buffer += \"_disabled\";\n                }\n\n                // close class tag\n                buffer += '\"';\n\n                if (options.id) {\n                    buffer += ' id=\"' + options.id + '\"';\n                }\n\n                buffer += ' href=\"' + options.href + '\"';\n                // add target for href\n                if (options.target) {\n                    buffer += ' target=\"' + options.target + '\"';\n                }\n                // set visibility\n                if (!options.visible) {\n                    buffer += ' style=\"display: none;\"';\n                }\n\n                // enabled/disabled\n                if (options.enabled) {\n                    buffer = \"<a \" + buffer + \"/>\";\n                } else {\n                    buffer = \"<span \" + buffer + \"/>\";\n                }\n\n                // return element\n                return $(buffer);\n            }\n        });\n\n        // define collection\n        var IconButtonCollection = Backbone.Collection.extend({\n            model: IconButton\n        });\n\n        /**\n * menu with multiple icon buttons\n * views are not needed nor used for individual buttons\n */\n        var IconButtonMenuView = Backbone.View.extend({\n            tagName: \"div\",\n\n            initialize: function() {\n                this.render();\n            },\n\n            render: function() {\n                // initialize icon buttons\n                var self = this;\n                this.collection.each(function(button) {\n                    // create and add icon button to menu\n                    var elt = $(\"<a/>\")\n                        .attr(\"href\", \"javascript:void(0)\")\n                        .attr(\"title\", button.attributes.title)\n                        .addClass(\"icon-button menu-button\")\n                        .addClass(button.attributes.icon_class)\n                        .appendTo(self.$el)\n                        .click(button.attributes.on_click);\n\n                    // configure tooltip\n                    if (button.attributes.tooltip_config) {\n                        elt.tooltip(button.attributes.tooltip_config);\n                    }\n\n                    // add popup menu to icon\n                    var menu_options = button.get(\"options\");\n                    if (menu_options) {\n                        make_popupmenu(elt, menu_options);\n                    }\n                });\n\n                // return\n                return this;\n            }\n        });\n\n        /**\n * Returns an IconButtonMenuView for the provided configuration.\n * Configuration is a list of dictionaries where each dictionary\n * defines an icon button. Each dictionary must have the following\n * elements: icon_class, title, and on_click.\n */\n        var create_icon_buttons_menu = function(config, global_config) {\n            // initialize global configuration\n            if (!global_config) global_config = {};\n\n            // create and initialize menu\n            var buttons = new IconButtonCollection(\n                _.map(config, function(button_config) {\n                    return new IconButton(\n                        _.extend(button_config, global_config)\n                    );\n                })\n            );\n\n            // return menu\n            return new IconButtonMenuView({ collection: buttons });\n        };\n\n        //=============================================================================\n        return {\n            IconButton: IconButton,\n            IconButtonView: IconButtonView,\n            IconButtonCollection: IconButtonCollection,\n            IconButtonMenuView: IconButtonMenuView,\n            create_icon_buttons_menu: create_icon_buttons_menu\n        };\n    }\n);\n"]}