{"version":3,"sources":["mvc/ui/ui-frames.js"],"names":["define","FrameView","Backbone","View","extend","initialize","options","self","model","Model","this","setElement","$el","title","placement","$","addClass","append","tooltip","attributes","$title","$header","$option","option","onclick","render","url","$content","html","remove","_","each","content","isFunction","icon","disabled","attr","on","margin","top_min","frame_max","visible","indexOf","defaultOptions","frame","el","rows","_frameInit","cell","_frameResize","frame_list","scroll","_panelRefresh","cols","top","top_max","frame_z","frame_uid","frame_shadow","event","defaults","frame_counter","Galaxy","show","body","buttons","hide","width","height","window","resize","frame_id","del","$frame","fadeOut","trigger","modal","fadeIn","length","type","_toPixelCoord","mousewheel","parseInt","css","DOMMouseScroll","_frameInsert","left","target","id","e","_panelAnimationComplete","x","originalEvent","y","event_xy_delta","event_xy_new","p","mousemove","_toGridCoord","mousedown .frame-scroll-up","mousedown .frame-scroll-down","hasClass","_eventFrameMouseUp","_frameDragStop","_frameIdentify","xy","pageX","pageY","_eventFrameMouseMove","_eventHide","frames","preventDefault","min_dim","_eventPanelScroll_up","Math","max","_panelScroll","_eventPanelScroll_down","_frameOffset","l","closest","_frameScreen","_frameGrid","grid_location","_eventFrameClose","_frameFocus","_eventPanelScroll","srcElement","stopPropagation","detail","_toGrid","px","_toPixel","is_collision_pair","_frameDragStart","sign","animate","top_new","g","screen_location","grid_rank","place_list","sort","i","place","a","b","f","_locationRank","min","loc","j","promise","done","console","delta","substring","new_loc","push","_framePlace","_isCollision","log","has_focus"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-frames.js","sourcesContent":["define([], function() {\n    /** Frame view */\n    var FrameView = Backbone.View.extend({\n        initialize: function(options) {\n            var self = this;\n            this.model =\n                (options && options.model) || new Backbone.Model(options);\n            this.setElement($(\"<div/>\").addClass(\"corner frame\"));\n            this.$el\n                .append(\n                    $(\"<div/>\")\n                        .addClass(\"f-header corner\")\n                        .append($(\"<div/>\").addClass(\"f-title\"))\n                        .append(\n                            $(\"<div/>\")\n                                .addClass(\"f-icon f-close fa fa-close\")\n                                .tooltip({\n                                    title: \"Close\",\n                                    placement: \"bottom\"\n                                })\n                        )\n                )\n                .append($(\"<div/>\").addClass(\"f-content\"))\n                .append(\n                    $(\"<div/>\")\n                        .addClass(\"f-resize f-icon corner fa fa-expand\")\n                        .tooltip({ title: \"Resize\" })\n                )\n                .append($(\"<div/>\").addClass(\"f-cover\"));\n            this.$header = this.$(\".f-header\");\n            this.$title = this.$(\".f-title\");\n            this.$content = this.$(\".f-content\");\n            this.render();\n            this.listenTo(this.model, \"change\", this.render, this);\n        },\n\n        render: function() {\n            var self = this;\n            var options = this.model.attributes;\n            this.$title.html(options.title || \"\");\n            this.$header.find(\".f-icon-left\").remove();\n            _.each(options.menu, function(option) {\n                var $option = $(\"<div/>\")\n                    .addClass(\"f-icon-left\")\n                    .addClass(option.icon);\n                if (_.isFunction(option.disabled) && option.disabled()) {\n                    $option.attr(\"disabled\", true);\n                } else {\n                    $option\n                        .on(\"click\", function() {\n                            option.onclick(self);\n                        })\n                        .tooltip({\n                            title: option.tooltip,\n                            placement: \"bottom\"\n                        });\n                }\n                self.$header.append($option);\n            });\n            if (options.url) {\n                this.$content.html(\n                    $(\"<iframe/>\")\n                        .addClass(\"f-iframe\")\n                        .attr(\"scrolling\", \"auto\")\n                        .attr(\n                            \"src\",\n                            options.url +\n                                (options.url.indexOf(\"?\") === -1 ? \"?\" : \"&\") +\n                                \"widget=True\"\n                        )\n                );\n            } else if (options.content) {\n                _.isFunction(options.content)\n                    ? options.content(self.$content)\n                    : self.$content.html(options.content);\n            }\n        }\n    });\n\n    /** Scratchbook viewer */\n    var View = Backbone.View.extend({\n        defaultOptions: {\n            frame: {\n                // default frame size in cells\n                cols: 6,\n                rows: 3\n            },\n            rows: 1000, // maximum number of rows\n            cell: 130, // cell size in px\n            margin: 5, // margin between frames\n            scroll: 5, // scroll speed\n            top_min: 40, // top margin\n            frame_max: 9, // maximum number of frames\n            visible: true // initial visibility\n        },\n\n        cols: 0, // number of columns\n        top: 0, // scroll/element top\n        top_max: 0, // viewport scrolling state\n        frame_z: 0, // frame z-index\n        frame_counter: 0, // frame counter\n        frame_uid: 0, // unique frame id counter\n        frame_list: {}, // list of all frames\n        frame_shadow: null, // frame shown as placeholder when moving active frames\n        visible: false, // flag indicating if scratchbook viewer is visible or not\n        event: {}, // dictionary keeping track of current event\n\n        initialize: function(options) {\n            var self = this;\n            this.options = _.defaults(options || {}, this.defaultOptions);\n            this.visible = this.options.visible;\n            this.top = this.top_max = this.options.top_min;\n            this.setElement(\n                $(\"<div/>\")\n                    .addClass(\"galaxy-frame\")\n                    .append($(\"<div/>\").addClass(\"frame-background\"))\n                    .append(\n                        $(\"<div/>\").addClass(\n                            \"frame-menu frame-scroll-up fa fa-chevron-up fa-2x\"\n                        )\n                    )\n                    .append(\n                        $(\"<div/>\").addClass(\n                            \"frame-menu frame-scroll-down fa fa-chevron-down fa-2x\"\n                        )\n                    )\n            );\n\n            // initialize shadow to guiding drag/resize events\n            this.frame_shadow = new Backbone.View({\n                el: $(\"<div/>\").addClass(\"corner frame-shadow\")\n            });\n            this.$el.append(this.frame_shadow.$el);\n            this._frameInit(this.frame_shadow, \"#frame-shadow\");\n            this._frameResize(this.frame_shadow, { width: 0, height: 0 });\n            this.frame_list[\"#frame-shadow\"] = this.frame_shadow;\n\n            // initialize panel\n            this.visible ? this.show() : this.hide();\n            this._panelRefresh();\n            $(window).resize(function() {\n                self.visible && self._panelRefresh();\n            });\n        },\n\n        /** Render */\n        render: function() {\n            this.$(\".frame-scroll-up\")[\n                (this.top != this.options.top_min && \"show\") || \"hide\"\n            ]();\n            this.$(\".frame-scroll-down\")[\n                (this.top != this.top_max && \"show\") || \"hide\"\n            ]();\n        },\n\n        /**\n     * Adds and displays a new frame.\n     *\n     * options:\n     *  url     : loaded into an iframe\n     *  content : content is treated as a function or raw HTML, function is passed a single\n     *              argument that is the frame's content DOM element\n     */\n        add: function(options) {\n            if (this.frame_counter >= this.options.frame_max) {\n                Galaxy.modal.show({\n                    title: \"Warning\",\n                    body:\n                        \"You have reached the maximum number of allowed frames (\" +\n                        this.options.frame_max +\n                        \").\",\n                    buttons: {\n                        Close: function() {\n                            Galaxy.modal.hide();\n                        }\n                    }\n                });\n            } else {\n                var frame_id = \"#frame-\" + this.frame_uid++;\n                if ($(frame_id).length !== 0) {\n                    Galaxy.modal.show({\n                        title: \"Error\",\n                        body:\n                            \"This frame already exists. This page might contain multiple frame managers.\",\n                        buttons: {\n                            Close: function() {\n                                Galaxy.modal.hide();\n                            }\n                        }\n                    });\n                } else {\n                    // initialize new frame elements\n                    this.top = this.options.top_min;\n                    var frame = new FrameView(options);\n                    this.$el.append(frame.$el);\n\n                    // set dimensions\n                    options.width = this._toPixelCoord(\n                        \"width\",\n                        this.options.frame.cols\n                    );\n                    options.height = this._toPixelCoord(\n                        \"height\",\n                        this.options.frame.rows\n                    );\n\n                    // set default z-index and add to ui and frame list\n                    this.frame_z = parseInt(frame.$el.css(\"z-index\"));\n                    this.frame_list[frame_id] = frame;\n                    this.frame_counter++;\n                    this._frameInit(frame, frame_id);\n                    this._frameResize(frame, {\n                        width: options.width,\n                        height: options.height\n                    });\n                    this._frameInsert(frame, { top: 0, left: 0 }, true);\n                    !this.visible && this.show();\n                    this.trigger(\"add\");\n                }\n            }\n        },\n\n        /** Remove a frame */\n        del: function(frame) {\n            var self = this;\n            var $frame = frame.$el;\n            $frame.fadeOut(\"fast\", function() {\n                $frame.remove();\n                delete self.frame_list[frame.id];\n                self.frame_counter--;\n                self._panelRefresh(true);\n                self._panelAnimationComplete();\n                self.trigger(\"remove\");\n            });\n        },\n\n        /** Show panel */\n        show: function() {\n            this.visible = true;\n            this.$el.fadeIn(\"fast\");\n            this.trigger(\"show\");\n        },\n\n        /** Hide panel */\n        hide: function() {\n            if (!this.event.type) {\n                this.visible = false;\n                this.$el.fadeOut(\"fast\", function() {\n                    $(this).hide();\n                });\n                this.trigger(\"hide\");\n            }\n        },\n\n        /** Returns the number of frames */\n        length: function() {\n            return this.frame_counter;\n        },\n\n        /*\n        EVENT HANDLING\n    */\n        events: {\n            // global frame events\n            mousemove: \"_eventFrameMouseMove\",\n            mouseup: \"_eventFrameMouseUp\",\n            mouseleave: \"_eventFrameMouseUp\",\n            mousewheel: \"_eventPanelScroll\",\n            DOMMouseScroll: \"_eventPanelScroll\",\n\n            // events fixed to elements\n            \"mousedown .frame\": \"_eventFrameMouseDown\",\n            \"mousedown .frame-background\": \"_eventHide\",\n            \"mousedown .frame-scroll-up\": \"_eventPanelScroll_up\",\n            \"mousedown .frame-scroll-down\": \"_eventPanelScroll_down\",\n            \"mousedown .f-close\": \"_eventFrameClose\"\n        },\n\n        /** Start drag/resize event */\n        _eventFrameMouseDown: function(e) {\n            $(\".tooltip\").hide();\n            if (!this.event.type) {\n                if (\n                    $(e.target).hasClass(\"f-header\") ||\n                    $(e.target).hasClass(\"f-title\")\n                ) {\n                    this.event.type = \"drag\";\n                }\n                if ($(e.target).hasClass(\"f-resize\")) {\n                    this.event.type = \"resize\";\n                }\n                if (this.event.type) {\n                    e.preventDefault();\n                    this.event.target = this._frameIdentify(e.target);\n                    this.event.xy = {\n                        x: e.originalEvent.pageX,\n                        y: e.originalEvent.pageY\n                    };\n                    this._frameDragStart(this.event.target);\n                }\n            }\n        },\n\n        /** Processes drag/resize events */\n        _eventFrameMouseMove: function(e) {\n            if (this.event.type) {\n                // get mouse motion and delta\n                var event_xy_new = {\n                    x: e.originalEvent.pageX,\n                    y: e.originalEvent.pageY\n                };\n                var event_xy_delta = {\n                    x: event_xy_new.x - this.event.xy.x,\n                    y: event_xy_new.y - this.event.xy.y\n                };\n                this.event.xy = event_xy_new;\n\n                // get current screen position and size of frame\n                var p = this._frameScreen(this.event.target);\n\n                // drag/resize event\n                if (this.event.type == \"resize\") {\n                    p.width += event_xy_delta.x;\n                    p.height += event_xy_delta.y;\n                    var min_dim = this.options.cell - this.options.margin - 1;\n                    p.width = Math.max(p.width, min_dim);\n                    p.height = Math.max(p.height, min_dim);\n                    this._frameResize(this.event.target, p);\n                    p.width = this._toGridCoord(\"width\", p.width) + 1;\n                    p.height = this._toGridCoord(\"height\", p.height) + 1;\n                    p.width = this._toPixelCoord(\"width\", p.width);\n                    p.height = this._toPixelCoord(\"height\", p.height);\n                    this._frameResize(this.frame_shadow, p);\n                    this._frameInsert(this.frame_shadow, {\n                        top: this._toGridCoord(\"top\", p.top),\n                        left: this._toGridCoord(\"left\", p.left)\n                    });\n                } else if (this.event.type == \"drag\") {\n                    p.left += event_xy_delta.x;\n                    p.top += event_xy_delta.y;\n                    this._frameOffset(this.event.target, p);\n                    var l = {\n                        top: this._toGridCoord(\"top\", p.top),\n                        left: this._toGridCoord(\"left\", p.left)\n                    };\n                    l.left !== 0 && l.left++;\n                    this._frameInsert(this.frame_shadow, l);\n                }\n            }\n        },\n\n        /** Stop drag/resize events */\n        _eventFrameMouseUp: function(e) {\n            if (this.event.type) {\n                this._frameDragStop(this.event.target);\n                this.event.type = null;\n            }\n        },\n\n        /** Destroy a frame */\n        _eventFrameClose: function(e) {\n            if (!this.event.type) {\n                e.preventDefault();\n                this.del(this._frameIdentify(e.target));\n            }\n        },\n\n        /** Hide all frames */\n        _eventHide: function(e) {\n            !this.event.type && this.hide();\n        },\n\n        /** Fired when scrolling occurs on panel */\n        _eventPanelScroll: function(e) {\n            if (!this.event.type && this.visible) {\n                // Stop propagation if scrolling is happening inside a frame.\n                // TODO: could propagate scrolling if at top/bottom of frame.\n                var frames = $(e.srcElement).parents(\".frame\");\n                if (frames.length !== 0) {\n                    e.stopPropagation();\n                } else {\n                    e.preventDefault();\n                    this._panelScroll(\n                        e.originalEvent.detail\n                            ? e.originalEvent.detail\n                            : e.originalEvent.wheelDelta / -3\n                    );\n                }\n            }\n        },\n\n        /** Handle scroll up event */\n        _eventPanelScroll_up: function(e) {\n            if (!this.event.type) {\n                e.preventDefault();\n                this._panelScroll(-this.options.scroll);\n            }\n        },\n\n        /** Handle scroll down */\n        _eventPanelScroll_down: function(e) {\n            if (!this.event.type) {\n                e.preventDefault();\n                this._panelScroll(this.options.scroll);\n            }\n        },\n\n        /*\n        FRAME EVENTS SUPPORT\n    */\n\n        /** Identify the target frame */\n        _frameIdentify: function(target) {\n            return this.frame_list[\n                \"#\" +\n                    $(target)\n                        .closest(\".frame\")\n                        .attr(\"id\")\n            ];\n        },\n\n        /** Provides drag support */\n        _frameDragStart: function(frame) {\n            this._frameFocus(frame, true);\n            var p = this._frameScreen(frame);\n            this._frameResize(this.frame_shadow, p);\n            this._frameGrid(this.frame_shadow, frame.grid_location);\n            frame.grid_location = null;\n            this.frame_shadow.$el.show();\n            $(\".f-cover\").show();\n        },\n\n        /** Removes drag support */\n        _frameDragStop: function(frame) {\n            this._frameFocus(frame, false);\n            var p = this._frameScreen(this.frame_shadow);\n            this._frameResize(frame, p);\n            this._frameGrid(frame, this.frame_shadow.grid_location, true);\n            this.frame_shadow.grid_location = null;\n            this.frame_shadow.$el.hide();\n            $(\".f-cover\").hide();\n            this._panelAnimationComplete();\n        },\n\n        /*\n        GRID/PIXEL CONVERTER\n    */\n\n        /** Converts a pixel to a grid dimension */\n        _toGridCoord: function(type, px) {\n            var sign = type == \"width\" || type == \"height\" ? 1 : -1;\n            type == \"top\" && (px -= this.top);\n            return parseInt(\n                (px + sign * this.options.margin) / this.options.cell,\n                10\n            );\n        },\n\n        /** Converts a grid to a pixels dimension */\n        _toPixelCoord: function(type, g) {\n            var sign = type == \"width\" || type == \"height\" ? 1 : -1;\n            var px = g * this.options.cell - sign * this.options.margin;\n            type == \"top\" && (px += this.top);\n            return px;\n        },\n\n        /** Converts a pixel to a grid coordinate set */\n        _toGrid: function(px) {\n            return {\n                top: this._toGridCoord(\"top\", px.top),\n                left: this._toGridCoord(\"left\", px.left),\n                width: this._toGridCoord(\"width\", px.width),\n                height: this._toGridCoord(\"height\", px.height)\n            };\n        },\n\n        /** Converts a pixel to a grid coordinate set */\n        _toPixel: function(g) {\n            return {\n                top: this._toPixelCoord(\"top\", g.top),\n                left: this._toPixelCoord(\"left\", g.left),\n                width: this._toPixelCoord(\"width\", g.width),\n                height: this._toPixelCoord(\"height\", g.height)\n            };\n        },\n\n        /* \n        COLLISION DETECTION\n    */\n\n        /** Check collisions for a grid coordinate set */\n        _isCollision: function(g) {\n            function is_collision_pair(a, b) {\n                return !(\n                    a.left > b.left + b.width - 1 ||\n                    a.left + a.width - 1 < b.left ||\n                    a.top > b.top + b.height - 1 ||\n                    a.top + a.height - 1 < b.top\n                );\n            }\n            for (var i in this.frame_list) {\n                var frame = this.frame_list[i];\n                if (\n                    frame.grid_location !== null &&\n                    is_collision_pair(g, frame.grid_location)\n                ) {\n                    return true;\n                }\n            }\n            return false;\n        },\n\n        /** Return location/grid rank */\n        _locationRank: function(loc) {\n            return loc.top * this.cols + loc.left;\n        },\n\n        /*\n        PANEL/WINDOW FUNCTIONS\n    */\n\n        /** Refresh panel */\n        _panelRefresh: function(animate) {\n            this.cols = parseInt($(window).width() / this.options.cell, 10) + 1;\n            this._frameInsert(null, null, animate);\n        },\n\n        /** Complete panel animation / frames not moving */\n        _panelAnimationComplete: function() {\n            var self = this;\n            $(\".frame\")\n                .promise()\n                .done(function() {\n                    self._panelScroll(0, true);\n                });\n        },\n\n        /** Scroll panel */\n        _panelScroll: function(delta, animate) {\n            var top_new = this.top - this.options.scroll * delta;\n            top_new = Math.max(top_new, this.top_max);\n            top_new = Math.min(top_new, this.options.top_min);\n            if (this.top != top_new) {\n                for (var i in this.frame_list) {\n                    var frame = this.frame_list[i];\n                    if (frame.grid_location !== null) {\n                        var screen_location = {\n                            top:\n                                frame.screen_location.top -\n                                (this.top - top_new),\n                            left: frame.screen_location.left\n                        };\n                        this._frameOffset(frame, screen_location, animate);\n                    }\n                }\n                this.top = top_new;\n            }\n            this.render();\n        },\n\n        /*\n        FRAME FUNCTIONS\n    */\n\n        /** Initialize a new frame */\n        _frameInit: function(frame, id) {\n            frame.id = id;\n            frame.screen_location = {};\n            frame.grid_location = {};\n            frame.grid_rank = null;\n            frame.$el.attr(\"id\", id.substring(1));\n        },\n\n        /** Insert frame at given location */\n        _frameInsert: function(frame, new_loc, animate) {\n            var self = this;\n            var place_list = [];\n            if (frame) {\n                frame.grid_location = null;\n                place_list.push([frame, this._locationRank(new_loc)]);\n            }\n            _.each(this.frame_list, function(f) {\n                if (f.grid_location !== null) {\n                    f.grid_location = null;\n                    place_list.push([f, f.grid_rank]);\n                }\n            });\n            place_list.sort(function(a, b) {\n                return a[1] < b[1] ? -1 : a[1] > b[1] ? 1 : 0;\n            });\n            _.each(place_list, function(place) {\n                self._framePlace(place[0], animate);\n            });\n            this.top_max = 0;\n            _.each(this.frame_list, function(f) {\n                if (f.grid_location !== null) {\n                    self.top_max = Math.max(\n                        self.top_max,\n                        f.grid_location.top + f.grid_location.height\n                    );\n                }\n            });\n            this.top_max =\n                $(window).height() -\n                this.top_max * this.options.cell -\n                2 * this.options.margin;\n            this.top_max = Math.min(this.top_max, this.options.top_min);\n            this.render();\n        },\n\n        /** Naive frame placement */\n        _framePlace: function(frame, animate) {\n            frame.grid_location = null;\n            var g = this._toGrid(this._frameScreen(frame));\n            var done = false;\n            for (var i = 0; i < this.options.rows; i++) {\n                for (var j = 0; j < Math.max(1, this.cols - g.width); j++) {\n                    g.top = i;\n                    g.left = j;\n                    if (!this._isCollision(g)) {\n                        done = true;\n                        break;\n                    }\n                }\n                if (done) {\n                    break;\n                }\n            }\n            if (done) {\n                this._frameGrid(frame, g, animate);\n            } else {\n                console.log(\"Grid dimensions exceeded.\");\n            }\n        },\n\n        /** Handle frame focussing */\n        _frameFocus: function(frame, has_focus) {\n            frame.$el.css(\"z-index\", this.frame_z + (has_focus ? 1 : 0));\n        },\n\n        /** New left/top position frame */\n        _frameOffset: function(frame, p, animate) {\n            frame.screen_location.left = p.left;\n            frame.screen_location.top = p.top;\n            if (animate) {\n                this._frameFocus(frame, true);\n                var self = this;\n                frame.$el.animate(\n                    { top: p.top, left: p.left },\n                    \"fast\",\n                    function() {\n                        self._frameFocus(frame, false);\n                    }\n                );\n            } else {\n                frame.$el.css({ top: p.top, left: p.left });\n            }\n        },\n\n        /** Resize frame */\n        _frameResize: function(frame, p) {\n            frame.$el.css({ width: p.width, height: p.height });\n            frame.screen_location.width = p.width;\n            frame.screen_location.height = p.height;\n        },\n\n        /** Push frame to new grid location */\n        _frameGrid: function(frame, l, animate) {\n            frame.grid_location = l;\n            this._frameOffset(frame, this._toPixel(l), animate);\n            frame.grid_rank = this._locationRank(l);\n        },\n\n        /** Get frame dimensions */\n        _frameScreen: function(frame) {\n            var p = frame.screen_location;\n            return {\n                top: p.top,\n                left: p.left,\n                width: p.width,\n                height: p.height\n            };\n        }\n    });\n\n    return {\n        View: View\n    };\n});\n"]}