{"version":3,"sources":["mvc/ui/ui-table.js"],"names":["define","Utils","View","Backbone","extend","initialize","options","onchange","content","ondblclick","onconfirm","cls","cls_tr","this","_template","$thead","$","setElement","$tbody","_row","$tmessage","events","click","addHeader","$el","row","append","appendHeader","add","width","align","wrapper","css","id","fade","_commit","prepend","get","del","item","find","length","remove","delAll","empty","row_count","value","new_value","selectable","before","attr","removeClass","addClass","after","undefined","size","hide","fadeIn","_onclick","e","old_value","target","_ondblclick","_refresh","show"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-table.js","sourcesContent":["/** This class creates a ui table element. */\ndefine([\"utils/utils\"], function(Utils) {\n    var View = Backbone.View.extend({\n        initialize: function(options) {\n            this.options = Utils.merge(options, {\n                content: \"No content available.\",\n                onchange: null,\n                ondblclick: null,\n                onconfirm: null,\n                cls: \"ui-table\",\n                selectable: true,\n                cls_tr: \"\"\n            });\n            this.setElement(this._template());\n            this.$thead = this.$(\"thead\");\n            this.$tbody = this.$(\"tbody\");\n            this.$tmessage = this.$(\"tmessage\");\n            this.row = this._row();\n            this.row_count = 0;\n        },\n\n        events: {\n            click: \"_onclick\",\n            dblclick: \"_ondblclick\"\n        },\n\n        /** Add cell to header row */\n        addHeader: function($el) {\n            this.row.append($(\"<th/>\").append($el));\n        },\n\n        /** Append header row to table */\n        appendHeader: function() {\n            this.$thead.append(this.row);\n            this.row = $(\"<tr/>\");\n        },\n\n        /** Add cell to row */\n        add: function($el, width, align) {\n            var wrapper = $(\"<td/>\");\n            if (width) {\n                wrapper.css(\"width\", width);\n            }\n            if (align) {\n                wrapper.css(\"text-align\", align);\n            }\n            this.row.append(wrapper.append($el));\n        },\n\n        /** Append row to table */\n        append: function(id, fade) {\n            this._commit(id, fade, false);\n        },\n\n        /** Prepend row to table */\n        prepend: function(id, fade) {\n            this._commit(id, fade, true);\n        },\n\n        /** Helper to get row element */\n        get: function(id) {\n            return this.$(\"#\" + id);\n        },\n\n        /** Delete row by id */\n        del: function(id) {\n            var item = this.$tbody.find(\"#\" + id);\n            if (item.length > 0) {\n                item.remove();\n                this.row_count--;\n                this._refresh();\n            }\n        },\n\n        /** Delete all rows */\n        delAll: function() {\n            this.$tbody.empty();\n            this.row_count = 0;\n            this._refresh();\n        },\n\n        /** Set a value i.e. selects/highlights a particular row by id */\n        value: function(new_value) {\n            if (this.options.selectable) {\n                this.before = this.$tbody.find(\".current\").attr(\"id\");\n                if (new_value !== undefined) {\n                    this.$tbody.find(\"tr\").removeClass(\"current\");\n                    if (new_value) {\n                        this.$tbody.find(\"#\" + new_value).addClass(\"current\");\n                    }\n                }\n                var after = this.$tbody.find(\".current\").attr(\"id\");\n                if (after === undefined) {\n                    return null;\n                } else {\n                    if (after != this.before && this.options.onchange) {\n                        this.options.onchange(new_value);\n                    }\n                    return after;\n                }\n            }\n        },\n\n        /** Return the number of rows */\n        size: function() {\n            return this.$tbody.find(\"tr\").length;\n        },\n\n        /** Helper to append rows */\n        _commit: function(id, fade, prepend) {\n            this.del(id);\n            this.row.attr(\"id\", id);\n            if (prepend) {\n                this.$tbody.prepend(this.row);\n            } else {\n                this.$tbody.append(this.row);\n            }\n            if (fade) {\n                this.row.hide();\n                this.row.fadeIn();\n            }\n            this.row = this._row();\n            this.row_count++;\n            this._refresh();\n        },\n\n        /** Helper to create new row */\n        _row: function() {\n            return $('<tr class=\"' + this.options.cls_tr + '\"></tr>');\n        },\n\n        /** Handles onclick events */\n        _onclick: function(e) {\n            var old_value = this.value();\n            var new_value = $(e.target)\n                .closest(\"tr\")\n                .attr(\"id\");\n            if (new_value != \"\") {\n                if (new_value && old_value != new_value) {\n                    if (this.options.onconfirm) {\n                        this.options.onconfirm(new_value);\n                    } else {\n                        this.value(new_value);\n                    }\n                }\n            }\n        },\n\n        /** Handles ondblclick events */\n        _ondblclick: function(e) {\n            var value = this.value();\n            if (value && this.options.ondblclick) {\n                this.options.ondblclick(value);\n            }\n        },\n\n        /** Refresh helper */\n        _refresh: function() {\n            if (this.row_count == 0) {\n                this.$tmessage.show();\n            } else {\n                this.$tmessage.hide();\n            }\n        },\n\n        /** Template */\n        _template: function() {\n            return (\n                \"<div>\" +\n                '<table class=\"' +\n                this.options.cls +\n                '\">' +\n                \"<thead/>\" +\n                \"<tbody/>\" +\n                \"</table>\" +\n                \"<tmessage>\" +\n                this.options.content +\n                \"</tmessage>\" +\n                \"<div>\"\n            );\n        }\n    });\n\n    return {\n        View: View\n    };\n});\n"]}