{"version":3,"sources":["mvc/ui/ui-popover.js"],"names":["define","Utils","View","Backbone","extend","optionsDefault","with_close","title","placement","initialize","options","this","setElement","_template","uid","_","defaults","parent","append","el","container","$title","$","body","self","on","e","visible","is","target","has","length","hide","render","$el","html","_get_placement","removeClass","addClass","$close","off","show","newTitle","undefined","empty","$body","remove","container_width","top","left","container_position","$container","height","indexOf","width","position","container_height","_get_height","_get_width","parseInt","css"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-popover.js","sourcesContent":["/**\n * Popover wrapper\n*/\ndefine([\"utils/utils\"], function(Utils) {\n    var View = Backbone.View.extend({\n        optionsDefault: {\n            with_close: true,\n            title: null,\n            placement: \"top\",\n            container: \"body\",\n            body: null\n        },\n\n        initialize: function(options) {\n            this.setElement(this._template());\n            this.uid = Utils.uid();\n            this.options = _.defaults(options || {}, this.optionsDefault);\n            this.options.container.parent().append(this.el);\n            this.$title = this.$(\".popover-title-label\");\n            this.$close = this.$(\".popover-close\");\n            this.$body = this.$(\".popover-content\");\n\n            // add initial content\n            this.options.body && this.append(this.options.body);\n\n            // add event to hide if click is outside of popup and not on container\n            var self = this;\n            $(\"body\").on(\"mousedown.\" + this.uid, function(e) {\n                // the 'is' for buttons that trigger popups\n                // the 'has' for icons within a button that triggers a popup\n                self.visible &&\n                    !$(self.options.container).is(e.target) &&\n                    !$(self.el).is(e.target) &&\n                    $(self.el).has(e.target).length === 0 &&\n                    self.hide();\n            });\n        },\n\n        /**\n     * Render popover\n    */\n        render: function() {\n            this.$title.html(this.options.title);\n            this.$el\n                .removeClass()\n                .addClass(\"ui-popover popover fade in\")\n                .addClass(this.options.placement);\n            this.$el.css(this._get_placement(this.options.placement));\n\n            // configure close option\n            var self = this;\n            if (this.options.with_close) {\n                this.$close\n                    .on(\"click\", function() {\n                        self.hide();\n                    })\n                    .show();\n            } else {\n                this.$close.off().hide();\n            }\n        },\n\n        /**\n     * Set the popover title\n     * @params{ String }    newTitle    - New popover title\n    */\n        title: function(newTitle) {\n            if (newTitle !== undefined) {\n                this.options.title = newTitle;\n                this.$title.html(newTitle);\n            }\n        },\n\n        /**\n     * Show popover\n    */\n        show: function() {\n            this.render();\n            this.$el.show();\n            this.visible = true;\n        },\n\n        /**\n     * Hide popover\n    */\n        hide: function() {\n            this.$el.hide();\n            this.visible = false;\n        },\n\n        /**\n     * Append new content to the popover\n     * @params{ Object }  $el - Dom element\n    */\n        append: function($el) {\n            this.$body.append($el);\n        },\n\n        /**\n     * Remove all content\n    */\n        empty: function() {\n            this.$body.empty();\n        },\n\n        /**\n     * Remove popover\n    */\n        remove: function() {\n            $(\"body\").off(\"mousedown.\" + this.uid);\n            this.$el.remove();\n        },\n\n        /**\n     * Improve popover location/placement\n    */\n        _get_placement: function(placement) {\n            // get popover dimensions\n            var width = this._get_width(this.$el);\n            var height = this.$el.height();\n\n            // get container details\n            var $container = this.options.container;\n            var container_width = this._get_width($container);\n            var container_height = this._get_height($container);\n            var container_position = $container.position();\n\n            // get position\n            var top, left;\n            top = left = 0;\n            if ([\"top\", \"bottom\"].indexOf(placement) != -1) {\n                left =\n                    container_position.left -\n                    width +\n                    (container_width + width) / 2;\n                switch (placement) {\n                    case \"top\":\n                        top = container_position.top - height - 5;\n                        break;\n                    case \"bottom\":\n                        top = container_position.top + container_height + 5;\n                        break;\n                }\n            } else {\n                top =\n                    container_position.top -\n                    height +\n                    (container_height + height) / 2;\n                switch (placement) {\n                    case \"right\":\n                        left = container_position.left + container_width;\n                        break;\n                }\n            }\n            return { top: top, left: left };\n        },\n\n        /**\n     * Returns padding/margin corrected width\n    */\n        _get_width: function($el) {\n            return (\n                $el.width() +\n                parseInt($el.css(\"padding-left\")) +\n                parseInt($el.css(\"margin-left\")) +\n                parseInt($el.css(\"padding-right\")) +\n                parseInt($el.css(\"margin-right\"))\n            );\n        },\n\n        /**\n     * Returns padding corrected height\n    */\n        _get_height: function($el) {\n            return (\n                $el.height() +\n                parseInt($el.css(\"padding-top\")) +\n                parseInt($el.css(\"padding-bottom\"))\n            );\n        },\n\n        /**\n     * Return the popover template\n    */\n        _template: function(options) {\n            return (\n                '<div class=\"ui-popover popover fade in\">' +\n                '<div class=\"arrow\"/>' +\n                '<div class=\"popover-title\">' +\n                '<div class=\"popover-title-label\"/>' +\n                '<div class=\"popover-close fa fa-times-circle\"/>' +\n                \"</div>\" +\n                '<div class=\"popover-content\"/>' +\n                \"</div>\"\n            );\n        }\n    });\n\n    return {\n        View: View\n    };\n});\n"]}