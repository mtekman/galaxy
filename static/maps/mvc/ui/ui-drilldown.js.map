{"version":3,"sources":["mvc/ui/ui-drilldown.js"],"names":["define","Utils","Options","View","BaseIcons","extend","initialize","options","multiple","type","display","call","this","_setValue","new_value","prototype","undefined","self","_","each","values","list","header_index","v","_setState","element","$subgroup","header_id","is_expanded","$button","$","show","removeClass","addClass","hide","_templateOptions","attach","$el","find","iterate","header","data","value","$group","has_options","level","length","new_header","slice","append","label","uid","push","_templateOption","name","$tmpl","model","get","_template","attr","id"],"mappings":"aACAA,QAAQ,cAAe,qBAAsB,SAASC,EAAOC,GAmHzD,OACIC,KArHRD,EAAAE,UAAAC,QACQC,WAAA,SAAeC,GACfJ,EAAOD,KAAQE,EAAUC,SAAO,WAChCC,EAAYE,SAAA,YAAAD,EAAAE,KACRF,EAAQE,UAAOF,UAAQG,WAAWC,KAAlCC,KAAAL,IAMJM,UAAW,SAASC,GAApBD,GADAX,EAAAE,UAAAW,UAAAF,UAAAF,KAAAC,KAAAE,QAEsBC,IAAlBb,GAEkBc,OAAdF,GAIAF,KAAIK,aACJ,CACAC,IAAEC,EAAKC,KACHA,EAAIC,EAAOJ,QAAKK,GAAhBR,GAAAA,GACAI,EAAAA,KAAEC,EAAF,SAAaI,GACTN,IAAAA,EAAKO,EAAAA,aAAmBD,GAC3BL,EAFDC,KAAAE,EAAA,SAAAI,GAFJR,EAAAO,UAAAC,GAAA,SAYJD,UAAIE,SAAYC,EAAOC,GACvBC,IAAAA,EAAajB,KAAAkB,EAAA,WAAeF,GACxBA,EAAJhB,KAAiBkB,EAAA,aAAAH,GACbD,EAAAA,KAAAA,cAAAE,GACAC,GAFJH,EAKOK,OACHL,EACAG,YACKG,kBAERC,SAAA,qBAJGP,EAAUQ,OAOlBL,EACAM,YAAkB,mBACVlB,SAAJ,oBAKIkB,iBAAIN,WADR,SAASO,EAAOC,EAAKV,GAOrB,IAAAE,EAAAQ,EAAAC,KAAA,WAAAX,GACAE,EAASU,GAAAA,QAAehC,WACpBiC,EAASA,UAAUb,GAAnBE,EAAAY,KAAA,kBAKIxB,SAAAA,EAAKK,EAAAA,EAAmBoB,GACxBF,EAAIG,MACJ,IAAA,IAAIC,KAAAA,EAAa,CACb,IAAAC,EAAIlB,EAAY1B,GAChB2C,EAAcd,EAAEvB,SACX0B,EAAS1B,QAAAuC,OAAYnB,EAE1BoB,EAAIrB,EAAcsB,MAAF,GAGhBL,EAAAA,aACIb,EAAEY,OACGO,EADLD,MAEKC,GAEOC,IAAAA,EAAAA,EAAOL,UACPH,GAAAA,EAAOG,CAFU,IAJjClB,EAAA1B,EAAAkD,MAUAJ,EAAWK,EAAKzB,WAChBY,SAAQb,UAAiBnB,GACzBoC,SAAcjB,yCACdU,EAAeT,EAAAA,UACZM,SAAA,YAAAN,GACHgB,SACI1B,yBACIiC,EAAAA,OACAR,EAAAA,UAHRO,OAAApB,GAMHoB,OACYN,EAAbU,iBACHH,MAAAL,EAAAS,KACJZ,MAAAG,EAAAH,UAIOa,EAAYC,KAAMC,GAC1BlB,EAAAb,EAAAmB,EAAAtC,QAAAwC,GAvG4BJ,EAAAM,OAAAvB,GAuFhBU,EAAOO,EAAQhB,QAoBpBgB,EAAAM,OACEhC,EACJgB,iBAERiB,MAAAL,EAAAS,KA/GLZ,MAAAG,EAAAH,SAkHAa,EAAAN,OAAAN,IA9DYd,IAAAA,EAAAA,KACIZ,KAAAA,gBAgDR,IAAIsC,EAAQzB,EAAE,UAEd,OADAS,EAAQgB,EAAO3C,KAAK4C,MAAMC,IAAI,SACvBF,GAIXG,UAAW,WACP,OAAO5B,EAAE,UACJG,SAAS,uCACT0B,KAAK,KAAM/C,KAAK4C,MAAMI","file":"../../../scripts/mvc/ui/ui-drilldown.js","sourcesContent":["/** This class creates/wraps a drill down element. */\ndefine([\"utils/utils\", \"mvc/ui/ui-options\"], function(Utils, Options) {\n    var View = Options.BaseIcons.extend({\n        initialize: function(options) {\n            options.type = options.display || \"checkbox\";\n            options.multiple = options.type == \"checkbox\";\n            Options.BaseIcons.prototype.initialize.call(this, options);\n        },\n\n        /** Set states for selected values */\n        _setValue: function(new_value) {\n            Options.BaseIcons.prototype._setValue.call(this, new_value);\n            if (\n                new_value !== undefined &&\n                new_value !== null &&\n                this.header_index\n            ) {\n                var self = this;\n                var values = $.isArray(new_value) ? new_value : [new_value];\n                _.each(values, function(v) {\n                    var list = self.header_index[v];\n                    _.each(list, function(element) {\n                        self._setState(element, true);\n                    });\n                });\n            }\n        },\n\n        /** Expand/collapse a sub group */\n        _setState: function(header_id, is_expanded) {\n            var $button = this.$(\".button-\" + header_id);\n            var $subgroup = this.$(\".subgroup-\" + header_id);\n            $button.data(\"is_expanded\", is_expanded);\n            if (is_expanded) {\n                $subgroup.show();\n                $button\n                    .removeClass(\"fa-plus-square\")\n                    .addClass(\"fa-minus-square\");\n            } else {\n                $subgroup.hide();\n                $button\n                    .removeClass(\"fa-minus-square\")\n                    .addClass(\"fa-plus-square\");\n            }\n        },\n\n        /** Template to create options tree */\n        _templateOptions: function() {\n            var self = this;\n            this.header_index = {};\n\n            // attach event handler\n            function attach($el, header_id) {\n                var $button = $el.find(\".button-\" + header_id);\n                $button.on(\"click\", function() {\n                    self._setState(header_id, !$button.data(\"is_expanded\"));\n                });\n            }\n\n            // recursive function which iterates through options\n            function iterate($tmpl, options, header) {\n                header = header || [];\n                for (var i in options) {\n                    var level = options[i];\n                    var has_options = level.options && level.options.length > 0;\n                    var new_header = header.slice(0);\n                    self.header_index[level.value] = new_header.slice(0);\n                    var $group = $(\"<div/>\");\n                    if (has_options) {\n                        var header_id = Utils.uid();\n                        var $button = $(\"<span/>\")\n                            .addClass(\"button-\" + header_id)\n                            .addClass(\"ui-drilldown-button fa fa-plus-square\");\n                        var $subgroup = $(\"<div/>\")\n                            .addClass(\"subgroup-\" + header_id)\n                            .addClass(\"ui-drilldown-subgroup\");\n                        $group.append(\n                            $(\"<div/>\")\n                                .append($button)\n                                .append(\n                                    self._templateOption({\n                                        label: level.name,\n                                        value: level.value\n                                    })\n                                )\n                        );\n                        new_header.push(header_id);\n                        iterate($subgroup, level.options, new_header);\n                        $group.append($subgroup);\n                        attach($group, header_id);\n                    } else {\n                        $group.append(\n                            self._templateOption({\n                                label: level.name,\n                                value: level.value\n                            })\n                        );\n                    }\n                    $tmpl.append($group);\n                }\n            }\n\n            // iterate through options and create dom\n            var $tmpl = $(\"<div/>\");\n            iterate($tmpl, this.model.get(\"data\"));\n            return $tmpl;\n        },\n\n        /** Template for drill down view */\n        _template: function() {\n            return $(\"<div/>\")\n                .addClass(\"ui-options-list drilldown-container\")\n                .attr(\"id\", this.model.id);\n        }\n    });\n\n    return {\n        View: View\n    };\n});\n"]}