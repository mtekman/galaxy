{"version":3,"sources":["mvc/ui/ui-select-default.js"],"names":["define","Utils","Buttons","View","Backbone","extend","initialize","options","this","self","data","data2","model","uid","cls","error_text","empty_text","visible","wait","multiple","searchable","optional","disabled","readonly","onchange","value","individual","pagesize","on","get","listenTo","_changeData","_changeDisabled","_changeWait","render","addClass","trigger","_changeValue","_changeVisible","$dropdown","$resize_icon","$el","currentY","event","pageY","attr","currentHeight","$","off","_getValue","_renderClassic","append","show","$select","all_button","onclick","new_value","removeClass","term","String","height","minHeight","Math","max","push","option","hide","text","tags","matched_tags","select2","closeOnSelect","results","found","_","each","_match","callback","more","prepend","escape","toUpperCase","label","length","index","order","id","_setValue","first","query","q","filter","e","undefined","tag","slice","page","formatResult","result","reduce","memo","find","remove","html","set","disable","v","sorter","prop","setOnChange","isArray","findWhere","d","val","exists","selected","unwait","enable","add","keep","sort","update","a","b","isEmpty"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-select-default.js","sourcesContent":["/**\n *  This class creates/wraps a default html select field as backbone class.\n */\ndefine([\"utils/utils\", \"mvc/ui/ui-buttons\"], function(Utils, Buttons) {\n    var View = Backbone.View.extend({\n        initialize: function(options) {\n            var self = this;\n            this.data = [];\n            this.data2 = [];\n            this.model =\n                (options && options.model) ||\n                new Backbone.Model({\n                    id: Utils.uid(),\n                    cls: \"ui-select\",\n                    error_text: \"No options available\",\n                    empty_text: \"Nothing selected\",\n                    visible: true,\n                    wait: false,\n                    multiple: false,\n                    searchable: true,\n                    optional: false,\n                    disabled: false,\n                    readonly: false,\n                    onchange: function() {},\n                    value: null,\n                    individual: false,\n                    pagesize: 20\n                }).set(options);\n            this.on(\"change\", function() {\n                self.model.get(\"onchange\") &&\n                    self.model.get(\"onchange\")(self.value());\n            });\n            this.listenTo(this.model, \"change:data\", this._changeData, this);\n            this.listenTo(\n                this.model,\n                \"change:disabled\",\n                this._changeDisabled,\n                this\n            );\n            this.listenTo(this.model, \"change:wait\", this._changeWait, this);\n            this.listenTo(\n                this.model,\n                \"change:visible\",\n                this._changeVisible,\n                this\n            );\n            this.listenTo(this.model, \"change:value\", this._changeValue, this);\n            this.listenTo(\n                this.model,\n                \"change:multiple change:searchable change:cls change:id\",\n                this.render,\n                this\n            );\n            this.render();\n        },\n\n        render: function() {\n            var self = this;\n            this.model.get(\"searchable\")\n                ? this._renderSearchable()\n                : this._renderClassic();\n            this.$el\n                .addClass(this.model.get(\"cls\"))\n                .attr(\"id\", this.model.get(\"id\"));\n            this.$select\n                .empty()\n                .addClass(\"select\")\n                .attr(\"id\", this.model.get(\"id\") + \"_select\")\n                .prop(\"multiple\", this.model.get(\"multiple\"))\n                .on(\"change\", function() {\n                    self.value(self._getValue());\n                    self.trigger(\"change\");\n                });\n            this._changeData();\n            this._changeWait();\n            this._changeVisible();\n            this._changeDisabled();\n        },\n\n        /** Renders the classic selection field */\n        _renderClassic: function() {\n            var self = this;\n            this.$el\n                .addClass(\n                    this.model.get(\"multiple\")\n                        ? \"ui-select-multiple\"\n                        : \"ui-select\"\n                )\n                .append((this.$select = $(\"<select/>\")))\n                .append((this.$dropdown = $(\"<div/>\")))\n                .append(\n                    (this.$resize = $(\"<div/>\").append(\n                        (this.$resize_icon = $(\"<i/>\"))\n                    ))\n                );\n            if (this.model.get(\"multiple\")) {\n                this.$dropdown.hide();\n                this.$resize_icon\n                    .addClass(\"fa fa-angle-double-right fa-rotate-45\")\n                    .show();\n                this.$resize\n                    .removeClass()\n                    .addClass(\"icon-resize\")\n                    .show()\n                    .off(\"mousedown\")\n                    .on(\"mousedown\", function(event) {\n                        var currentY = event.pageY;\n                        var currentHeight = self.$select.height();\n                        self.minHeight = self.minHeight || currentHeight;\n                        $(\"#dd-helper\")\n                            .show()\n                            .on(\"mousemove\", function(event) {\n                                self.$select.height(\n                                    Math.max(\n                                        currentHeight +\n                                            (event.pageY - currentY),\n                                        self.minHeight\n                                    )\n                                );\n                            })\n                            .on(\"mouseup mouseleave\", function() {\n                                $(\"#dd-helper\")\n                                    .hide()\n                                    .off();\n                            });\n                    });\n            } else {\n                this.$dropdown.show();\n                this.$resize.hide();\n                this.$resize_icon.hide();\n            }\n        },\n\n        /** Renders the default select2 field */\n        _renderSearchable: function() {\n            var self = this;\n            this.$el\n                .append((this.$select = $(\"<div/>\")))\n                .append((this.$dropdown = $(\"<div/>\")));\n            this.$dropdown.hide();\n            if (!this.model.get(\"multiple\")) {\n                this.$dropdown.show().on(\"click\", function() {\n                    self.$select.select2 && self.$select.select2(\"open\");\n                });\n            }\n            this.all_button = null;\n            if (\n                this.model.get(\"multiple\") &&\n                !this.model.get(\"individual\") &&\n                !this.model.get(\"readonly\")\n            ) {\n                this.all_button = new Buttons.ButtonCheck({\n                    onclick: function() {\n                        var new_value = [];\n                        self.all_button.value() !== 0 &&\n                            _.each(self.model.get(\"data\"), function(option) {\n                                new_value.push(option.value);\n                            });\n                        self.value(new_value);\n                        self.trigger(\"change\");\n                    }\n                });\n                this.$el.prepend(this.all_button.$el);\n            }\n        },\n\n        /** Matches a search term with a given text */\n        _match: function(term, text) {\n            return (\n                !term ||\n                term == \"\" ||\n                String(text)\n                    .toUpperCase()\n                    .indexOf(term.toUpperCase()) >= 0\n            );\n        },\n\n        /** Updates the selection options */\n        _changeData: function() {\n            var self = this;\n            this.data = [];\n            if (!this.model.get(\"multiple\") && this.model.get(\"optional\")) {\n                this.data.push({\n                    value: \"__null__\",\n                    label: self.model.get(\"empty_text\")\n                });\n            }\n            _.each(this.model.get(\"data\"), function(option) {\n                self.data.push(option);\n            });\n            if (this.length() == 0) {\n                this.data.push({\n                    value: \"__null__\",\n                    label: this.model.get(\"error_text\")\n                });\n            }\n            if (this.model.get(\"searchable\")) {\n                this.data2 = [];\n                _.each(this.data, function(option, index) {\n                    self.data2.push({\n                        order: index,\n                        id: option.value,\n                        text: option.label,\n                        tags: option.tags\n                    });\n                });\n                this.$select.data(\"select2\") && this.$select.select2(\"destroy\");\n                this.matched_tags = {};\n                this.$select.select2({\n                    data: self.data2,\n                    closeOnSelect: !this.model.get(\"multiple\"),\n                    multiple: this.model.get(\"multiple\"),\n                    query: function(q) {\n                        self.matched_tags = {};\n                        var pagesize = self.model.get(\"pagesize\");\n                        var results = _.filter(self.data2, function(e) {\n                            var found = false;\n                            _.each(e.tags, function(tag) {\n                                if (self._match(q.term, tag)) {\n                                    found = self.matched_tags[tag] = true;\n                                }\n                            });\n                            return found || self._match(q.term, e.text);\n                        });\n                        q.callback({\n                            results: results.slice(\n                                (q.page - 1) * pagesize,\n                                q.page * pagesize\n                            ),\n                            more: results.length >= q.page * pagesize\n                        });\n                    },\n                    formatResult: function(result) {\n                        return (\n                            _.escape(result.text) +\n                            '<div class=\"ui-tags\">' +\n                            _.reduce(\n                                result.tags,\n                                function(memo, tag) {\n                                    if (self.matched_tags[tag]) {\n                                        return (\n                                            memo +\n                                            \"&nbsp;\" +\n                                            '<div class=\"label label-info\">' +\n                                            _.escape(tag) +\n                                            \"</div>\"\n                                        );\n                                    }\n                                    return memo;\n                                },\n                                \"\"\n                            ) +\n                            \"</div>\"\n                        );\n                    }\n                });\n                this.$(\".select2-container .select2-search input\").off(\"blur\");\n            } else {\n                this.$select.find(\"option\").remove();\n                _.each(this.data, function(option) {\n                    self.$select.append(\n                        $(\"<option/>\")\n                            .attr(\"value\", option.value)\n                            .html(_.escape(option.label))\n                    );\n                });\n            }\n            this.model.set(\n                \"disabled\",\n                this.model.get(\"readonly\") || this.length() == 0\n            );\n            this._changeValue();\n        },\n\n        /** Handles field enabling/disabling, usually used when no options are available */\n        _changeDisabled: function() {\n            if (this.model.get(\"searchable\")) {\n                this.$select.select2(\n                    this.model.get(\"disabled\") ? \"disable\" : \"enable\"\n                );\n            } else {\n                this.$select.prop(\"disabled\", this.model.get(\"disabled\"));\n            }\n        },\n\n        /** Searchable fields may display a spinner e.g. while waiting for a server response */\n        _changeWait: function() {\n            this.$dropdown\n                .removeClass()\n                .addClass(\"icon-dropdown fa\")\n                .addClass(\n                    this.model.get(\"wait\")\n                        ? \"fa-spinner fa-spin\"\n                        : \"fa-caret-down\"\n                );\n        },\n\n        /** Handles field visibility */\n        _changeVisible: function() {\n            this.$el[this.model.get(\"visible\") ? \"show\" : \"hide\"]();\n            this.$select[this.model.get(\"visible\") ? \"show\" : \"hide\"]();\n        },\n\n        /** Synchronizes the model value with the actually selected field value */\n        _changeValue: function() {\n            this._setValue(this.model.get(\"value\"));\n            if (this.model.get(\"multiple\")) {\n                if (this.all_button) {\n                    var value = this._getValue();\n                    this.all_button.value(\n                        $.isArray(value) ? value.length : 0,\n                        this.length()\n                    );\n                }\n            } else if (\n                this._getValue() === null &&\n                !this.model.get(\"optional\")\n            ) {\n                this._setValue(this.first());\n            }\n        },\n\n        /** Return/Set current selection */\n        value: function(new_value) {\n            new_value !== undefined && this.model.set(\"value\", new_value);\n            return this._getValue();\n        },\n\n        /** Return the first select option */\n        first: function() {\n            return this.data.length > 0 ? this.data[0].value : null;\n        },\n\n        /** Check if a value is an existing option */\n        exists: function(value) {\n            return _.findWhere(this.data, { value: value });\n        },\n\n        /** Return the label/text of the current selection */\n        text: function() {\n            var v = this._getValue();\n            var d = this.exists($.isArray(v) ? v[0] : v);\n            return d ? d.label : \"\";\n        },\n\n        /** Show the select field */\n        show: function() {\n            this.model.set(\"visible\", true);\n        },\n\n        /** Hide the select field */\n        hide: function() {\n            this.model.set(\"visible\", false);\n        },\n\n        /** Show a spinner indicating that the select options are currently loaded */\n        wait: function() {\n            this.model.set(\"wait\", true);\n        },\n\n        /** Hide spinner indicating that the request has been completed */\n        unwait: function() {\n            this.model.set(\"wait\", false);\n        },\n\n        /** Returns true if the field is disabled */\n        disabled: function() {\n            return this.model.get(\"disabled\");\n        },\n\n        /** Enable the select field */\n        enable: function() {\n            this.model.set(\"disabled\", false);\n        },\n\n        /** Disable the select field */\n        disable: function() {\n            this.model.set(\"disabled\", true);\n        },\n\n        /** Update all available options at once */\n        add: function(options, sorter) {\n            _.each(this.model.get(\"data\"), function(v) {\n                v.keep &&\n                    !_.findWhere(options, { value: v.value }) &&\n                    options.push(v);\n            });\n            sorter && options && options.sort(sorter);\n            this.model.set(\"data\", options);\n        },\n\n        /** Update available options */\n        update: function(options) {\n            this.model.set(\"data\", options);\n        },\n\n        /** Set the custom onchange callback function */\n        setOnChange: function(callback) {\n            this.model.set(\"onchange\", callback);\n        },\n\n        /** Number of available options */\n        length: function() {\n            return $.isArray(this.model.get(\"data\"))\n                ? this.model.get(\"data\").length\n                : 0;\n        },\n\n        /** Set value to dom */\n        _setValue: function(new_value) {\n            var self = this;\n            if (new_value === null || new_value === undefined) {\n                new_value = \"__null__\";\n            }\n            if (this.model.get(\"multiple\")) {\n                new_value = $.isArray(new_value) ? new_value : [new_value];\n            } else if ($.isArray(new_value)) {\n                if (new_value.length > 0) {\n                    new_value = new_value[0];\n                } else {\n                    new_value = \"__null__\";\n                }\n            }\n            if (this.model.get(\"searchable\")) {\n                if ($.isArray(new_value)) {\n                    var val = [];\n                    _.each(new_value, function(v) {\n                        var d = _.findWhere(self.data2, { id: v });\n                        d && val.push(d);\n                    });\n                    new_value = val;\n                } else {\n                    var d = _.findWhere(this.data2, { id: new_value });\n                    new_value = d;\n                }\n                this.$select.select2(\"data\", new_value);\n            } else {\n                this.$select.val(new_value);\n            }\n        },\n\n        /** Get value from dom */\n        _getValue: function() {\n            var val = null;\n            if (this.model.get(\"searchable\")) {\n                var selected = this.$select.select2(\"data\");\n                if (selected) {\n                    if ($.isArray(selected)) {\n                        val = [];\n                        selected.sort(function(a, b) {\n                            return a.order - b.order;\n                        });\n                        _.each(selected, function(v) {\n                            val.push(v.id);\n                        });\n                    } else {\n                        val = selected.id;\n                    }\n                }\n            } else {\n                val = this.$select.val();\n            }\n            return Utils.isEmpty(val) ? null : val;\n        }\n    });\n\n    return {\n        View: View\n    };\n});\n"]}