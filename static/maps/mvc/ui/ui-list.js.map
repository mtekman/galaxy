{"version":3,"sources":["mvc/ui/ui-list.js"],"names":["define","Utils","Ui","View","initialize","extend","self","options","this","multiple","name","message","Message","portlet","Portlet","cls","select","Select","optional","tooltip","ButtonIcon","onclick","add","id","value","text","$","_template","append","button","$el","undefined","isArray","val","i","v","v_id","v_name","_refresh","lst","prop","length","html","isEmpty","update","status","on","remove","removeClass","show","enable","onchange","_templateRow"],"mappings":"aACAA,QAAQ,cAAe,oBAAqB,kBAAmB,SAD/DC,EACAD,EAKIE,GAqKA,OACIC,KAnKAC,SAAYD,KAAAE,QAERD,WAAIE,SAAJC,GAEA,IAAAD,EAAAE,KAGAA,KAAKC,QAALF,EADAC,KAAKE,KAAOH,EAAQG,MAAQ,UAG5BF,KAAAC,SAAAF,EAAAE,WAAA,EAGAD,KAAAG,QAAA,IAAAT,EAAAU,QAGAJ,KAAAK,QAAA,IAAAC,EAAAX,MAAAY,IAAA,uBAGAP,KAAAQ,OAAA,IAAAd,EAAAe,OAAAd,MAAAe,SAAAX,EAAAW,WAGIC,KAAAA,OAAS,IAAAjB,EAAAkB,YACTC,KAAAA,gBACIf,QAAKgB,cAAId,KAAAE,KACLa,QAAAA,WACAb,EAAAA,KAFJa,GAAAjB,EAAAU,OAAAQ,QAIHd,KAAAJ,EAAAU,OAAAS,YAMLjB,KAAKkB,WAAElB,KAAAmB,UAAoBC,IAC3BpB,KAAKkB,EAAE,oBAAmBE,OAAOpB,KAAKqB,QAAOC,KAC7CtB,KAAKkB,EAAE,oBAAmBE,OAAOpB,KAAKQ,QAAOc,KArCrBtB,KAAAkB,EAAA,mBAAAE,OAAApB,KAAAqB,OAAAC,KAqCxBtB,KAAKkB,EAAE,mBAAmBE,OAAOpB,KAAKQ,OAAOc,MAM7CN,MAAA,SAAYO,GAER,QAAMC,IAANC,EAAA,CAEQ,GADJzB,KAAAK,QAASqB,QACLR,EAAAM,QAAIG,GACJ,IAAA,IAAIC,KAAAA,EAAJ,CACA,IAAIC,EAAAA,EAAAA,GACAX,EAAOS,KACPC,EAASb,KACEb,UAAX2B,EAAAA,KAAAA,IAFJD,EAGOD,EAAAZ,GACHa,EAAOC,EAAAA,MAEPD,EAAAA,EAAcD,EAENC,MAAJb,GACAb,KAAAA,KAFJa,GAAAa,EAIH1B,KAAA2B,IAKb7B,KAAA8B,WAGIC,IAAAA,KArEoB,OAsEhBhB,KAAAA,EAAAA,eAAYiB,KAAK,WACjB9B,EAAAA,MAFJa,GAAAG,EAAAlB,MAAAgC,KAAA,MADJ9B,KAAAgB,EAAAlB,MAQQiC,KAAU,iBACPC,WA7Ea,GAAAH,EAAAE,OA6Eb,KAMVF,GAIOjB,IAAA,SAAAf,GAEQgB,IAAAA,EAAAA,KACAb,GAAcA,IAAdA,KAAAA,EAAAA,QAAMH,EAAQG,GAAAA,MAAAA,OAFA,GAAlBT,EADJ0C,QAAApC,EAAAgB,IAyBJf,KAAKG,QAAQiC,QACTjC,QAAS,yBAAsBH,KAAAE,KAAA,IADnCmC,OAAA,eAzBI,CAMAf,IAAIgB,EAAGpB,EACHI,KAAIiB,cACJzC,GAAKgC,EAALf,GAFJb,KAAAH,EAAAG,QAMCoB,EAFDgB,GAAA,QAAA,WAGIA,EAAGC,SACHjB,EAAIkB,aAERlB,EAAAgB,GAAKjC,YAAeiB,WACpBA,EAAKQ,SAAL,uBAEAR,EAAAgB,GAAKnC,WAAL,WACIA,EAAAA,YAAS,uBADOH,KAApBK,QAAAe,OAAAE,GAIHtB,KAAA8B,gBAQT9B,KAAAG,QAAAiC,QACQjC,QAAA,QAAAH,KAAkBE,KAAA,8BAMtBkC,OAAI,SAAOrC,GACPC,KAACQ,OAAKP,OAANF,IAIA+B,SAAA,WACH9B,KAAAkB,EAAA,eAAAe,OAAA,IACIlC,KAAAA,UAALC,KAAyBqB,OAAKtB,UApINC,KAAAkB,EAAA,oBAAAuB,SAuI5BzC,KAAAqB,OAAAqB,SACAvB,KAAWD,EAAA,oBAASnB,QAxIQC,KAAAD,QAAA4C,UAAA3C,KAAAD,QAAA4C,YAuJxBxB,UACI,SAAApB,GASP,MAjKL,wLAsJI6C,aAAc,SAAS7C,GACnB,MACI,YACAA,EAAQgB,GACR,6FAGAhB,EAAQG,KACR","file":"../../../scripts/mvc/ui/ui-list.js","sourcesContent":["// dependencies\ndefine([\"utils/utils\", \"mvc/ui/ui-portlet\", \"mvc/ui/ui-misc\"], function(\n    Utils,\n    Portlet,\n    Ui\n) {\n    // ui list element\n    var View = Backbone.View.extend({\n        // create portlet to keep track of selected list elements\n        initialize: function(options) {\n            // link this\n            var self = this;\n\n            // initialize options\n            this.options = options;\n            this.name = options.name || \"element\";\n            this.multiple = options.multiple || false;\n\n            // create message handler\n            this.message = new Ui.Message();\n\n            // create portlet\n            this.portlet = new Portlet.View({ cls: \"ui-portlet-section\" });\n\n            // create select field containing the options which can be inserted into the list\n            this.select = new Ui.Select.View({ optional: options.optional });\n\n            // create insert new list element button\n            this.button = new Ui.ButtonIcon({\n                icon: \"fa fa-sign-in\",\n                tooltip: \"Insert new \" + this.name,\n                onclick: function() {\n                    self.add({\n                        id: self.select.value(),\n                        name: self.select.text()\n                    });\n                }\n            });\n\n            // build main element\n            this.setElement(this._template(options));\n            this.$(\".ui-list-message\").append(this.message.$el);\n            this.$(\".ui-list-portlet\").append(this.portlet.$el);\n            this.$(\".ui-list-button\").append(this.button.$el);\n            this.$(\".ui-list-select\").append(this.select.$el);\n        },\n\n        /** Return/Set currently selected list elements */\n        value: function(val) {\n            // set new value\n            if (val !== undefined) {\n                this.portlet.empty();\n                if ($.isArray(val)) {\n                    for (var i in val) {\n                        var v = val[i];\n                        var v_id = null;\n                        var v_name = null;\n                        if ($.type(v) != \"string\") {\n                            v_id = v.id;\n                            v_name = v.name;\n                        } else {\n                            v_id = v_name = v;\n                        }\n                        if (v_id != null) {\n                            this.add({\n                                id: v_id,\n                                name: v_name\n                            });\n                        }\n                    }\n                }\n                this._refresh();\n            }\n            // get current value\n            var lst = [];\n            this.$(\".ui-list-id\").each(function() {\n                lst.push({\n                    id: $(this).prop(\"id\"),\n                    name: $(this)\n                        .find(\".ui-list-name\")\n                        .html()\n                });\n            });\n            if (lst.length == 0) {\n                return null;\n            }\n            return lst;\n        },\n\n        /** Add row */\n        add: function(options) {\n            var self = this;\n            if (this.$('[id=\"' + options.id + '\"]').length === 0) {\n                if (!Utils.isEmpty(options.id)) {\n                    var $el = $(\n                        this._templateRow({\n                            id: options.id,\n                            name: options.name\n                        })\n                    );\n                    $el.on(\"click\", function() {\n                        $el.remove();\n                        self._refresh();\n                    });\n                    $el.on(\"mouseover\", function() {\n                        $el.addClass(\"portlet-highlight\");\n                    });\n                    $el.on(\"mouseout\", function() {\n                        $el.removeClass(\"portlet-highlight\");\n                    });\n                    this.portlet.append($el);\n                    this._refresh();\n                } else {\n                    this.message.update({\n                        message: \"Please select a valid \" + this.name + \".\",\n                        status: \"danger\"\n                    });\n                }\n            } else {\n                this.message.update({\n                    message: \"This \" + this.name + \" is already in the list.\"\n                });\n            }\n        },\n\n        /** Update available options */\n        update: function(options) {\n            this.select.update(options);\n        },\n\n        /** Refresh view */\n        _refresh: function() {\n            if (this.$(\".ui-list-id\").length > 0) {\n                !this.multiple && this.button.disable();\n                this.$(\".ui-list-portlet\").show();\n            } else {\n                this.button.enable();\n                this.$(\".ui-list-portlet\").hide();\n            }\n            this.options.onchange && this.options.onchange();\n        },\n\n        /** Main Template */\n        _template: function(options) {\n            return (\n                '<div class=\"ui-list\">' +\n                '<div class=\"ui-margin-top\">' +\n                '<span class=\"ui-list-button\"/>' +\n                '<span class=\"ui-list-select\"/>' +\n                \"</div>\" +\n                '<div class=\"ui-list-message\"/>' +\n                '<div class=\"ui-list-portlet\"/>' +\n                \"</div>\"\n            );\n        },\n\n        /** Row Template */\n        _templateRow: function(options) {\n            return (\n                '<div id=\"' +\n                options.id +\n                '\" class=\"ui-list-id\">' +\n                '<span class=\"ui-list-delete fa fa-trash\"/>' +\n                '<span class=\"ui-list-name\">' +\n                options.name +\n                \"</span>\" +\n                \"</div>\"\n            );\n        }\n    });\n\n    return {\n        View: View\n    };\n});\n"]}