{"version":3,"sources":["mvc/ui/ui-slider.js"],"names":["define","Utils","View","Backbone","extend","initialize","options","self","model","uid","min","max","step","precise","split","value","onchange","this","setElement","_template","$el","attr","id","$text","$","$slider","pressed","val","on","e","v","which","get","event","preventDefault","opts","has_slider","addClass","hide","indexOf","_isParameter","attributes","new_val","isNaN","trigger","slider","ui","listenTo","render","undefined","Math","round","set","String","substring"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-slider.js","sourcesContent":["define([\"utils/utils\"], function(Utils) {\n    var View = Backbone.View.extend({\n        initialize: function(options) {\n            var self = this;\n            this.model =\n                (options && options.model) ||\n                new Backbone.Model({\n                    id: Utils.uid(),\n                    min: null,\n                    max: null,\n                    step: null,\n                    precise: false,\n                    split: 10000,\n                    value: null,\n                    onchange: function() {}\n                }).set(options);\n\n            // create new element\n            this.setElement(this._template());\n            this.$el.attr(\"id\", this.model.id);\n            this.$text = this.$(\".ui-form-slider-text\");\n            this.$slider = this.$(\".ui-form-slider-element\");\n\n            // add text field event\n            var pressed = [];\n            this.$text\n                .on(\"change\", function() {\n                    self.value($(this).val());\n                })\n                .on(\"keyup\", function(e) {\n                    pressed[e.which] = false;\n                })\n                .on(\"keydown\", function(e) {\n                    var v = e.which;\n                    pressed[v] = true;\n                    if (\n                        self.model.get(\"is_workflow\") &&\n                        pressed[16] &&\n                        v == 52\n                    ) {\n                        self.value(\"$\");\n                        event.preventDefault();\n                    } else if (\n                        !(\n                            v == 8 ||\n                            v == 9 ||\n                            v == 13 ||\n                            v == 37 ||\n                            v == 39 ||\n                            (v >= 48 && v <= 57 && !pressed[16]) ||\n                            (v >= 96 && v <= 105) ||\n                            ((v == 190 || v == 110) &&\n                                $(this)\n                                    .val()\n                                    .indexOf(\".\") == -1 &&\n                                self.model.get(\"precise\")) ||\n                            ((v == 189 || v == 109) &&\n                                $(this)\n                                    .val()\n                                    .indexOf(\"-\") == -1) ||\n                            self._isParameter($(this).val()) ||\n                            pressed[91] ||\n                            pressed[17]\n                        )\n                    ) {\n                        event.preventDefault();\n                    }\n                });\n\n            // build slider, cannot be rebuild in render\n            var opts = this.model.attributes;\n            this.has_slider =\n                opts.max !== null && opts.min !== null && opts.max > opts.min;\n            var step = opts.step;\n            if (!step) {\n                if (opts.precise && this.has_slider) {\n                    step = (opts.max - opts.min) / opts.split;\n                } else {\n                    step = 1.0;\n                }\n            }\n            if (this.has_slider) {\n                this.$text.addClass(\"ui-form-slider-left\");\n                this.$slider\n                    .slider({ min: opts.min, max: opts.max, step: step })\n                    .on(\"slide\", function(event, ui) {\n                        self.value(ui.value);\n                    });\n            } else {\n                this.$slider.hide();\n            }\n\n            // add listeners\n            this.listenTo(this.model, \"change\", this.render, this);\n            this.render();\n        },\n\n        render: function() {\n            var value = this.model.get(\"value\");\n            this.has_slider && this.$slider.slider(\"value\", value);\n            value !== this.$text.val() && this.$text.val(value);\n        },\n\n        /** Set and return the current value */\n        value: function(new_val) {\n            var options = this.model.attributes;\n            if (new_val !== undefined) {\n                if (\n                    new_val !== null &&\n                    new_val !== \"\" &&\n                    !this._isParameter(new_val)\n                ) {\n                    isNaN(new_val) && (new_val = 0);\n                    !options.precise && (new_val = Math.round(new_val));\n                    options.max !== null &&\n                        (new_val = Math.min(new_val, options.max));\n                    options.min !== null &&\n                        (new_val = Math.max(new_val, options.min));\n                }\n                this.model.set(\"value\", new_val);\n                this.model.trigger(\"change\");\n                options.onchange(new_val);\n            }\n            return this.model.get(\"value\");\n        },\n\n        /** Return true if the field contains a workflow parameter i.e. $('name') */\n        _isParameter: function(value) {\n            return (\n                this.model.get(\"is_workflow\") &&\n                String(value).substring(0, 1) === \"$\"\n            );\n        },\n\n        /** Slider template */\n        _template: function() {\n            return (\n                '<div class=\"ui-form-slider\">' +\n                '<input class=\"ui-form-slider-text\" type=\"text\"/>' +\n                '<div class=\"ui-form-slider-element\"/>' +\n                \"</div>\"\n            );\n        }\n    });\n\n    return {\n        View: View\n    };\n});\n"]}