{"version":3,"sources":["mvc/ui/ui-portlet.js"],"names":["define","Utils","Ui","View","Backbone","extend","visible","this","initialize","self","options","model","uid","cls","title","icon","buttons","body","scrollable","nopadding","operations","collapsible","collapsible_button","collapsed","onchange_title","setElement","_template","$body","$","$title_text","$title_icon","$header","$content","$backdrop","$buttons","$operations","get","append","ButtonIcon","tooltip","onclick","render","attributes","header","$el","each","id","html","_","hide","on_finish","off","on","show","expand","prop","new_title","item","name","empty","fadeIn","hideOperation","enableButton","showOperation","find","disableButton","setOperation","callback","setIcon","collapse","height","enable","disable","addClass"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-portlet.js","sourcesContent":["define([\"utils/utils\", \"mvc/ui/ui-misc\"], function(Utils, Ui) {\n    var View = Backbone.View.extend({\n        visible: false,\n        initialize: function(options) {\n            var self = this;\n            this.model =\n                (options && options.model) ||\n                new Backbone.Model({\n                    id: Utils.uid(),\n                    cls: \"ui-portlet\",\n                    title: \"\",\n                    icon: \"\",\n                    buttons: null,\n                    body: null,\n                    scrollable: true,\n                    nopadding: false,\n                    operations: null,\n                    collapsible: false,\n                    collapsible_button: false,\n                    collapsed: false,\n                    onchange_title: null\n                }).set(options);\n            this.setElement(this._template());\n\n            // link all dom elements\n            this.$body = this.$(\".portlet-body\");\n            this.$title_text = this.$(\".portlet-title-text\");\n            this.$title_icon = this.$(\".portlet-title-icon\");\n            this.$header = this.$(\".portlet-header\");\n            this.$content = this.$(\".portlet-content\");\n            this.$backdrop = this.$(\".portlet-backdrop\");\n            this.$buttons = this.$(\".portlet-buttons\");\n            this.$operations = this.$(\".portlet-operations\");\n\n            // add body to component list\n            this.model.get(\"body\") && this.append(this.model.get(\"body\"));\n\n            // add icon for collapsible option\n            this.collapsible_button = new Ui.ButtonIcon({\n                icon: \"fa-eye\",\n                tooltip: \"Collapse/Expand\",\n                cls: \"ui-button-icon-plain\",\n                onclick: function() {\n                    self[self.collapsed ? \"expand\" : \"collapse\"]();\n                }\n            });\n            this.render();\n        },\n\n        render: function() {\n            var self = this;\n            var options = this.model.attributes;\n            this.$el\n                .removeClass()\n                .addClass(options.cls)\n                .attr(\"id\", options.id);\n            this.$header[options.title ? \"show\" : \"hide\"]();\n            this.$title_text.html(options.title);\n            _.each([this.$content, this.$body], function($el) {\n                $el[options.nopadding ? \"addClass\" : \"removeClass\"](\n                    \"no-padding\"\n                );\n            });\n\n            // render title icon\n            if (options.icon) {\n                this.$title_icon\n                    .removeClass()\n                    .addClass(\"portlet-title-icon fa\")\n                    .addClass(options.icon)\n                    .show();\n            } else {\n                this.$title_icon.hide();\n            }\n\n            // make portlet collapsible\n            this.$title_text\n                [options.collapsible ? \"addClass\" : \"removeClass\"](\n                    \"no-highlight collapsible\"\n                )\n                .off();\n            if (options.collapsible) {\n                this.$title_text.on(\"click\", function() {\n                    self[self.collapsed ? \"expand\" : \"collapse\"]();\n                });\n                options.collapsed ? this.collapse() : this.expand();\n            }\n\n            // allow title editing\n            this.$title_text.prop(\"disabled\", !options.onchange_title);\n            options.onchange_title &&\n                this.$title_text.make_text_editable({\n                    on_finish: function(new_title) {\n                        options.onchange_title(new_title);\n                    }\n                });\n\n            // render buttons\n            if (options.buttons) {\n                this.$buttons.empty().show();\n                $.each(this.model.get(\"buttons\"), function(name, item) {\n                    item.$el.prop(\"id\", name);\n                    self.$buttons.append(item.$el);\n                });\n            } else {\n                this.$buttons.hide();\n            }\n\n            // render operations\n            this.$operations.empty;\n            if (options.collapsible_button) {\n                this.$operations.append(this.collapsible_button.$el);\n            }\n            if (options.operations) {\n                $.each(options.operations, function(name, item) {\n                    item.$el.prop(\"id\", name);\n                    self.$operations.append(item.$el);\n                });\n            }\n            return this;\n        },\n\n        /** Append new doms to body */\n        append: function($el) {\n            this.$body.append($el);\n        },\n\n        /** Remove all content */\n        empty: function() {\n            this.$body.empty();\n        },\n\n        /** Return header element */\n        header: function() {\n            return this.$header;\n        },\n\n        /** Return body element */\n        body: function() {\n            return this.$body;\n        },\n\n        /** Show portlet */\n        show: function() {\n            this.visible = true;\n            this.$el.fadeIn(\"fast\");\n        },\n\n        /** Hide portlet */\n        hide: function() {\n            this.visible = false;\n            this.$el.hide();\n        },\n\n        /** Enable a particular button */\n        enableButton: function(id) {\n            this.$buttons.find(\"#\" + id).prop(\"disabled\", false);\n        },\n\n        /** Disable a particular button */\n        disableButton: function(id) {\n            this.$buttons.find(\"#\" + id).prop(\"disabled\", true);\n        },\n\n        /** Hide a particular operation */\n        hideOperation: function(id) {\n            this.$operations.find(\"#\" + id).hide();\n        },\n\n        /** Show a particular operation */\n        showOperation: function(id) {\n            this.$operations.find(\"#\" + id).show();\n        },\n\n        /** Replaces the event callback of an existing operation */\n        setOperation: function(id, callback) {\n            this.$operations\n                .find(\"#\" + id)\n                .off(\"click\")\n                .on(\"click\", callback);\n        },\n\n        /** Change title */\n        title: function(new_title) {\n            new_title && this.$title_text.html(new_title);\n            return this.$title_text.html();\n        },\n\n        /** Collapse portlet */\n        collapse: function() {\n            this.collapsed = true;\n            this.$content.height(\"0%\");\n            this.$body.hide();\n            this.collapsible_button.setIcon(\"fa-eye-slash\");\n        },\n\n        /** Expand portlet */\n        expand: function() {\n            this.collapsed = false;\n            this.$content.height(\"100%\");\n            this.$body.fadeIn(\"fast\");\n            this.collapsible_button.setIcon(\"fa-eye\");\n        },\n\n        /** Disable content access */\n        disable: function() {\n            this.$backdrop.show();\n        },\n\n        /** Enable content access */\n        enable: function() {\n            this.$backdrop.hide();\n        },\n\n        _template: function() {\n            return $(\"<div/>\")\n                .append(\n                    $(\"<div/>\")\n                        .addClass(\"portlet-header\")\n                        .append($(\"<div/>\").addClass(\"portlet-operations\"))\n                        .append(\n                            $(\"<div/>\")\n                                .addClass(\"portlet-title\")\n                                .append(\n                                    $(\"<i/>\").addClass(\"portlet-title-icon\")\n                                )\n                                .append(\n                                    $(\"<span/>\").addClass(\"portlet-title-text\")\n                                )\n                        )\n                )\n                .append(\n                    $(\"<div/>\")\n                        .addClass(\"portlet-content\")\n                        .append($(\"<div/>\").addClass(\"portlet-body\"))\n                        .append($(\"<div/>\").addClass(\"portlet-buttons\"))\n                )\n                .append($(\"<div/>\").addClass(\"portlet-backdrop\"));\n        }\n    });\n    return {\n        View: View\n    };\n});\n"]}