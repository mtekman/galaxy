{"version":3,"sources":["layout/router.js"],"names":["jQuery","require","$","Ui","Router","extend","initialize","page","options","this","push","url","data","__identifer","Math","isEmptyObject","indexOf","param","Galaxy","params","navigate","trigger","execute","callback","name","debug","args","queryObj","QUERY_STRING","parse","pop","authenticate","apply","access_denied","display","status","message","persistent","module","exports"],"mappings":"aAAA,IAAIA,OAASC,QAAQ,UACjBC,EAAIF,OADJA,aAASC,QAAQ,8BACjBC,GAAIF,QADR,kBAGIG,OAAKF,SAAQG,OAAAC,QAGbC,WAAA,SAAAC,EAAAC,GACAC,KAAAF,KAAAA,EACAD,KAAAA,QAAYE,GAMZE,KAAM,SAASC,EAAKC,IADpBA,EAAAA,OACMC,YAAAC,KAAcF,SAChBA,SAAOA,IACFC,OAAAA,GAGAX,EAAEa,cAAcH,KACjBD,IAA4B,GAArBA,EAAIK,QAAQ,KAAa,IAAM,IACtCL,GAAOT,EAAEe,MAAML,GAAM,IAEzBM,OAAOC,OAASP,EAChBH,KAAKW,SAAST,GAAOU,SAAS,KAIlCC,QAAS,SAAAC,EAASA,EAATC,GACLN,OAAOO,MAAM,kBAAmBF,EAAUG,EAAMF,GAChD,IAAIG,EAAWC,aAAaC,MAAMH,EAAKI,OACvCJ,EAAKhB,KAAKiB,GACNJ,IACId,KAAKsB,aAAaL,EAAMF,GACxBD,EAASS,MAAMvB,KAAMiB,GAErBjB,KAAKwB,kBAKjBF,aAAc,SAAAL,EAAAF,GACV,OAAO,GAGXS,cAAe,WACXxB,KAAKF,KAAK2B,QAEFC,IAAAA,GAAAA,SACAC,OACI,SACJC,QALR,sEAQHA,YAAA,QAGLC,OAAOC,QAAUnC","file":"../../scripts/layout/router.js","sourcesContent":["var jQuery = require(\"jquery\"),\n    $ = jQuery,\n    QUERY_STRING = require(\"utils/query-string-parsing\"),\n    Ui = require(\"mvc/ui/ui-misc\");\n\nvar Router = Backbone.Router.extend({\n    // TODO: not many client routes at this point - fill and remove from server.\n    // since we're at root here, this may be the last to be routed entirely on the client.\n    initialize: function(page, options) {\n        this.page = page;\n        this.options = options;\n    },\n\n    /** helper to push a new navigation state */\n    push: function(url, data) {\n        data = data || {};\n        data.__identifer = Math.random()\n            .toString(36)\n            .substr(2);\n        if (!$.isEmptyObject(data)) {\n            url += url.indexOf(\"?\") == -1 ? \"?\" : \"&\";\n            url += $.param(data, true);\n        }\n        Galaxy.params = data;\n        this.navigate(url, { trigger: true });\n    },\n\n    /** override to parse query string into obj and send to each route */\n    execute: function(callback, args, name) {\n        Galaxy.debug(\"router execute:\", callback, args, name);\n        var queryObj = QUERY_STRING.parse(args.pop());\n        args.push(queryObj);\n        if (callback) {\n            if (this.authenticate(args, name)) {\n                callback.apply(this, args);\n            } else {\n                this.access_denied();\n            }\n        }\n    },\n\n    authenticate: function(args, name) {\n        return true;\n    },\n\n    access_denied: function() {\n        this.page.display(\n            new Ui.Message({\n                status: \"danger\",\n                message:\n                    \"You must be logged in with proper credentials to make this request.\",\n                persistent: true\n            })\n        );\n    }\n});\n\nmodule.exports = Router;\n"]}