{"version":3,"sources":["layout/masthead.js"],"names":["define","View","initialize","Utils","options","Scratchbook","QuotaMeter","$navbarBrandLink","extend","$navbarBrandImage","$navbarBrandTitle","this","$navbarTabs","$quoteMeter","_template","$","collection","Collection","self","append","on","Menu","callback","model","Tab","render","$el","frame","each","m","fetch","Galaxy","quotaMeter","UserQuotaMeter","preventDefault","user","el","q","e","text","target","closest","length","attr","hide","$download_link","get","html","brand","logo_url","logo_src"],"mappings":"aAAAA,QAEQ,cAMA,cACIC,qBACAC,4BAEI,SAAAC,EAAKC,EAALC,EAAAC,GAyGR,OACIL,KAxGSM,SAAAA,KAALC,QACAN,WAAKO,SAAAA,GACL,IAAKC,EAAAA,KACLC,KAAKC,QAAcR,EACnBO,KAAKE,WAAcF,KAAAG,aAJnBH,KAAKJ,iBAAmBI,KAAKI,EAAE,sBAM/BJ,KAAAF,kBAAAE,KAAAI,EAAA,uBACAJ,KAAKK,kBAAsBC,KAAAA,EAAAA,uBAC3BN,KAAKK,YACGL,KAAOI,EAAA,gBACPG,KAAKN,YAAYO,KACbJ,EAAA,0BAMPK,KAAGJ,WAAY,IAAAK,EAASC,WACrBJ,KAAKF,WACDM,GAAAA,MAAA,SAAAC,GADJL,EAAAN,YAAAO,OAIQf,IAAAA,EAdhBoB,KAAAD,MAAAA,IAAAE,SAAAC,OAiBOC,GAAP,QAAoBA,WAChBX,EAAYJ,YAAKI,UAThBI,GAAG,WAAY,SAASE,GAY7BJ,EAAAF,WAAAY,KAAA,SAAAC,GACAP,EAAAO,OAIYC,MAAKjB,KAAAA,SAIjBkB,OAAAJ,MAAAhB,KAAAgB,MAAA,IAAAtB,GACAW,WAAAL,KACiBK,aASJe,OAAAC,WAAArB,KAAAqB,WAAA,IAAA1B,EAAA2B,gBAKCC,MAAAA,OAAFC,KACHC,GAAAzB,KAAAE,cAQGwB,EAAAA,QAJJjB,GAAA,QAAA,SAAAkB,GAMIC,IAAAA,EAAaxB,EAAAuB,EAAAE,QAAAC,QAAA,eACb,GAAOF,EAAPG,SACH,IAAA3B,EAAA,uBAAA2B,QA5BT3B,EAAA,QAAAI,OA5CwBJ,EAAA,aAmDC4B,KAAK,KAAM,YAyBrBC,QAOVnC,EAAAA,uBAAmCL,KACxBqB,MAChBoB,EAAAF,KAAA,SA1BYL,EAAEJ,oBAgCVd,GAAA,eAAA,WAcP,IAAAmB,EAAA,GAnCW,GAtEhBrB,EAAAF,WAAAY,KAAA,SAAAL,GAiEoB,IAAIc,EA2CjBd,EAAAuB,IAAA,mBACG7C,EAAAA,IAAAA,iBAAAA,GADVoC,IAAAE,GAAAF,EAAA,OAtC6B,KAATE,EACA,OAAOA,KAKvBd,OAAQ,WASJ,OARAd,KAAKD,kBAAkBqC,KACnB,WACMpC,KAAKP,QAAQ4C,OAAS,KAAOrC,KAAKP,QAAQ4C,OACxC,KAEZrC,KAAKJ,iBAAiBoC,KAAK,OAAQhC,KAAKP,QAAQ6C,UAChDtC,KAAKF,kBAAkBkC,KAAK,MAAOhC,KAAKP,QAAQ8C,UAChDvC,KAAKqB,WAAWP,SACTd,MAIXG,UAAW,WACP,MACI","file":"../../scripts/layout/masthead.js","sourcesContent":["define(\n    [\n        \"utils/utils\",\n        \"layout/menu\",\n        \"layout/scratchbook\",\n        \"mvc/user/user-quotameter\"\n    ],\n    function(Utils, Menu, Scratchbook, QuotaMeter) {\n        /** Masthead **/\n        var View = Backbone.View.extend({\n            initialize: function(options) {\n                var self = this;\n                this.options = options;\n                this.setElement(this._template());\n                this.$navbarBrandLink = this.$(\".navbar-brand-link\");\n                this.$navbarBrandImage = this.$(\".navbar-brand-image\");\n                this.$navbarBrandTitle = this.$(\".navbar-brand-title\");\n                this.$navbarTabs = this.$(\".navbar-tabs\");\n                this.$quoteMeter = this.$(\".quota-meter-container\");\n\n                // build tabs\n                this.collection = new Menu.Collection();\n                this.collection\n                    .on(\"add\", function(model) {\n                        self.$navbarTabs.append(\n                            new Menu.Tab({ model: model }).render().$el\n                        );\n                    })\n                    .on(\"reset\", function() {\n                        self.$navbarTabs.empty();\n                    })\n                    .on(\"dispatch\", function(callback) {\n                        self.collection.each(function(m) {\n                            callback(m);\n                        });\n                    })\n                    .fetch(this.options);\n\n                // scratchbook\n                Galaxy.frame = this.frame = new Scratchbook({\n                    collection: this.collection\n                });\n\n                // set up the quota meter (And fetch the current user data from trans)\n                // add quota meter to masthead\n                Galaxy.quotaMeter = this.quotaMeter = new QuotaMeter.UserQuotaMeter(\n                    {\n                        model: Galaxy.user,\n                        el: this.$quoteMeter\n                    }\n                );\n\n                // loop through beforeunload functions if the user attempts to unload the page\n                $(window)\n                    .on(\"click\", function(e) {\n                        var $download_link = $(e.target).closest(\"a[download]\");\n                        if ($download_link.length == 1) {\n                            if ($(\"iframe[id=download]\").length === 0) {\n                                $(\"body\").append(\n                                    $(\"<iframe/>\")\n                                        .attr(\"id\", \"download\")\n                                        .hide()\n                                );\n                            }\n                            $(\"iframe[id=download]\").attr(\n                                \"src\",\n                                $download_link.attr(\"href\")\n                            );\n                            e.preventDefault();\n                        }\n                    })\n                    .on(\"beforeunload\", function() {\n                        var text = \"\";\n                        self.collection.each(function(model) {\n                            var q =\n                                model.get(\"onbeforeunload\") &&\n                                model.get(\"onbeforeunload\")();\n                            q && (text += q + \" \");\n                        });\n                        if (text !== \"\") {\n                            return text;\n                        }\n                    });\n            },\n\n            render: function() {\n                this.$navbarBrandTitle.html(\n                    \"Galaxy \" +\n                        ((this.options.brand && \"/ \" + this.options.brand) ||\n                            \"\")\n                );\n                this.$navbarBrandLink.attr(\"href\", this.options.logo_url);\n                this.$navbarBrandImage.attr(\"src\", this.options.logo_src);\n                this.quotaMeter.render();\n                return this;\n            },\n\n            /** body template */\n            _template: function() {\n                return (\n                    '<div id=\"masthead\" class=\"navbar navbar-fixed-top navbar-inverse\">' +\n                    '<div class=\"navbar-header\">' +\n                    '<div class=\"navbar-tabs\"/>' +\n                    \"</div>\" +\n                    '<div class=\"navbar-brand\">' +\n                    '<a class=\"navbar-brand-link\">' +\n                    '<img class=\"navbar-brand-image\"/>' +\n                    '<span class=\"navbar-brand-title\"/>' +\n                    \"</a>\" +\n                    \"</div>\" +\n                    '<div class=\"quota-meter-container\"/>' +\n                    '<div class=\"navbar-icons\"/>' +\n                    \"</div>\"\n                );\n            }\n        });\n\n        return {\n            View: View\n        };\n    }\n);\n"]}