{"version":3,"sources":["layout/page.js"],"names":["define","Masthead","Panel","Modal","Utils","View","Backbone","extend","el","className","_panelids","initialize","options","self","this","config","defaults","message_box_visible","message_box_content","message_box_class","show_inactivity_warning","inactivity_box_content","Galaxy","modal","display","view","title","setWindowTitle","allow_title_display","center","router","masthead","Router","CenterPanel","html","attr","$el","replaceWith","$","append","frame","$messagebox","$inactivebox","each","panels","_","panel_class_name","panel_id","charAt","panel_class","toUpperCase","slice","panel_instance","SidePanel","id","toString","render","pushState","history","start","root","renderInactivityBox","remove","renderPanels","_checkCommunicationServerOnline","renderMessageBox","addClass","level","removeClass","content","toggle","show","verificationLink","text","panel","css","_template","hide","$chat_icon_element","preferences","ajax","url","success","join","host","window","communication_server_host","port","communication_server_port","user","attributes","indexOf","communication_server","data","error"],"mappings":"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","file":"../../scripts/layout/page.js","sourcesContent":["define(\n    [\"layout/masthead\", \"layout/panel\", \"mvc/ui/ui-modal\", \"utils/utils\"],\n    function(Masthead, Panel, Modal, Utils) {\n        var View = Backbone.View.extend({\n            el: \"body\",\n            className: \"full-content\",\n            _panelids: [\"left\", \"right\"],\n\n            initialize: function(options) {\n                var self = this;\n                this.config = _.defaults(options.config || {}, {\n                    message_box_visible: false,\n                    message_box_content: \"\",\n                    message_box_class: \"info\",\n                    show_inactivity_warning: false,\n                    inactivity_box_content: \"\"\n                });\n\n                // attach global objects, build mastheads\n                Galaxy.modal = this.modal = new Modal.View();\n                Galaxy.display = this.display = function(view) {\n                    if (view.title) {\n                        Utils.setWindowTitle(view.title);\n                        view.allow_title_display = false;\n                    } else {\n                        Utils.setWindowTitle();\n                        view.allow_title_display = true;\n                    }\n                    self.center.display(view);\n                };\n                Galaxy.router = this.router =\n                    options.Router && new options.Router(self, options);\n                this.masthead = new Masthead.View(this.config);\n                this.center = new Panel.CenterPanel();\n\n                // build page template\n                this.$el.attr(\"scroll\", \"no\");\n                this.$el.html(this._template());\n                this.$(\"#masthead\").replaceWith(this.masthead.$el);\n                this.$(\"#center\").append(this.center.$el);\n                this.$el.append(this.masthead.frame.$el);\n                this.$el.append(this.modal.$el);\n                this.$messagebox = this.$(\"#messagebox\");\n                this.$inactivebox = this.$(\"#inactivebox\");\n\n                // build panels\n                this.panels = {};\n                _.each(this._panelids, function(panel_id) {\n                    var panel_class_name =\n                        panel_id.charAt(0).toUpperCase() + panel_id.slice(1);\n                    var panel_class = options[panel_class_name];\n                    if (panel_class) {\n                        var panel_instance = new panel_class(self, options);\n                        self[panel_instance.toString()] = panel_instance;\n                        self.panels[panel_id] = new Panel.SidePanel({\n                            id: panel_id,\n                            el: self.$(\"#\" + panel_id),\n                            view: panel_instance\n                        });\n                    }\n                });\n                this.render();\n\n                // start the router\n                this.router &&\n                    Backbone.history.start({\n                        root: Galaxy.root,\n                        pushState: true\n                    });\n            },\n\n            render: function() {\n                // TODO: Remove this line after select2 update\n                $(\".select2-hidden-accessible\").remove();\n                this.masthead.render();\n                this.renderMessageBox();\n                this.renderInactivityBox();\n                this.renderPanels();\n                this._checkCommunicationServerOnline();\n                return this;\n            },\n\n            /** Render message box */\n            renderMessageBox: function() {\n                if (this.config.message_box_visible) {\n                    var content = this.config.message_box_content || \"\";\n                    var level = this.config.message_box_class || \"info\";\n                    this.$el.addClass(\"has-message-box\");\n                    this.$messagebox\n                        .attr(\"class\", \"panel-\" + level + \"-message\")\n                        .html(content)\n                        .toggle(!!content)\n                        .show();\n                } else {\n                    this.$el.removeClass(\"has-message-box\");\n                    this.$messagebox.hide();\n                }\n                return this;\n            },\n\n            /** Render inactivity warning */\n            renderInactivityBox: function() {\n                if (this.config.show_inactivity_warning) {\n                    var content = this.config.inactivity_box_content || \"\";\n                    var verificationLink = $(\"<a/>\")\n                        .attr(\"href\", Galaxy.root + \"user/resend_verification\")\n                        .text(\"Resend verification\");\n                    this.$el.addClass(\"has-inactivity-box\");\n                    this.$inactivebox\n                        .html(content + \" \")\n                        .append(verificationLink)\n                        .toggle(!!content)\n                        .show();\n                } else {\n                    this.$el.removeClass(\"has-inactivity-box\");\n                    this.$inactivebox.hide();\n                }\n                return this;\n            },\n\n            /** Render panels */\n            renderPanels: function() {\n                var self = this;\n                _.each(this._panelids, function(panel_id) {\n                    var panel = self.panels[panel_id];\n                    if (panel) {\n                        panel.render();\n                    } else {\n                        self.$(\"#center\").css(panel_id, 0);\n                        self.$(\"#\" + panel_id).hide();\n                    }\n                });\n                return this;\n            },\n\n            /** body template */\n            _template: function() {\n                return [\n                    '<div id=\"everything\">',\n                    '<div id=\"background\"/>',\n                    '<div id=\"masthead\"/>',\n                    '<div id=\"messagebox\"/>',\n                    '<div id=\"inactivebox\" class=\"panel-warning-message\" />',\n                    '<div id=\"left\" />',\n                    '<div id=\"center\" />',\n                    '<div id=\"right\" />',\n                    \"</div>\",\n                    '<div id=\"dd-helper\" />'\n                ].join(\"\");\n            },\n\n            toString: function() {\n                return \"PageLayoutView\";\n            },\n\n            /** Check if the communication server is online and show the icon otherwise hide the icon */\n            _checkCommunicationServerOnline: function() {\n                var host = window.Galaxy.config.communication_server_host,\n                    port = window.Galaxy.config.communication_server_port,\n                    preferences = window.Galaxy.user.attributes.preferences,\n                    $chat_icon_element = $(\"#show-chat-online\");\n                /** Check if the user has deactivated the communication in it's personal settings */\n                if (\n                    preferences &&\n                    [\"1\", \"true\"].indexOf(preferences.communication_server) !=\n                        -1\n                ) {\n                    // See if the configured communication server is available\n                    $.ajax({\n                        url: host + \":\" + port\n                    })\n                        .success(function(data) {\n                            // enable communication only when a user is logged in\n                            if (window.Galaxy.user.id !== null) {\n                                if (\n                                    $chat_icon_element.css(\"visibility\") ===\n                                    \"hidden\"\n                                ) {\n                                    $chat_icon_element.css(\n                                        \"visibility\",\n                                        \"visible\"\n                                    );\n                                }\n                            }\n                        })\n                        .error(function(data) {\n                            // hide the communication icon if the communication server is not available\n                            $chat_icon_element.css(\"visibility\", \"hidden\");\n                        });\n                } else {\n                    $chat_icon_element.css(\"visibility\", \"hidden\");\n                }\n            }\n        });\n\n        return { View: View };\n    }\n);\n"]}