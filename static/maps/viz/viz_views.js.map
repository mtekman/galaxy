{"version":3,"sources":["viz/viz_views.js"],"names":["define","_","TrackHeaderView","Backbone","View","extend","className","initialize","config","get","model","this","update_name","render","$el","append","$","addClass","drag_handle_class","action_icons","get_value","e","dblclick","find","render_action_icons","self","icons_div","each","action_icons_def","set_display_modes","hide","appendTo","icon_dict","add_action_icon","name","title","on_click_fn","display_modes","css_class","prepend","attr","track","mode_mapping","click","i","mode","new_modes","init_mode","make_popupmenu","mode_icon","len","length","change_mode"],"mappings":"aAAAA,QAAQ,mBAAoB,SAASC,GAoIjC,OACIC,gBAjIkBC,SAASC,KAAKC,QAChCC,UAAW,eAAXA,WAAW,WAEXC,KAAAA,MAAYC,OACRC,IAAA,QACKC,GAAAA,eACIC,KADTC,YAEQD,MACRA,KAAKE,UAGTA,OAAQ,WACJF,KAAKG,IAAIC,OAAOC,EAAE,UAAUC,SAASN,KAAKD,MAAMQ,oBAChDP,KAAKG,IAAIC,OACLC,EAAE,UAKNC,SAAA,cACKE,KAAAA,KAALT,MAAAF,OAAAY,UAAA,UAIAT,KAAKG,gBACDO,KAAAA,sBAGJV,KAAAG,IAAAQ,SAAA,SAAAD,GACAA,EAAKP,oBAILH,KAAKG,IACAS,OAAKP,EAAA,gCAIdQ,YAAAA,WACIb,KAAIc,IACCC,KAAAA,eAIHC,KAAKhB,KAAKD,MAAMkB,OAAAA,UAAkB,UANxCJ,oBAAqB,WAiBjB,IAAAC,EAAAd,KACAA,KAAKkB,UAAAA,EAAAA,UAxD8BZ,SAAA,eA0C9Ba,OAiBTC,SAAApB,KAAAG,KAfIb,EAAE0B,KAAKhB,KAAKD,MAAMkB,iBAAkB,SAASI,GACzCP,EAAKQ,gBAiBbA,EAAiBC,KAQTT,EAAJU,MACKhB,EAAae,UAMVE,EAAYX,YAEfM,EAAcL,QACnBM,EAAUF,QAKdnB,KAAAkB,kBAAAlB,KAAAD,MAAA2B,gBAMKJ,gBAAA,SA5BDC,EA8BAC,EA5BAG,EA8BAF,EACAG,EACAT,GAKA,IAAAL,EAAKN,KA/BLR,KAAKQ,aAAae,GAAQlB,EAAE,QAoC5BwB,KAAA,QAAAL,GACIV,SAAO,eACPgB,SAAQH,GACRI,UACCC,MAAIC,WACDC,EAAOJ,EAAMJ,SAEbN,SAAApB,KAAOe,WACHe,GACA9B,KAAAQ,aAAAe,GAAAJ,QA5BhBD,kBAAmB,SAASiB,EAAWC,GAoCnCC,GAAAA,EAAAA,CAhIZrC,KAAAD,MAAA2B,cAAAS,EAqGYnC,KAAKD,MAAMmC,KACPE,GACApC,KAAKD,MAAMF,OAAOY,UAAU,SAC5BT,KAAKD,MAAM2B,cAAc,GAE7B1B,KAAKQ,aAAa8B,UAAUT,KACxB,QACA,0BAA4B7B,KAAKkC,KAAO,KAO5C,IAAK,IAFDJ,EAAQ9B,KAAKD,MACbgC,KACKE,EAAI,EAAGM,EAAMT,EAAMJ,cAAcc,OAAQP,EAAIM,EAAKN,IAAK,CAC5D,IAAIC,EAAOJ,EAAMJ,cAAcO,GAC/BF,EAAaG,GAAS,SAASA,GAC3B,OAAO,WACHJ,EAAMW,YAAYP,IAFJ,CAQnBA,GAGPG,eAAerC,KAAKQ,aAAa8B,UAAWP","file":"../../scripts/viz/viz_views.js","sourcesContent":["define([\"libs/underscore\"], function(_) {\n    /**\n * View for track/group header.\n */\n    var TrackHeaderView = Backbone.View.extend({\n        className: \"track-header\",\n\n        initialize: function() {\n            // Watch and update name changes.\n            this.model.config\n                .get(\"name\")\n                .on(\"change:value\", this.update_name, this);\n            this.render();\n        },\n\n        render: function() {\n            this.$el.append($(\"<div/>\").addClass(this.model.drag_handle_class));\n            this.$el.append(\n                $(\"<div/>\")\n                    .addClass(\"track-name\")\n                    .text(this.model.config.get_value(\"name\"))\n            );\n\n            // Icons container.\n            this.action_icons = {};\n            this.render_action_icons();\n\n            // Suppress double clicks in header so that they do not impact viz under header.\n            this.$el.dblclick(function(e) {\n                e.stopPropagation();\n            });\n\n            // Needed for floating elts in header.\n            this.$el.append($(\"<div style='clear: both'/>\"));\n        },\n\n        update_name: function() {\n            this.$el\n                .find(\".track-name\")\n                .text(this.model.config.get_value(\"name\"));\n        },\n\n        render_action_icons: function() {\n            var self = this;\n            this.icons_div = $(\"<div/>\")\n                .addClass(\"track-icons\")\n                .hide()\n                .appendTo(this.$el);\n            _.each(this.model.action_icons_def, function(icon_dict) {\n                self.add_action_icon(\n                    icon_dict.name,\n                    icon_dict.title,\n                    icon_dict.css_class,\n                    icon_dict.on_click_fn,\n                    icon_dict.prepend,\n                    icon_dict.hide\n                );\n            });\n\n            // Set up behavior for modes popup.\n            this.set_display_modes(this.model.display_modes);\n        },\n\n        /**\n     * Add an action icon to this object. Appends icon unless prepend flag is specified.\n     */\n        add_action_icon: function(\n            name,\n            title,\n            css_class,\n            on_click_fn,\n            prepend,\n            hide\n        ) {\n            var self = this;\n            this.action_icons[name] = $(\"<a/>\")\n                .attr(\"title\", title)\n                .addClass(\"icon-button\")\n                .addClass(css_class)\n                .tooltip()\n                .click(function() {\n                    on_click_fn(self.model);\n                })\n                .appendTo(this.icons_div);\n            if (hide) {\n                this.action_icons[name].hide();\n            }\n        },\n\n        /**\n     * Set track's modes and update mode icon popup.\n     */\n        set_display_modes: function(new_modes, init_mode) {\n            if (!new_modes) {\n                return;\n            }\n\n            // HACK: move this out of view and into track.\n\n            // Set modes, init mode.\n            this.model.display_modes = new_modes;\n            this.model.mode =\n                init_mode ||\n                this.model.config.get_value(\"mode\") ||\n                this.model.display_modes[0];\n\n            this.action_icons.mode_icon.attr(\n                \"title\",\n                \"Set display mode (now: \" + this.mode + \")\"\n            );\n\n            // Setup popup menu for changing modes.\n            var self = this,\n                track = this.model,\n                mode_mapping = {};\n            for (var i = 0, len = track.display_modes.length; i < len; i++) {\n                var mode = track.display_modes[i];\n                mode_mapping[mode] = (function(mode) {\n                    return function() {\n                        track.change_mode(mode);\n                        // HACK: the popup menu messes with the track's hover event, so manually show/hide\n                        // icons div for now.\n                        //self.icons_div.show();\n                        //track.container_div.mouseleave(function() { track.icons_div.hide(); } );\n                    };\n                })(mode);\n            }\n\n            make_popupmenu(this.action_icons.mode_icon, mode_mapping);\n        }\n    });\n\n    return {\n        TrackHeaderView: TrackHeaderView\n    };\n});\n"]}