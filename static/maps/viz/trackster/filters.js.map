{"version":3,"sources":["viz/trackster/filters.js"],"names":["define","_","extend","Filter","obj_dict","this","manager","name","tool_id","prototype","to_dict","index","tool_exp_name","create_action_icon","title","css_class","on_click_fn","$","attr","addClass","tooltip","click","call","max","Number","MAX_VALUE","high","slider","min","slider_label","container","filter","parent_div","filter_label","force","values_span","clear_after","appendTo","display_controls_div","height_icon","height_filter","values_span_container","append","slider_div","transparency_icon","step","alpha_filter","slide","event","ui","change","control_element","NumberFilter","multi_value","slider_row","text","parseFloat","input_size","toString","length","span","e","stopPropagation","blur","keyCode","trigger","focus","select","remove","cur_value","new_value","invalid","alert","a_val","isNaN","slider_max","slider_min","val","split","type","copy","find","removeClass","hide","show","get_slider_step","range","track","request_draw","values","setTimeout","hover","_keep_val","i","to_filter","returnVal","low","update_attrs","updated","applies_to","element","Math","value","self","keep","Array","bind","height_filter_name","filters_dict","add_filter","update_ui_elt","filters","run_buttons_row","filter_manager","FiltersManager","filter_dicts","visible","alpha_filter_name","remove_all","children","clear_filters","log","run_on_dataset","get_or_create_dict_item","key","dict","tool_filter_conditions","toggle","is","active_filters_list","push","active_filters","target_dataset_id","run_filter","input_dataset_id","filter_tuple","cond","tool_filter_str","new_track","getJSON","run_tool_url","url_params","response","error","Galaxy","modal","init_filters","new_item","join","input","slice","body","buttons","Close","dataset_id"],"mappings":"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","file":"../../../scripts/viz/trackster/filters.js","sourcesContent":["define([\"libs/underscore\"], function(_) {\n    var extend = _.extend;\n\n    /**\n * Filters that enable users to show/hide data points dynamically.\n */\n    var Filter = function(obj_dict) {\n        this.manager = null;\n        this.name = obj_dict.name;\n        // Index into payload to filter.\n        this.index = obj_dict.index;\n        this.tool_id = obj_dict.tool_id;\n        // Name to use for filter when building expression for tool.\n        this.tool_exp_name = obj_dict.tool_exp_name;\n    };\n\n    extend(Filter.prototype, {\n        /**\n     * Convert filter to dictionary.\n     */\n        to_dict: function() {\n            return {\n                name: this.name,\n                index: this.index,\n                tool_id: this.tool_id,\n                tool_exp_name: this.tool_exp_name\n            };\n        }\n    });\n\n    /**\n * Creates an action icon.\n */\n    var create_action_icon = function(title, css_class, on_click_fn) {\n        return $(\"<a/>\")\n            .attr(\"href\", \"javascript:void(0);\")\n            .attr(\"title\", title)\n            .addClass(\"icon-button\")\n            .addClass(css_class)\n            .tooltip()\n            .click(on_click_fn);\n    };\n\n    /**\n * Number filters have a min, max as well as a low, high; low and high are used \n */\n    var NumberFilter = function(obj_dict) {\n        //\n        // Attribute init.\n        //\n        Filter.call(this, obj_dict);\n        // Filter low/high. These values are used to filter elements.\n        this.low = \"low\" in obj_dict ? obj_dict.low : -Number.MAX_VALUE;\n        this.high = \"high\" in obj_dict ? obj_dict.high : Number.MAX_VALUE;\n        // Slide min/max. These values are used to set/update slider.\n        this.min = \"min\" in obj_dict ? obj_dict.min : Number.MAX_VALUE;\n        this.max = \"max\" in obj_dict ? obj_dict.max : -Number.MAX_VALUE;\n        // UI elements associated with filter.\n        this.container = null;\n        this.slider = null;\n        this.slider_label = null;\n\n        //\n        // Create HTML.\n        //\n\n        // Function that supports inline text editing of slider values.\n        // Enable users to edit parameter's value via a text box.\n        var edit_slider_values = function(container, span, slider) {\n            container.click(function() {\n                var cur_value = span.text(),\n                    max = parseFloat(slider.slider(\"option\", \"max\")),\n                    input_size =\n                        max <= 1\n                            ? 4\n                            : max <= 1000000 ? max.toString().length : 6,\n                    multi_value = false,\n                    slider_row = $(this).parents(\".slider-row\");\n\n                // Row now has input.\n                slider_row.addClass(\"input\");\n\n                // Increase input size if there are two values.\n                if (slider.slider(\"option\", \"values\")) {\n                    input_size = 2 * input_size + 1;\n                    multi_value = true;\n                }\n                span.text(\"\");\n                // Temporary input for changing value.\n                $(\"<input type='text'/>\")\n                    .attr(\"size\", input_size)\n                    .attr(\"maxlength\", input_size)\n                    .attr(\"value\", cur_value)\n                    .appendTo(span)\n                    .focus()\n                    .select()\n                    .click(function(e) {\n                        // Don't want click to propogate up to values_span and restart everything.\n                        e.stopPropagation();\n                    })\n                    .blur(function() {\n                        $(this).remove();\n                        span.text(cur_value);\n                        slider_row.removeClass(\"input\");\n                    })\n                    .keyup(function(e) {\n                        if (e.keyCode === 27) {\n                            // Escape key.\n                            $(this).trigger(\"blur\");\n                        } else if (e.keyCode === 13) {\n                            //\n                            // Enter/return key initiates callback. If new value(s) are in slider range,\n                            // change value (which calls slider's change() function).\n                            //\n                            var slider_min = slider.slider(\"option\", \"min\"),\n                                slider_max = slider.slider(\"option\", \"max\"),\n                                invalid = function(a_val) {\n                                    return (\n                                        isNaN(a_val) ||\n                                        a_val > slider_max ||\n                                        a_val < slider_min\n                                    );\n                                },\n                                new_value = $(this).val();\n                            if (!multi_value) {\n                                new_value = parseFloat(new_value);\n                                if (invalid(new_value)) {\n                                    alert(\n                                        \"Parameter value must be in the range [\" +\n                                            slider_min +\n                                            \"-\" +\n                                            slider_max +\n                                            \"]\"\n                                    );\n                                    return $(this);\n                                }\n                            } else {\n                                // Multi value.\n                                new_value = new_value.split(\"-\");\n                                new_value = [\n                                    parseFloat(new_value[0]),\n                                    parseFloat(new_value[1])\n                                ];\n                                if (\n                                    invalid(new_value[0]) ||\n                                    invalid(new_value[1])\n                                ) {\n                                    alert(\n                                        \"Parameter value must be in the range [\" +\n                                            slider_min +\n                                            \"-\" +\n                                            slider_max +\n                                            \"]\"\n                                    );\n                                    return $(this);\n                                }\n                            }\n\n                            // Updating the slider also updates slider values and removes input.\n                            slider.slider(\n                                multi_value ? \"values\" : \"value\",\n                                new_value\n                            );\n                            slider_row.removeClass(\"input\");\n                        }\n                    });\n            });\n        };\n\n        var filter = this;\n\n        filter.parent_div = $(\"<div/>\").addClass(\"filter-row slider-row\");\n\n        // Set up filter label (name, values).\n        var filter_label = $(\"<div/>\")\n                .addClass(\"elt-label\")\n                .appendTo(filter.parent_div),\n            name_span = $(\"<span/>\")\n                .addClass(\"slider-name\")\n                .text(filter.name + \"  \")\n                .appendTo(filter_label),\n            values_span = $(\"<span/>\").text(this.low + \"-\" + this.high),\n            values_span_container = $(\"<span/>\")\n                .addClass(\"slider-value\")\n                .appendTo(filter_label)\n                .append(\"[\")\n                .append(values_span)\n                .append(\"]\");\n        filter.values_span = values_span;\n\n        // Set up slider for filter.\n        var slider_div = $(\"<div/>\")\n            .addClass(\"slider\")\n            .appendTo(filter.parent_div);\n        filter.control_element = $(\"<div/>\")\n            .attr(\"id\", filter.name + \"-filter-control\")\n            .appendTo(slider_div);\n        filter.control_element.slider({\n            range: true,\n            min: this.min,\n            max: this.max,\n            step: this.get_slider_step(this.min, this.max),\n            values: [this.low, this.high],\n            slide: function(event, ui) {\n                filter.slide(event, ui);\n            },\n            change: function(event, ui) {\n                filter.control_element\n                    .slider(\"option\", \"slide\")\n                    .call(filter.control_element, event, ui);\n            }\n        });\n        filter.slider = filter.control_element;\n        filter.slider_label = values_span;\n\n        // Enable users to edit slider values via text box.\n        edit_slider_values(\n            values_span_container,\n            values_span,\n            filter.control_element\n        );\n\n        // Set up filter display controls.\n        var display_controls_div = $(\"<div/>\")\n            .addClass(\"display-controls\")\n            .appendTo(filter.parent_div);\n        this.transparency_icon = create_action_icon(\n            \"Use filter for data transparency\",\n            \"layer-transparent\",\n            function() {\n                if (filter.manager.alpha_filter !== filter) {\n                    // Setting this filter as the alpha filter.\n                    filter.manager.alpha_filter = filter;\n                    // Update UI for new filter.\n                    filter.manager.parent_div\n                        .find(\".layer-transparent\")\n                        .removeClass(\"active\")\n                        .hide();\n                    filter.transparency_icon.addClass(\"active\").show();\n                } else {\n                    // Clearing filter as alpha filter.\n                    filter.manager.alpha_filter = null;\n                    filter.transparency_icon.removeClass(\"active\");\n                }\n                filter.manager.track.request_draw({\n                    force: true,\n                    clear_after: true\n                });\n            }\n        )\n            .appendTo(display_controls_div)\n            .hide();\n        this.height_icon = create_action_icon(\n            \"Use filter for data height\",\n            \"arrow-resize-090\",\n            function() {\n                if (filter.manager.height_filter !== filter) {\n                    // Setting this filter as the height filter.\n                    filter.manager.height_filter = filter;\n                    // Update UI for new filter.\n                    filter.manager.parent_div\n                        .find(\".arrow-resize-090\")\n                        .removeClass(\"active\")\n                        .hide();\n                    filter.height_icon.addClass(\"active\").show();\n                } else {\n                    // Clearing filter as alpha filter.\n                    filter.manager.height_filter = null;\n                    filter.height_icon.removeClass(\"active\");\n                }\n                filter.manager.track.request_draw({\n                    force: true,\n                    clear_after: true\n                });\n            }\n        )\n            .appendTo(display_controls_div)\n            .hide();\n        filter.parent_div.hover(\n            function() {\n                filter.transparency_icon.show();\n                filter.height_icon.show();\n            },\n            function() {\n                if (filter.manager.alpha_filter !== filter) {\n                    filter.transparency_icon.hide();\n                }\n                if (filter.manager.height_filter !== filter) {\n                    filter.height_icon.hide();\n                }\n            }\n        );\n\n        // Add to clear floating layout.\n        $(\"<div style='clear: both;'/>\").appendTo(filter.parent_div);\n    };\n    extend(NumberFilter.prototype, {\n        /**\n     * Convert filter to dictionary.\n     */\n        to_dict: function() {\n            var obj_dict = Filter.prototype.to_dict.call(this);\n            return extend(obj_dict, {\n                type: \"number\",\n                min: this.min,\n                max: this.max,\n                low: this.low,\n                high: this.high\n            });\n        },\n        /**\n     * Return a copy of filter.\n     */\n        copy: function() {\n            return new NumberFilter({\n                name: this.name,\n                index: this.index,\n                tool_id: this.tool_id,\n                tool_exp_name: this.tool_exp_name\n            });\n        },\n        /**\n     * Get step for slider.\n     */\n        // FIXME: make this a \"static\" function.\n        get_slider_step: function(min, max) {\n            var range = max - min;\n            return range <= 2 ? 0.01 : 1;\n        },\n        /**\n     * Handle slide events.\n     */\n        slide: function(event, ui) {\n            var values = ui.values;\n\n            // Set new values in UI.\n            this.values_span.text(values[0] + \"-\" + values[1]);\n\n            // Set new values in filter.\n            this.low = values[0];\n            this.high = values[1];\n\n            // Set timeout to update if filter low, high are stable.\n            var self = this;\n            setTimeout(function() {\n                if (values[0] === self.low && values[1] === self.high) {\n                    self.manager.track.request_draw({\n                        force: true,\n                        clear_after: true\n                    });\n                }\n            }, 25);\n        },\n        /** \n     * Returns true if filter can be applied to element.\n     */\n        applies_to: function(element) {\n            if (element.length > this.index) {\n                return true;\n            }\n            return false;\n        },\n        /**\n     * Helper function: returns true if value in in filter's [low, high] range.\n     */\n        _keep_val: function(val) {\n            return isNaN(val) || (val >= this.low && val <= this.high);\n        },\n        /**\n     * Returns true if (a) element's value(s) is in [low, high] (range is inclusive) \n     * or (b) if value is non-numeric and hence unfilterable.\n     */\n        keep: function(element) {\n            if (!this.applies_to(element)) {\n                // No element to filter on.\n                return true;\n            }\n\n            // Keep value function.\n            var filter = this;\n\n            // Do filtering.\n            var to_filter = element[this.index];\n            if (to_filter instanceof Array) {\n                var returnVal = true;\n                for (var i = 0; i < to_filter.length; i++) {\n                    if (!this._keep_val(to_filter[i])) {\n                        // Exclude element.\n                        returnVal = false;\n                        break;\n                    }\n                }\n                return returnVal;\n            } else {\n                return this._keep_val(element[this.index]);\n            }\n        },\n        /**\n     * Update filter's min and max values based on element's values.\n     */\n        update_attrs: function(element) {\n            var updated = false;\n            if (!this.applies_to(element)) {\n                return updated;\n            }\n\n            //\n            // Update filter's min, max based on element values.\n            //\n\n            // Make value(s) into an Array.\n            var values = element[this.index];\n            if (!(values instanceof Array)) {\n                values = [values];\n            }\n\n            // Loop through values and update min, max.\n            for (var i = 0; i < values.length; i++) {\n                var value = values[i];\n                if (value < this.min) {\n                    this.min = Math.floor(value);\n                    updated = true;\n                }\n                if (value > this.max) {\n                    this.max = Math.ceil(value);\n                    updated = true;\n                }\n            }\n            return updated;\n        },\n        /**\n     * Update filter's slider.\n     */\n        update_ui_elt: function() {\n            // Only show filter if min < max because filter is not useful otherwise. This\n            // covers all corner cases, such as when min, max have not been defined and\n            // when min == max.\n            if (this.min < this.max) {\n                this.parent_div.show();\n            } else {\n                this.parent_div.hide();\n            }\n\n            var slider_min = this.slider.slider(\"option\", \"min\"),\n                slider_max = this.slider.slider(\"option\", \"max\");\n            if (this.min < slider_min || this.max > slider_max) {\n                // Update slider min, max, step.\n                this.slider.slider(\"option\", \"min\", this.min);\n                this.slider.slider(\"option\", \"max\", this.max);\n                this.slider.slider(\n                    \"option\",\n                    \"step\",\n                    this.get_slider_step(this.min, this.max)\n                );\n                // Refresh slider:\n                // TODO: do we want to keep current values or reset to min/max?\n                // Currently we reset values:\n                this.slider.slider(\"option\", \"values\", [this.min, this.max]);\n                // To use the current values.\n                //var values = this.slider.slider( \"option\", \"values\" );\n                //this.slider.slider( \"option\", \"values\", values );\n            }\n        }\n    });\n\n    /**\n * Manages a set of filters.\n */\n    var FiltersManager = function(track, obj_dict) {\n        this.track = track;\n        this.alpha_filter = null;\n        this.height_filter = null;\n        this.filters = [];\n\n        //\n        // Create HTML.\n        //\n\n        //\n        // Create parent div.\n        //\n        this.parent_div = $(\"<div/>\")\n            .addClass(\"filters\")\n            .hide();\n        // Disable dragging, double clicking, keys on div so that actions on slider do not impact viz.\n        this.parent_div\n            .bind(\"drag\", function(e) {\n                e.stopPropagation();\n            })\n            .click(function(e) {\n                e.stopPropagation();\n            })\n            .bind(\"dblclick\", function(e) {\n                e.stopPropagation();\n            })\n            .bind(\"keydown\", function(e) {\n                e.stopPropagation();\n            });\n\n        //\n        // Restore state from dict.\n        //\n        if (obj_dict && \"filters\" in obj_dict) {\n            // Second condition needed for backward compatibility.\n            var alpha_filter_name =\n                    \"alpha_filter\" in obj_dict ? obj_dict.alpha_filter : null,\n                height_filter_name =\n                    \"height_filter\" in obj_dict ? obj_dict.height_filter : null,\n                filters_dict = obj_dict.filters,\n                filter;\n            for (var i = 0; i < filters_dict.length; i++) {\n                if (filters_dict[i].type === \"number\") {\n                    filter = new NumberFilter(filters_dict[i]);\n                    this.add_filter(filter);\n                    if (filter.name === alpha_filter_name) {\n                        this.alpha_filter = filter;\n                        filter.transparency_icon.addClass(\"active\").show();\n                    }\n                    if (filter.name === height_filter_name) {\n                        this.height_filter = filter;\n                        filter.height_icon.addClass(\"active\").show();\n                    }\n                } else {\n                    console.log(\"ERROR: unsupported filter: \", name, type);\n                }\n            }\n\n            if (\"visible\" in obj_dict && obj_dict.visible) {\n                this.parent_div.show();\n            }\n        }\n\n        // Add button to filter complete dataset.\n        if (this.filters.length !== 0) {\n            var run_buttons_row = $(\"<div/>\")\n                .addClass(\"param-row\")\n                .appendTo(this.parent_div);\n            var run_on_dataset_button = $(\"<input type='submit'/>\")\n                .attr(\"value\", \"Run on complete dataset\")\n                .appendTo(run_buttons_row);\n            var filter_manager = this;\n            run_on_dataset_button.click(function() {\n                filter_manager.run_on_dataset();\n            });\n        }\n    };\n\n    extend(FiltersManager.prototype, {\n        // HTML manipulation and inspection.\n        show: function() {\n            this.parent_div.show();\n        },\n        hide: function() {\n            this.parent_div.hide();\n        },\n        toggle: function() {\n            this.parent_div.toggle();\n        },\n        visible: function() {\n            return this.parent_div.is(\":visible\");\n        },\n        /**\n     * Returns dictionary for manager.\n     */\n        to_dict: function() {\n            var obj_dict = {},\n                filter_dicts = [],\n                filter;\n\n            // Include individual filter states.\n            for (var i = 0; i < this.filters.length; i++) {\n                filter = this.filters[i];\n                filter_dicts.push(filter.to_dict());\n            }\n            obj_dict.filters = filter_dicts;\n\n            // Include transparency, height filters.\n            obj_dict.alpha_filter = this.alpha_filter\n                ? this.alpha_filter.name\n                : null;\n            obj_dict.height_filter = this.height_filter\n                ? this.height_filter.name\n                : null;\n\n            // Include visibility.\n            obj_dict.visible = this.parent_div.is(\":visible\");\n\n            return obj_dict;\n        },\n        /**\n     * Return a copy of the manager.\n     */\n        copy: function(new_track) {\n            var copy = new FiltersManager(new_track);\n            for (var i = 0; i < this.filters.length; i++) {\n                copy.add_filter(this.filters[i].copy());\n            }\n            return copy;\n        },\n        /**\n     * Add a filter to the manager.\n     */\n        add_filter: function(filter) {\n            filter.manager = this;\n            this.parent_div.append(filter.parent_div);\n            this.filters.push(filter);\n        },\n        /**\n     * Remove all filters from manager.\n     */\n        remove_all: function() {\n            this.filters = [];\n            this.parent_div.children().remove();\n        },\n        /**\n     * Initialize filters.\n     */\n\n        init_filters: function() {\n            for (var i = 0; i < this.filters.length; i++) {\n                var filter = this.filters[i];\n                filter.update_ui_elt();\n            }\n        },\n        /**\n     * Clear filters so that they do not impact track display.\n     */\n        clear_filters: function() {\n            for (var i = 0; i < this.filters.length; i++) {\n                var filter = this.filters[i];\n                filter.slider.slider(\"option\", \"values\", [\n                    filter.min,\n                    filter.max\n                ]);\n            }\n            this.alpha_filter = null;\n            this.height_filter = null;\n\n            // Hide icons for setting filters.\n            this.parent_div.find(\".icon-button\").hide();\n        },\n        run_on_dataset: function() {\n            // Get or create dictionary item.\n            var get_or_create_dict_item = function(dict, key, new_item) {\n                // Add new item to dict if\n                if (!(key in dict)) {\n                    dict[key] = new_item;\n                }\n                return dict[key];\n            };\n\n            //\n            // Find and group active filters. Active filters are those being used to hide data.\n            // Filters with the same tool id are grouped.\n            //\n            var active_filters = {},\n                filter,\n                tool_filter_conditions;\n            for (var i = 0; i < this.filters.length; i++) {\n                filter = this.filters[i];\n                if (filter.tool_id) {\n                    // Add filtering conditions if filter low/high are set.\n                    if (filter.min !== filter.low) {\n                        tool_filter_conditions = get_or_create_dict_item(\n                            active_filters,\n                            filter.tool_id,\n                            []\n                        );\n                        tool_filter_conditions[tool_filter_conditions.length] =\n                            filter.tool_exp_name + \" >= \" + filter.low;\n                    }\n                    if (filter.max !== filter.high) {\n                        tool_filter_conditions = get_or_create_dict_item(\n                            active_filters,\n                            filter.tool_id,\n                            []\n                        );\n                        tool_filter_conditions[tool_filter_conditions.length] =\n                            filter.tool_exp_name + \" <= \" + filter.high;\n                    }\n                }\n            }\n\n            //\n            // Use tools to run filters.\n            //\n\n            // Create list of (tool_id, tool_filters) tuples.\n            var active_filters_list = [];\n            for (var tool_id in active_filters) {\n                active_filters_list[active_filters_list.length] = [\n                    tool_id,\n                    active_filters[tool_id]\n                ];\n            }\n\n            // Invoke recursive function to run filters; this enables chaining of filters via\n            // iteratively application.\n            (function run_filter(input_dataset_id, filters) {\n                var // Set up filtering info and params.\n                    filter_tuple = filters[0],\n                    tool_id = filter_tuple[0],\n                    tool_filters = filter_tuple[1],\n                    tool_filter_str = \"(\" + tool_filters.join(\") and (\") + \")\",\n                    url_params = {\n                        cond: tool_filter_str,\n                        input: input_dataset_id,\n                        target_dataset_id: input_dataset_id,\n                        tool_id: tool_id\n                    };\n\n                // Remove current filter.\n                filters = filters.slice(1);\n\n                $.getJSON(run_tool_url, url_params, function(response) {\n                    if (response.error) {\n                        // General error.\n                        Galaxy.modal.show({\n                            title: \"Filter Dataset\",\n                            body: \"Error running tool \" + tool_id,\n                            buttons: { Close: Galaxy.modal.hide() }\n                        });\n                    } else if (filters.length === 0) {\n                        // No more filters to run.\n                        Galaxy.modal.show({\n                            title: \"Filtering Dataset\",\n                            body:\n                                \"Filter(s) are running on the complete dataset. Outputs are in dataset's history.\",\n                            buttons: { Close: Galaxy.modal.hide() }\n                        });\n                    } else {\n                        // More filters to run.\n                        run_filter(response.dataset_id, filters);\n                    }\n                });\n            })(this.track.dataset_id, active_filters_list);\n        }\n    });\n\n    return {\n        FiltersManager: FiltersManager,\n        NumberFilter: NumberFilter\n    };\n});\n"]}