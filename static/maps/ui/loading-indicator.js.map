{"version":3,"sources":["ui/loading-indicator.js"],"names":["root","factory","define","amd","LoadingIndicator","undefined","$where","options","html","$indicator","position","$text","top","bottom","left","right","opacity","children","cover","css","z-index","margin","color","margin-top","msg","speed","parent","find","render","self","this","extend","jQuery","message","callback","insertBefore","fadeIn","text","hide","length","fadeOut","remove"],"mappings":"cAAA,SAAUA,EAAMC,GACU,mBAAXC,QAAyBA,OAAOC,IAAvCD,UAAOA,GAAXF,EAGOI,iBAAAH,IAJX,MAAAI,EAUS,WAkGL,OA5GJ,SAUoBC,EAAAC,GAaR,SAAIC,IAAJ,IAAIA,GASAC,kCAIYC,uCAJhB,oDAOIC,4DAXA,SAaAJ,UACAE,KAAAA,MAEIG,EAAKN,EAAAA,GACLO,OACAC,IACAC,EAAOT,MACPU,SANW,UAuCnB,OAvCIP,EAAAQ,SAAA,2BAWIV,EAAAW,OADuDT,EAA3DU,KAGGC,UAAA,EACHT,IAAQF,EAAAA,IAAWQ,OACfI,OAAQf,EAAAa,IAAA,UACRH,KAAAA,EAASG,IAF8C,QAGvDG,MAAOhB,EAAAa,IAAA,SAHXH,QAAA,GAKAL,mBAAe,QACXU,aAAQ,WADZZ,EAAAQ,SAAA,2BAAAE,KAIHI,aAAA,UATWd,EAAWQ,SAAS,2BAA2BE,KAanDE,OAAA,oBACFG,QAAO,OACLC,MAAAA,SAGHC,SACAC,8BAFLR,KAIAE,OAAA,kBACKZ,aAAamB,WAGXC,EAtEf,IAAAA,EAAAC,KA6FI,OA3FAvB,EAAIsB,OAAJE,QAEAxB,OAAUyB,GAINzB,OAiEJsB,EAAKI,KAAL,SAAeT,EAASA,EAAKU,GAYpB,OAXLL,EAAKpB,GAAAA,aADTgB,EAAAA,GAAA,OAIAI,EACIJ,SACII,KAAKpB,sBACLoB,SAEIA,EAAApB,WAAIyB,IAAUC,aAAA7B,GACV4B,EAAAA,QAAAA,GACHL,EAAApB,WAAA2B,OAAAX,EAAAS,GAJLL,GAQIK,EAAAA,QAAAA,SAAAA,GACHL,EAAApB,WAAAkB,KAAA,KAAAU,KAAAb,IAGRK,EAfDS,KAAA,SAAAb,EAAAS,GAcI,OAEJT,EAAAA,GAAA,OACHI,EAAApB,YAAAoB,EAAApB,WAAA8B,OAdWV,EAAKpB,WAAW+B,QAAQf,EAAO,WAgB3CI,EAAApB,WAAAgC,SACOrC,GA5GX8B,MAkGoBA,GACAA,IAGDL,GAEJA","file":"../../scripts/ui/loading-indicator.js","sourcesContent":["(function(root, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], factory);\n    } else {\n        // Browser globals\n        root.LoadingIndicator = factory();\n    }\n\n    //============================================================================\n})(this, function() {\n    //TODO: too specific to history panel\n    function LoadingIndicator($where, options) {\n        var self = this;\n        // defaults\n        options = jQuery.extend(\n            {\n                cover: false\n            },\n            options || {}\n        );\n\n        function render() {\n            var html = [\n                '<div class=\"loading-indicator\">',\n                '<div class=\"loading-indicator-text\">',\n                '<span class=\"fa fa-spinner fa-spin fa-lg\"></span>',\n                '<span class=\"loading-indicator-message\">loading...</span>',\n                \"</div>\",\n                \"</div>\"\n            ].join(\"\\n\");\n\n            var $indicator = $(html)\n                    .hide()\n                    .css(\n                        options.css || {\n                            position: \"fixed\"\n                        }\n                    ),\n                $text = $indicator.children(\".loading-indicator-text\");\n\n            if (options.cover) {\n                $indicator.css({\n                    \"z-index\": 2,\n                    top: $where.css(\"top\"),\n                    bottom: $where.css(\"bottom\"),\n                    left: $where.css(\"left\"),\n                    right: $where.css(\"right\"),\n                    opacity: 0.5,\n                    \"background-color\": \"white\",\n                    \"text-align\": \"center\"\n                });\n                $text = $indicator.children(\".loading-indicator-text\").css({\n                    \"margin-top\": \"20px\"\n                });\n            } else {\n                $text = $indicator.children(\".loading-indicator-text\").css({\n                    margin: \"12px 0px 0px 10px\",\n                    opacity: \"0.85\",\n                    color: \"grey\"\n                });\n                $text.children(\".loading-indicator-message\").css({\n                    margin: \"0px 8px 0px 0px\",\n                    \"font-style\": \"italic\"\n                });\n            }\n            return $indicator;\n        }\n\n        self.show = function(msg, speed, callback) {\n            msg = msg || \"loading...\";\n            speed = speed || \"fast\";\n            // remove previous\n            $where\n                .parent()\n                .find(\".loading-indicator\")\n                .remove();\n            // since position is fixed - we insert as sibling\n            self.$indicator = render().insertBefore($where);\n            self.message(msg);\n            self.$indicator.fadeIn(speed, callback);\n            return self;\n        };\n\n        self.message = function(msg) {\n            self.$indicator.find(\"i\").text(msg);\n        };\n\n        self.hide = function(speed, callback) {\n            speed = speed || \"fast\";\n            if (self.$indicator && self.$indicator.length) {\n                self.$indicator.fadeOut(speed, function() {\n                    self.$indicator.remove();\n                    if (callback) {\n                        callback();\n                    }\n                });\n            } else {\n                if (callback) {\n                    callback();\n                }\n            }\n            return self;\n        };\n        return self;\n    }\n\n    //============================================================================\n    return LoadingIndicator;\n});\n"]}