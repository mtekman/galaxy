{"version":3,"sources":["ui/editable-text.js"],"names":["factory","define","amd","jQuery","$","fn","make_text_editable","config_dict","num_cols","num_rows","use_textarea","help_text","on_finish","container","children","addClass","click","e","this","length","set_text","input_elt","new_text","text","html","cur_text","keyCode","button_elt","cols","trim","keyup","val","stopPropagation","size","blur","trigger","attr","append","focus","select","tooltip"],"mappings":"cAAA,SAAAA,GACA,mBAAAC,QAAAA,OAAAC,IAIQD,QAAA,UAAAD,GAFJA,EAKOG,QARX,CAUQH,SAAAA,GACH,aAED,IAAAI,EAAAD,EAUAC,EAAEC,GAAGC,mBAAqB,SAASC,GAAnC,IAAKD,EAAAA,aAAqBC,EAAAA,EAAsBC,SAAA,GAC5CC,EAAA,aAAAF,EAAAA,EAAAE,SAAA,EACID,EACAC,iBAAWF,GACXG,EACIA,aAKJC,EADI,cAAeJ,EAAcA,EAAYK,UAAY,KAI7DD,EACIE,cAAJN,EAAAA,EAAAI,UAAA,KAGIE,EAAYC,EAAAA,MAsFhB,OArFQD,EAAAE,SAAA,iBAAAC,MAAA,SAAAC,GADJ,KAAIb,EAAEc,MAAMJ,SAAS,UAAUK,OAAS,GAAxC,CAOAN,EAAIO,YAAW,iBAGX,IA2BYC,EACAD,EA5BZA,EAAIE,SAAJA,GACIT,EAAAA,KAAUU,UAAKD,SAEf,KAAAA,EACAT,EAAUW,KAAKF,GAAfT,EAAUW,KAAK,QAKfZ,EAAAA,SAAUU,iBAZlBV,GAYQA,EAAUU,IAKdG,EAOAf,aAAcH,EACdc,EAAcI,SAIAC,EAAFH,OAIPb,GACLiB,EAAAA,EAAavB,eAGLgB,MAAAA,KAASC,EAATO,KAAApB,IACAe,KAAAnB,EAAAyB,KAAAJ,IACAK,MAAO,SAAPb,GALR,KAAAA,EAAAS,SAQYtB,EAAEqB,KAMNE,EAAMD,EAAAA,aACFH,KAAA,QACAnB,MAAE,WAGFgB,OALJA,EAGaM,EAAFK,QAEPX,KAGJC,EAAAjB,EAAA,wBACAa,MAAEe,MAAAA,EAAFH,KAAAJ,GAAAQ,KAAAzB,IAfR0B,KAAA,WAiBHd,EAAAK,KAEDK,MAAA,SAAAb,GACA,KAAeA,EAAfS,QAEgBtB,EAAAc,MAAAiB,QAAA,QACZ,KAAiBR,EAAAA,SAErBP,EAAAhB,EAAAc,MAAAa,OAIEC,EAAAA,oBAKFnB,EAAUuB,KAAK,IAClBvB,EAAAwB,OAAAhB,GAbOM,GAeDd,EAAPwB,OAAAV,GAZIN,EAAUiB,QAelBjB,EAAAkB,SAXQtB,EAAEe,qBAIFrB,GACAE,EAAUuB,KAAK,QAASzB,GAAW6B,UAGhC3B","file":"../../scripts/ui/editable-text.js","sourcesContent":["// from: https://raw.githubusercontent.com/umdjs/umd/master/jqueryPlugin.js\n// Uses AMD or browser globals to create a jQuery plugin.\n(function(factory) {\n    if (typeof define === \"function\" && define.amd) {\n        //TODO: So...this turns out to be an all or nothing thing. If I load jQuery in the define below, it will\n        //  (of course) wipe the old jquery *and all the plugins loaded into it*. So the define below *is still\n        //  relying on jquery being loaded globally* in order to preserve plugins.\n        define([\"jquery\"], factory);\n    } else {\n        // Browser globals\n        factory(jQuery);\n    }\n})(function(jQuery) {\n    \"use_strict\";\n\n    var $ = jQuery;\n\n    // ============================================================================\n    /**\n * Make an element with text editable: (a) when user clicks on text, a textbox/area\n * is provided for editing; (b) when enter key pressed, element's text is set and on_finish\n * is called.\n */\n    $.fn.make_text_editable = function(config_dict) {\n        // Get config options.\n        var num_cols = \"num_cols\" in config_dict ? config_dict.num_cols : 30,\n            num_rows = \"num_rows\" in config_dict ? config_dict.num_rows : 4,\n            use_textarea =\n                \"use_textarea\" in config_dict\n                    ? config_dict.use_textarea\n                    : false,\n            on_finish =\n                \"on_finish\" in config_dict ? config_dict.on_finish : null,\n            help_text =\n                \"help_text\" in config_dict ? config_dict.help_text : null;\n\n        // Add element behavior.\n        var container = $(this);\n        container.addClass(\"editable-text\").click(function(e) {\n            // If there's already an input element, editing is active, so do nothing.\n            if ($(this).children(\":input\").length > 0) {\n                return;\n            }\n\n            container.removeClass(\"editable-text\");\n\n            // Handler for setting element text.\n            var set_text = function(new_text) {\n                container.find(\":input\").remove();\n\n                if (new_text !== \"\") {\n                    container.text(new_text);\n                } else {\n                    // No text; need a line so that there is a click target.\n                    container.html(\"<br>\");\n                }\n                container.addClass(\"editable-text\");\n\n                if (on_finish) {\n                    on_finish(new_text);\n                }\n            };\n\n            // Create input element(s) for editing.\n            var cur_text =\n                    \"cur_text\" in config_dict\n                        ? config_dict.cur_text\n                        : container.text(),\n                input_elt,\n                button_elt;\n\n            if (use_textarea) {\n                input_elt = $(\"<textarea/>\")\n                    .attr({ rows: num_rows, cols: num_cols })\n                    .text($.trim(cur_text))\n                    .keyup(function(e) {\n                        if (e.keyCode === 27) {\n                            // Escape key.\n                            set_text(cur_text);\n                        }\n                    });\n                button_elt = $(\"<button/>\")\n                    .text(\"Done\")\n                    .click(function() {\n                        set_text(input_elt.val());\n                        // Return false so that click does not propogate to container.\n                        return false;\n                    });\n            } else {\n                input_elt = $(\"<input type='text'/>\")\n                    .attr({ value: $.trim(cur_text), size: num_cols })\n                    .blur(function() {\n                        set_text(cur_text);\n                    })\n                    .keyup(function(e) {\n                        if (e.keyCode === 27) {\n                            // Escape key.\n                            $(this).trigger(\"blur\");\n                        } else if (e.keyCode === 13) {\n                            // Enter key.\n                            set_text($(this).val());\n                        }\n\n                        // Do not propogate event to avoid unwanted side effects.\n                        e.stopPropagation();\n                    });\n            }\n\n            // Replace text with input object(s) and focus & select.\n            container.text(\"\");\n            container.append(input_elt);\n            if (button_elt) {\n                container.append(button_elt);\n            }\n            input_elt.focus();\n            input_elt.select();\n\n            // Do not propogate to elements below b/c that blurs input and prevents it from being used.\n            e.stopPropagation();\n        });\n\n        // Add help text if there some.\n        if (help_text) {\n            container.attr(\"title\", help_text).tooltip();\n        }\n\n        return container;\n    };\n\n    // ============================================================================\n});\n"]}