{"version":3,"sources":["ui/scroll-panel.js"],"names":["$","ui","plugin","add","drag","e","this","data","instance","timeout","clearTimeout","o","options","element","panel","width","panel_pos","panel_w","panel_h","viewport","parent","viewport_w","viewport_h","element_w","nudge","p_min_y","p_max_x","left","p_max_y","min_vis_x","min_vis_y","top","max_vis_y","max_vis_x","offset","click","mouse_y","mouse_x","t","Math","min","position","moved","css","amount_moved","p_min_x","max","element_h","ddmanager","prepareOffsets","mouseMove","stop"],"mappings":"aAEAA,EAAAC,GAAAC,OAAAC,IAAA,YAAA,eAGIC,KAAM,SAASC,EAAGJ,GADjBC,IAAOC,EAAIH,EAAAM,MAAaC,KAAA,aACzBH,aAAMI,EAAAC,SACF,IAAID,EAAAA,EAAAA,QACJE,EAAaF,EAASC,QAClBE,EAAOC,EAAAA,MACPC,EAAUL,EAAAA,WACVM,EAAUA,EAFdC,QAGIC,EAAAA,EAAYF,SACZG,EAAUH,EAAMC,SAChBG,EAAUJ,EAAAC,QACVI,EAAWL,EAAMM,SACjBC,EAAAA,EAAaF,QACbG,EAAAA,EAAaH,SACbI,GAAAA,EAIAC,IAbJP,EAAAI,GAgBII,IAAYP,EAAUI,GACtBI,GAjBJV,EAAAW,KAkBIC,EAlBJC,EAAAR,EAsBIS,GAAad,EAAUe,IAHvBC,EAAAF,EAAAR,EAEAW,EAAAA,EAAYJ,SAAAA,KAAYR,EArB5Ba,OAAAC,MAAAR,KA4BA,GA5BAS,QAsBIN,EAAAA,SAAad,IAAUe,EAtB3BG,OAAAC,MAAAJ,IA4BIf,EAAUW,KAdV,GAc4BU,EAlBhBxB,EAkBuCgB,EAAW,CAJ9DS,EAAAC,KAAAC,IAbQ,GAGR,EAUAxB,EAAAW,MACAU,EAAUpC,IAAGwC,OAASd,EAAOnB,KAAS0B,GAC1CE,GAAUnC,EACVO,EAAA0B,OAAAd,OAAAO,MAAAW,EACItB,EAAAA,SAAUW,MAAOD,EAEjBZ,IACA4B,GACAlC,EAAS0B,KAAOd,GAChBnB,EAvBYY,EAuBZoB,EACH,CAEIS,EAADH,KACAvB,IA1BQ,GA0BRA,EADAW,KAEAU,GAEAvB,EAAIwB,IAAIC,OAASf,EAAOR,KAAUW,GAClCb,GAAM6B,EACND,EAAQR,OAARd,OAAAO,MAAAW,EACA9B,EAAAA,SAAS0B,MAAOd,EAEnB,IAEIsB,GAID1B,EAAQuB,IApCItB,GAqCZH,QA1CYD,EA0CKG,EACjB,CACI4B,EAAAA,KAAAA,IA3CI,GAII3B,EAuCOD,EAAuBA,KAC1CR,EAAAA,IAAS0B,MAAOd,EAAhBW,IAA8Ba,GAE9BF,EAAA5B,EAAA2B,WAAAV,IAAAf,EAAAe,IACHvB,EAAA0B,OAAAd,OAAAW,KAAAa,EAEG3C,EAACyC,SACD1B,KAAAA,EAGA0B,GAAQH,EAER,IACAG,GACAlC,EAAS0B,IAAOd,GAChBnB,QA3DYY,EA2DO+B,EACnBF,CACH,IAAAJ,EAAAC,KAAAC,IA5DW,GA4DXxB,EAAAe,IAAAc,GACD/B,EAAA6B,IAAA,MAAA3B,EAAAe,IAAAO,EAAA,MAEGG,IAAAA,EAAoBK,EAAOL,IAASV,EAArBU,WAAlBV,IACGU,EAASd,OAAOY,OAAAR,KAAYU,EAC5BA,EAAAA,SAAHV,KAAuBS,EACvBE,GAAA,EAGCzC,EAAAwC,SAAAd,KAAAY,KAAAO,IAAA7C,EAAAwC,SAAAd,KAAA,GACD1B,EAAAwC,SAAAV,IAAAQ,KAAAO,IAAA7C,EAAAwC,SAAAV,IAAA,GACA9B,EAAAwC,SAAWd,KAAAY,KAAAC,IAAAvC,EAAAwC,SAAAd,KAAAV,EAAAM,GACPf,EAAAA,SAAAA,IAAA+B,KAAAC,IAAAvC,EAAAwC,SAAAV,IAAAb,EAAA6B,GAEIvC,GACHR,EAFkBC,GAAA+C,UAAnBC,eAAAzC,EAAAH,GAKFqC,IACElC,EAAAA,MAAWH,EACfK,EAAaF,QAASC,WAAtB,WACHD,EAAA0C,UAAA7C,IAhGL,MA6FI8C,KAAM,SAAS9C,EAAGJ,GACd,IAAIO,EAAWR,EAAEM,MAAMC,KAAK,aAC5BG,aAAaF,EAASC","file":"../../scripts/ui/scroll-panel.js","sourcesContent":["// This is an extension to jQuery UI draggable\n// When dragging move the parent element (\"panel\") relative to its parent\n// (\"viewport\") so that the draggable is always visible.\n\n$.ui.plugin.add(\"draggable\", \"scrollPanel\", {\n    drag: function(e, ui) {\n        var instance = $(this).data(\"draggable\");\n        clearTimeout(instance.timeout);\n        var o = ui.options,\n            element = instance.element,\n            panel = o.panel,\n            panel_pos = panel.position(),\n            panel_w = panel.width(),\n            panel_h = panel.height(),\n            viewport = panel.parent(),\n            viewport_w = viewport.width(),\n            viewport_h = viewport.height(),\n            element_w = element.width(),\n            element_h = element.height(),\n            moved = false,\n            close_dist = 5,\n            nudge = 23,\n            // Legal panel range\n            p_min_x = -(panel_w - viewport_w),\n            p_min_y = -(panel_h - viewport_h),\n            p_max_x = 0,\n            p_max_y = 0,\n            // Visible\n            min_vis_x = -panel_pos.left,\n            max_vis_x = min_vis_x + viewport_w,\n            min_vis_y = -panel_pos.top,\n            max_vis_y = min_vis_y + viewport_h,\n            // Mouse\n            mouse_x = ui.position.left + instance.offset.click.left;\n        mouse_y = ui.position.top + instance.offset.click.top;\n        // Move it\n        if (panel_pos.left < p_max_x && mouse_x - close_dist < min_vis_x) {\n            var t = Math.min(nudge, p_max_x - panel_pos.left);\n            panel.css(\"left\", panel_pos.left + t);\n            moved = true;\n            instance.offset.parent.left += t;\n            ui.position.left -= t;\n        }\n        if (\n            !moved &&\n            panel_pos.left > p_min_x &&\n            mouse_x + close_dist > max_vis_x\n        ) {\n            var t = Math.min(nudge, panel_pos.left - p_min_x);\n            panel.css(\"left\", panel_pos.left - t);\n            moved = true;\n            instance.offset.parent.left -= t;\n            ui.position.left += t;\n        }\n        if (\n            !moved &&\n            panel_pos.top < p_max_y &&\n            mouse_y - close_dist < min_vis_y\n        ) {\n            var t = Math.min(nudge, p_max_y - panel_pos.top);\n            panel.css(\"top\", panel_pos.top + t);\n            // Firefox sometimes moves by less, so we need to check. Yuck.\n            var amount_moved = panel.position().top - panel_pos.top;\n            instance.offset.parent.top += amount_moved;\n            ui.position.top -= amount_moved;\n            moved = true;\n        }\n        if (\n            !moved &&\n            panel_pos.top > p_min_y &&\n            mouse_y + close_dist > max_vis_y\n        ) {\n            var t = Math.min(nudge, panel_pos.top - p_min_x);\n            panel.css(\"top\", panel_pos.top - t + \"px\");\n            // Firefox sometimes moves by less, so we need to check. Yuck.\n            var amount_moved = panel_pos.top - panel.position().top;\n            instance.offset.parent.top -= amount_moved;\n            ui.position.top += amount_moved;\n            moved = true;\n        }\n        // Still contain in panel\n        ui.position.left = Math.max(ui.position.left, 0);\n        ui.position.top = Math.max(ui.position.top, 0);\n        ui.position.left = Math.min(ui.position.left, panel_w - element_w);\n        ui.position.top = Math.min(ui.position.top, panel_h - element_h);\n        // Update offsets\n        if (moved) {\n            $.ui.ddmanager.prepareOffsets(instance, e);\n        }\n        // Keep moving even if mouse doesn't move\n        if (moved) {\n            instance.old_e = e;\n            instance.timeout = setTimeout(function() {\n                instance.mouseMove(e);\n            }, 50);\n        }\n    },\n    stop: function(e, ui) {\n        var instance = $(this).data(\"draggable\");\n        clearTimeout(instance.timeout);\n    }\n});\n"]}