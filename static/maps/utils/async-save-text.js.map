{"version":3,"sources":["utils/async-save-text.js"],"names":["define","jQuery","$","click_to_edit_elt","text_elt_id","save_url","text_parm_name","num_cols","use_textarea","num_rows","on_finish","undefined","click","t","length","attr","value","trim","old_text","size","blur","remove","cols","text_elt","show","this","ajax_data","url","data","alert","e","keyCode","success","val","trigger","processed_text","error","text","html","async_save_text","on_start","hide","insertAfter","focus","select"],"mappings":"aAAAA,QAAQ,UAAW,SAASC,GACxB,aAAA,IAAAC,EAAAD,EAuGA,OAhGA,SACIE,EADJC,EAWIC,EACAC,EACIC,EACHC,EACDC,EACIA,EACHC,QAGOP,IAANI,IACEA,EAAA,SAEII,IAAAF,IACHA,EAAA,GAJLP,EAAE,IAAMC,GAAmBS,MAAM,WAUzBC,KAAAA,EAAAA,oBAAMC,OACDC,GADLF,CAKIG,IADsCH,EACtCG,EAAOd,EAAEe,IAAKC,GACdC,EAAMZ,EAAAA,QAIZa,EADAL,EACKb,EAAA,yBACDa,MAAMM,KAARZ,EAAAa,KAAAf,IACAgB,KAASC,EAAAA,KAATN,IAEIR,EAAAA,+BAAAK,MACHC,MAAAd,EAAAe,KAAAC,GALLC,KAAAZ,KASQQ,KAAA,KAAA,mBACAb,EAAAA,KAAAA,WACHA,EAHDuB,MAGOJ,SACHE,EAAAC,OACAd,GACAgB,EAAUpB,KAGNqB,EAAAA,MAAAA,SAAKtB,GACLuB,GAAMF,KAANE,EAAAA,QAEIC,EAAAA,MAAAA,QACI,aAIJ,GAAA,KAAAC,EAAAC,QAAA,CAEJC,IAAAA,KACIN,EAAApB,GAAAJ,EAAAuB,MAAAQ,MACA/B,EAAAuB,MAAAS,QAAIC,QACAZ,EAAAA,MACHI,IAFDtB,EAGIkB,KAAAA,EACHa,MAAA,WACDP,MACInB,wBACHN,EACJ,YAVD4B,QAAS,SAASG,GAgB1B,KAAAA,EACHZ,EAAAc,KAAAF,GAEDZ,EAAAe,KAAA,iBAEA5B,GACAA,EAAAG,SAOD0B,GAxGXC,EAAA3B,GA8FYU,EAASkB,OACT5B,EAAE6B,YAAYnB,GACdV,EAAE8B,QACF9B,EAAE+B","file":"../../scripts/utils/async-save-text.js","sourcesContent":["define([\"jquery\"], function(jQuery) {\n    \"use_strict\";\n\n    var $ = jQuery;\n    // ============================================================================\n    /**\n * Edit and save text asynchronously.\n */\n    function async_save_text(\n        click_to_edit_elt,\n        text_elt_id,\n        save_url,\n        text_parm_name,\n        num_cols,\n        use_textarea,\n        num_rows,\n        on_start,\n        on_finish\n    ) {\n        // Set defaults if necessary.\n        if (num_cols === undefined) {\n            num_cols = 30;\n        }\n        if (num_rows === undefined) {\n            num_rows = 4;\n        }\n\n        // Set up input element.\n        $(\"#\" + click_to_edit_elt).click(function() {\n            // Check if this is already active\n            if ($(\"#renaming-active\").length > 0) {\n                return;\n            }\n            var text_elt = $(\"#\" + text_elt_id),\n                old_text = text_elt.text(),\n                t;\n\n            if (use_textarea) {\n                t = $(\"<textarea></textarea>\")\n                    .attr({ rows: num_rows, cols: num_cols })\n                    .text($.trim(old_text));\n            } else {\n                t = $(\"<input type='text'></input>\").attr({\n                    value: $.trim(old_text),\n                    size: num_cols\n                });\n            }\n            t.attr(\"id\", \"renaming-active\");\n            t.blur(function() {\n                $(this).remove();\n                text_elt.show();\n                if (on_finish) {\n                    on_finish(t);\n                }\n            });\n            t.keyup(function(e) {\n                if (e.keyCode === 27) {\n                    // Escape key\n                    $(this).trigger(\"blur\");\n                } else if (e.keyCode === 13) {\n                    // Enter key submits\n                    var ajax_data = {};\n                    ajax_data[text_parm_name] = $(this).val();\n                    $(this).trigger(\"blur\");\n                    $.ajax({\n                        url: save_url,\n                        data: ajax_data,\n                        error: function() {\n                            alert(\n                                \"Text editing for elt \" +\n                                    text_elt_id +\n                                    \" failed\"\n                            );\n                            // TODO: call finish or no? For now, let's not because error occurred.\n                        },\n                        success: function(processed_text) {\n                            // Set new text and call finish method.\n                            if (processed_text !== \"\") {\n                                text_elt.text(processed_text);\n                            } else {\n                                text_elt.html(\"<em>None</em>\");\n                            }\n                            if (on_finish) {\n                                on_finish(t);\n                            }\n                        }\n                    });\n                }\n            });\n\n            if (on_start) {\n                on_start(t);\n            }\n            // Replace text with input object and focus & select.\n            text_elt.hide();\n            t.insertAfter(text_elt);\n            t.focus();\n            t.select();\n\n            return;\n        });\n    }\n\n    // ============================================================================\n    return async_save_text;\n});\n"]}