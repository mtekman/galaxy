"use strict";define(["libs/underscore","libs/d3","viz/trackster/util","viz/visualization","viz/trackster/tracks","mvc/tool/tools","mvc/dataset/data","utils/config","mvc/ui/icon-button"],function(e,t,n,a,i,o,r,l,s){var c=Backbone.Model.extend({defaults:{inputs:null,values:null}}),d=Backbone.Model.extend({defaults:{tool:null,tree_data:null},initialize:function(t){var n=this;this.get("tool").get("inputs").each(function(e){e.on("change:min change:max change:num_samples",function(e){e.get("in_ptree")&&n.set_tree_data()},n),e.on("change:in_ptree",function(e){e.get("in_ptree")?n.add_param(e):n.remove_param(e),n.set_tree_data()},n)}),t.config&&e.each(t.config,function(e){var t=n.get("tool").get("inputs").find(function(t){return t.get("name")===e.name});n.add_param(t),t.set(e)})},add_param:function(e){e.get("ptree_index")||(e.set("in_ptree",!0),e.set("ptree_index",this.get_tree_params().length))},remove_param:function(t){t.set("in_ptree",!1),t.set("ptree_index",null),e(this.get_tree_params()).each(function(e,t){e.set("ptree_index",t+1)})},set_tree_data:function(){var t=e.map(this.get_tree_params(),function(e){return{param:e,samples:e.get_samples()}}),n=0;this.set("tree_data",{name:"Root",id:n++,children:0!==t.length?function t(a,i){var o=a[i],r=o.param,l=(r.get("label"),o.samples);return a.length-1===i?e.map(l,function(e){return{id:n++,name:e,param:r,value:e}}):e.map(l,function(e){return{id:n++,name:e,param:r,value:e,children:t(a,i+1)}})}(t,0):null})},get_tree_params:function(){return e(this.get("tool").get("inputs").where({in_ptree:!0})).sortBy(function(e){return e.get("ptree_index")})},get_num_leaves:function(){return this.get_tree_params().reduce(function(e,t){return e*t.get_samples().length},1)},get_node_settings:function(t){var n=this.get("tool").get_inputs_dict(),a=t.parent;if(a)for(;0!==a.depth;)n[a.param.get("name")]=a.value,a=a.parent;var i=this,o=function t(n,a){return n.param&&(a[n.param.get("name")]=n.value),n.children?e.flatten(e.map(n.children,function(n){return t(n,e.clone(a))})):new c({inputs:i.get("tool").get("inputs"),values:a})}(t,n);return e.isArray(o)||(o=[o]),o},get_connected_nodes:function(t){for(var n=[],a=t.parent;a;)n.push(a),a=a.parent;return e.flatten([n,function t(n){return n.children?e.flatten([n,e.map(n.children,function(e){return t(e)})]):n}(t)])},get_leaf:function(t){for(var n=this.get("tree_data");n.children;)n=function(n){return e.find(n,function(e){return t[e.param.get("name")]===e.value})}(n.children);return n},toJSON:function(){return this.get_tree_params().map(function(e){return{name:e.get("name"),min:e.get("min"),max:e.get("max"),num_samples:e.get("num_samples")}})}}),u=Backbone.Model.extend({defaults:{track:null,mode:"Pack",settings:null,regions:null},initialize:function(t){if(this.set("regions",t.regions),t.track){var n=e.extend({data_url:Galaxy.root+"dummy1",converted_datasets_state_url:Galaxy.root+"dummy2"},t.track);this.set("track",i.object_from_template(n,{},null))}},same_settings:function(e){var t=this.get("settings"),n=e.get("settings");for(var a in t)if(!n[a]||t[a]!==n[a])return!1;return!0},toJSON:function(){return{track:this.get("track").to_dict(),settings:this.get("settings"),regions:this.get("regions")}}}),_=Backbone.Collection.extend({model:u}),h=a.Visualization.extend({defaults:e.extend({},a.Visualization.prototype.defaults,{dataset:null,tool:null,parameter_tree:null,regions:null,tracks:null,default_mode:"Pack"}),initialize:function(e){this.set("dataset",new r.Dataset(e.dataset)),this.set("tool",new o.Tool(e.tool)),this.set("regions",new a.GenomeRegionCollection(e.regions)),this.set("tracks",new _(e.tracks));var t=this.get("tool");this.set("tool_with_samplable_inputs",t),t.remove_inputs(["data","hidden_data","conditional","text"]),this.set("parameter_tree",new d({tool:t,config:e.tree_config}))},add_track:function(e){this.get("tracks").add(e)},toJSON:function(){return{id:this.get("id"),title:"Parameter exploration for dataset '"+this.get("dataset").get("name")+"'",type:"sweepster",dataset_id:this.get("dataset").id,tool_id:this.get("tool").id,regions:this.get("regions").toJSON(),tree_config:this.get("parameter_tree").toJSON(),tracks:this.get("tracks").toJSON()}}}),m=Backbone.View.extend({tagName:"tr",TILE_LEN:250,initialize:function(e){this.canvas_manager=e.canvas_manager,this.render(),this.model.on("change:track change:mode",this.draw_tiles,this)},render:function(){var e=this.model.get("settings"),t=e.get("values"),n=$("<td/>").addClass("settings").appendTo(this.$el),a=$("<div/>").addClass("track-info").hide().appendTo(n);a.append($("<div/>").css("font-weight","bold").text("Track Settings")),e.get("inputs").each(function(e){a.append(e.get("label")+": "+t[e.get("name")]+"<br/>")});var i=this,o=($("<button/>").appendTo(a).text("Run on complete dataset").click(function(){a.toggle(),i.trigger("run_on_dataset",e)}),s.create_icon_buttons_menu([{title:"Settings",icon_class:"gear track-settings",on_click:function(){a.toggle()}},{title:"Remove",icon_class:"cross-circle",on_click:function(){i.$el.remove(),$(".tooltip").remove()}}]));n.prepend(o.$el),this.model.get("regions").each(function(){i.$el.append($("<td/>").addClass("tile").html($("<img/>").attr("src",Galaxy.root+"images/loading_large_white_bg.gif")))}),this.model.get("track")&&this.draw_tiles()},draw_tiles:function(){var e=this,t=this.model.get("track"),n=this.model.get("regions"),a=this.$el.find("td.tile");t&&$.when(t.data_manager.data_is_ready()).then(function(i){n.each(function(n,i){var o=n.length()/e.TILE_LEN,r=1/o,l=e.model.get("mode");$.when(t.data_manager.get_data(n,l,o,{})).then(function(o){var s=e.canvas_manager.new_canvas();s.width=e.TILE_LEN,s.height=t.get_canvas_height(o,l,r,s.width),t.draw_tile(o,s.getContext("2d"),l,n,r),$(a[i]).empty().append(s)})})})}}),g=Backbone.View.extend({number_input_template:'<div class="form-row-input sweep"><input class="min" type="text" size="6" value="<%= min %>"> - <input class="max" type="text" size="6" value="<%= max %>"> samples: <input class="num_samples" type="text" size="1" value="<%= num_samples %>"></div>',select_input_template:'<div class="form-row-input sweep"><%= options %></div>',initialize:function(e){this.$el=e.tool_row,this.render()},render:function(){var t=this.model,n=(t.get("type"),this.$el.find(".form-row-input")),a=null;if(n.find(":input").change(function(){t.set("value",$(this).val())}),t instanceof o.IntegerToolParameter)a=$(e.template(this.number_input_template)(this.model.toJSON()));else if(t instanceof o.SelectToolParameter){var i=e.map(this.$el.find("select option"),function(e){return $(e).val()}).join(", ");a=$(e.template(this.select_input_template)({options:i}))}a.insertAfter(n);var r=this,l=s.create_icon_buttons_menu([{title:"Add parameter to tree",icon_class:"plus-button",on_click:function(){t.set("in_ptree",!0),n.hide(),a.show(),$(this).hide(),r.$el.find(".icon-button.toggle").show()}},{title:"Remove parameter from tree",icon_class:"toggle",on_click:function(){t.set("in_ptree",!1),a.hide(),n.show(),$(this).hide(),r.$el.find(".icon-button.plus-button").show()}}],{});this.$el.prepend(l.$el),t.get("in_ptree")?(n.hide(),r.$el.find(".icon-button.plus-button").hide()):(r.$el.find(".icon-button.toggle").hide(),a.hide()),e.each(["min","max","num_samples"],function(e){a.find("."+e).change(function(){t.set(e,parseFloat($(this).val()))})})}}),p=Backbone.View.extend({className:"tree-design",initialize:function(e){this.render()},render:function(){var e=new o.ToolFormView({model:this.model.get("tool")});e.render(),this.$el.append(e.$el);var t=this.model.get("tool").get("inputs");this.$el.find(".form-row").not(".form-actions").each(function(e){new g({model:t.at(e),tool_row:$(this)})})}}),f=Backbone.View.extend({className:"tool-parameter-tree",initialize:function(e){this.model.on("change:tree_data",this.render,this)},render:function(){this.$el.children().remove();var n=this.model.get_tree_params();if(n.length){this.width=100*(2+n.length),this.height=15*this.model.get_num_leaves();var a=this,i=t.layout.cluster().size([this.height,this.width-160]),o=t.svg.diagonal().projection(function(e){return[e.y,e.x]}),r=i.nodes(this.model.get("tree_data")),l=e.uniq(e.pluck(r,"y"));e.each(n,function(e,t){var n=l[t+1],i=$("#center").position().left;a.$el.append($("<div>").addClass("label").text(e.get("label")).css("left",n+i))});var s=t.select(this.$el[0]).append("svg").attr("width",this.width).attr("height",this.height+30).append("g").attr("transform","translate(40, 20)"),c=(s.selectAll("path.link").data(i.links(r)).enter().append("path").attr("class","link").attr("d",o),s.selectAll("g.node").data(r).enter().append("g").attr("class","node").attr("transform",function(e){return"translate("+e.y+","+e.x+")"}).on("mouseover",function(t){var n=e.pluck(a.model.get_connected_nodes(t),"id");c.filter(function(t){return void 0!==e.find(n,function(e){return e===t.id})}).style("fill","#f00")}).on("mouseout",function(){c.style("fill","#000")}));c.append("circle").attr("r",9),c.append("text").attr("dx",function(e){return e.children?-12:12}).attr("dy",3).attr("text-anchor",function(e){return e.children?"end":"start"}).text(function(e){return e.name})}}});return{SweepsterVisualization:h,SweepsterVisualizationView:Backbone.View.extend({className:"Sweepster",helpText:"<div><h4>Getting Started</h4><ol><li>Create a parameter tree by using the icons next to the tool's parameter names to add or remove parameters.<li>Adjust the tree by using parameter inputs to select min, max, and number of samples<li>Run the tool with different settings by clicking on tree nodes</ol></div>",initialize:function(e){this.canvas_manager=new a.CanvasManager(this.$el.parents("body")),this.tool_param_tree_view=new f({model:this.model.get("parameter_tree")}),this.track_collection_container=$("<table/>").addClass("tracks"),this.model.get("parameter_tree").on("change:tree_data",this.handle_node_clicks,this);var t=this;this.model.get("tracks").each(function(e){e.get("track").view=t}),this.config=l.ConfigSettingCollection.from_models_and_saved_values([{key:"name",label:"Name",type:"text",default_value:""},{key:"a_color",label:"A Color",type:"color",default_value:"#FF0000"},{key:"c_color",label:"C Color",type:"color",default_value:"#00FF00"},{key:"g_color",label:"G Color",type:"color",default_value:"#0000FF"},{key:"t_color",label:"T Color",type:"color",default_value:"#FF00FF"},{key:"n_color",label:"N Color",type:"color",default_value:"#AAAAAA"},{key:"block_color",label:"Block color",type:"color"},{key:"reverse_strand_color",label:"Antisense strand color",type:"color"}],{})},render:function(){var t=new p({model:this.model.get("parameter_tree")});$("#left").append(t.$el);var n=this,a=n.model.get("regions"),i=$("<tr/>").appendTo(this.track_collection_container);a.each(function(e){i.append($("<th>").text(e.toString()))}),i.children().first().attr("colspan",2);var o=$("<div>").addClass("tiles");$("#right").append(o.append(this.track_collection_container)),n.model.get("tracks").each(function(e){n.add_track(e)});var r=$(this.helpText).addClass("help"),l=s.create_icon_buttons_menu([{title:"Close",icon_class:"cross-circle",on_click:function(){$(".tooltip").remove(),r.remove()}}]);r.prepend(l.$el.css("float","right")),$("#center").append(r),this.tool_param_tree_view.render(),$("#center").append(this.tool_param_tree_view.$el),this.handle_node_clicks();var c=s.create_icon_buttons_menu([{icon_class:"chevron-expand",title:"Set display mode"},{icon_class:"cross-circle",title:"Close",on_click:function(){window.location="${h.url_for( controller='visualization', action='list' )}"}}],{tooltip_config:{placement:"bottom"}}),d=["Squish","Pack"],u={};e.each(d,function(e){u[e]=function(){n.model.set("default_mode",e),n.model.get("tracks").each(function(t){t.set("mode",e)})}}),make_popupmenu(c.$el.find(".chevron-expand"),u),c.$el.attr("style","float: right"),$("#right .unified-panel-header-inner").append(c.$el)},get_base_color:function(e){return this.config.get_value(e.toLowerCase()+"_color")||this.config.get_value("n_color")},run_tool_on_dataset:function(e){var t=this.model.get("tool"),n=t.get("name"),a=this.model.get("dataset");t.set_input_values(e.get("values")),$.when(t.rerun(a)).then(function(e){}),show_modal("Running "+n+" on complete dataset",n+" is running on dataset '"+a.get("name")+"'. Outputs are in the dataset's history.",{Ok:function(){hide_modal()}})},add_track:function(n){var a=this,i=this.model.get("parameter_tree");a.model.add_track(n);var o=new m({model:n,canvas_manager:a.canvas_manager});return o.on("run_on_dataset",a.run_tool_on_dataset,a),a.track_collection_container.append(o.$el),o.$el.hover(function(){var o=i.get_leaf(n.get("settings").get("values")),r=e.pluck(i.get_connected_nodes(o),"id");t.select(a.tool_param_tree_view.$el[0]).selectAll("g.node").filter(function(t){return void 0!==e.find(r,function(e){return e===t.id})}).style("fill","#f00")},function(){t.select(a.tool_param_tree_view.$el[0]).selectAll("g.node").style("fill","#000")}),n},handle_node_clicks:function(){var n=this,a=this.model.get("parameter_tree"),o=this.model.get("regions");t.select(this.tool_param_tree_view.$el[0]).selectAll("g.node").on("click",function(t,r){var l=n.model.get("tool"),s=n.model.get("dataset"),c=a.get_node_settings(t),d=$.Deferred();c.length>=10?show_modal("Whoa there cowboy!","You clicked on a node to try "+n.model.get("tool").get("name")+" with "+c.length+" different combinations of settings. You can only run 10 jobs at a time.",{Ok:function(){hide_modal(),d.resolve(!1)}}):d.resolve(!0),$.when(d).then(function(t){if(t){var a=e.map(c,function(e){var t=new u({settings:e,regions:o,mode:n.model.get("default_mode")});return n.add_track(t),t});e.each(a,function(e,t){setTimeout(function(){l.set_input_values(e.get("settings").get("values")),$.when(l.rerun(s,o)).then(function(t){var a=t.first(),o=a.get("track_config");o.dataset=a,o.tool=null,o.prefs=n.config.to_key_value_dict();var r=i.object_from_template(o,n,null);r.init_for_tool_data(),e.set("track",r)})},1e4*t)})}})})}})}});
//# sourceMappingURL=../../maps/viz/sweepster.js.map
